assertNotNull ( yUICompressor0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertNotNull ( scriptOrFnScope0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( 1489 , int0 )
assertNotNull ( string0 )
assertEquals ( 0 , javaScriptIdentifier0 . getRefcount ( ) )
assertEquals ( 1 , javaScriptIdentifier0 . getRefcount ( ) )
assertEquals ( true , javaScriptIdentifier0 . isMarkedForMunging ( ) )
assertEquals ( true , javaScriptIdentifier0 . isMarkedForMunging ( ) )
assertEquals ( 0 , javaScriptIdentifier0 . getRefcount ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( string0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertNotNull ( decompiler0 )
assertEquals ( 257 , decompiler0 . getCurrentOffset ( ) )
assertEquals ( "'\u00000\u0002 / / 0\u00FA / ( Lorg / mozilla / javascript / Context ; Lorg / mozilla / javascript / Scriptable ; ILjava / lang / Object ; Ljava / lang / Object ; ) Ljava / lang / Object ; / ( Lorg / mozilla / javascript / Context ; Lorg / mozilla / javascript / Scriptable ; ILjava / lang / Object ; Ljava / lang / Object ; ) Ljava / lang / Object ; " , decompiler0 . getEncodedSource ( ) )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "p > = \n" , string0 )
assertEquals ( "\nfunction 10000000000000020N6D ] { Yulrh & F9 . FT2function ~\n27 / N6D ] { Yulrh & F9 . FT2 / N6D ] { Yulrh & F9 . FT2\n" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "\nfor } ] * = } typeof + + - - } " , string0 )
assertEquals ( " & & & & \" , : r%U - ` - wdj\"" , string0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertNull ( string0 )
assertNull ( parser0 . getEncodedSource ( ) )
assertEquals ( "564" , string0 )
assertNotNull ( token0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertEquals ( true , boolean0 )
assertNotNull ( tokenStream0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( scriptOrFnNode0 )
assertNotNull ( tokenStream0 )
assertEquals ( - 1 , charArrayReader0 . read ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( scriptOrFnNode0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( - 1 , charArrayReader0 . read ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertEquals ( true , boolean0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
assertNotNull ( tokenStream0 )
