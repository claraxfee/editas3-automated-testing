assertEquals ( "SQuirreL SQL Client" , string0 )
assertEquals ( "Copyright ( c ) 2001 - 2011 \nColin Bell , Gerd Wagner , Rob Manning and others" , string0 )
assertEquals ( "SQuirreL SQL Client Version $ { squirrelsql . version } " , string0 )
assertNotNull ( string0 )
assertEquals ( "http : / / www . squirrelsql . org" , string0 )
assertEquals ( "SQuirreL SQL Client" , version0 . getApplicationName ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "Monospaced" , fontInfo0 . getFamily ( ) )
assertNotNull ( fontInfoStore0 )
assertEquals ( "0 . 1" , string0 )
assertEquals ( "Dummy Application Plugin" , string0 )
assertEquals ( "app" , string0 )
assertEquals ( "Colin Bell" , string0 )
assertNull ( iApplication0 )
assertNull ( applicationArguments0 . getLoggingConfigFileName ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNotNull ( applicationArguments0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( applicationArguments0 )
assertNotNull ( fileTransformer0 )
assertNull ( string0 )
assertNull ( windowManager0 )
assertNull ( sQLDriverManager0 )
assertNull ( actionCollection0 )
assertNull ( dummyAppPlugin0 . getLicenceFileName ( ) )
assertNull ( sessionManager0 )
assertNull ( sQLHistory0 )
assertNull ( desktopStyle0 )
assertNotNull ( multipleWindowsHandler0 )
assertNull ( dataCache0 )
assertNull ( loggerController0 )
assertNull ( squirrelResources0 )
assertNotNull ( fontInfoStore0 )
assertNull ( iPluginManager0 )
assertNotNull ( taskThreadPool0 )
assertNotNull ( squirrelLoggerFactory0 )
assertNotNull ( squirrelLoggerFactory0 )
assertNotNull ( squirrelLoggerFactory0 )
assertNotNull ( actionKeys0 )
assertNotNull ( actionKeys0 )
assertNotNull ( actionKeys0 )
assertEquals ( 0 , actionKeys0 . getMnemonic ( ) )
assertNotNull ( actionKeys0 )
assertNotNull ( actionKeys0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( pluginSummaryTable0 )
assertNotNull ( preferenceUtil0 )
assertSame ( dBCopyPlugin1 , dBCopyPlugin0 )
assertEquals ( true , pluginStatus0 . isLoadAtStartup ( ) )
assertEquals ( true , pluginStatus0 . isLoadAtStartup ( ) )
assertEquals ( true , pluginStatus0 . isLoadAtStartup ( ) )
assertEquals ( true , pluginStatus0 . isLoadAtStartup ( ) )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertNull ( pluginGlobalPreferencesTab0 . getHint ( ) )
assertNull ( string0 )
assertEquals ( true , jScrollPane0 . getVerifyInputWhenFocusTarget ( ) )
assertNull ( pluginGlobalPreferencesTab0 . getTitle ( ) )
assertNull ( pluginGlobalPreferencesTab0 . getTitle ( ) )
assertNull ( pluginGlobalPreferencesTab0 . getTitle ( ) )
assertNull ( pluginGlobalPreferencesTab0 . getTitle ( ) )
assertEquals ( "SQL" , sQLPreferencesPanel0 . getHint ( ) )
assertNotNull ( string0 )
assertEquals ( "SQL" , string0 )
assertEquals ( true , jScrollPane0 . isRequestFocusEnabled ( ) )
assertEquals ( "projects / squirrel - sql / files / updates" , updateSettings0 . getUpdateServerPath ( ) )
assertEquals ( "80" , updateSettings1 . getUpdateServerPort ( ) )
assertEquals ( "WEEKLY" , updateSettings0 . getUpdateCheckFrequency ( ) )
assertEquals ( true , updateSettings0 . isRemoteUpdateSite ( ) )
assertEquals ( "0" , updateSettings0 . getLastUpdateCheckTimeMillis ( ) )
assertEquals ( true , updateSettings0 . isEnableAutomaticUpdates ( ) )
assertEquals ( "80" , updateSettings0 . getUpdateServerChannel ( ) )
assertEquals ( "projects / squirrel - sql / files / updates" , updateSettings1 . getUpdateServerPath ( ) )
assertEquals ( "sourceforge . net" , updateSettings0 . getUpdateServer ( ) )
assertEquals ( "80" , updateSettings0 . getUpdateServerPort ( ) )
assertEquals ( true , updateSettings0 . isRemoteUpdateSite ( ) )
assertEquals ( "www . squirrel - sql . net" , updateSettings0 . getUpdateServer ( ) )
assertEquals ( "" , string0 )
assertEquals ( UpdateCheckFrequency . STARTUP , updateCheckFrequency1 )
assertEquals ( "General" , generalPreferencesPanel0 . getHint ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( jScrollPane0 )
assertEquals ( "Data Type Controls" , dataTypePreferencesPanel0 . getTitle ( ) )
assertEquals ( "Set options for specific Data Types" , string0 )
assertEquals ( Component . BaselineResizeBehavior . CONSTANT_ASCENT , jScrollPane0 . getBaselineResizeBehavior ( ) )
assertEquals ( "Data Type Controls" , string0 )
assertEquals ( "Data Type Controls" , dataTypePreferencesPanel0 . getTitle ( ) )
assertEquals ( "Data Type Controls" , dataTypePreferencesPanel0 . getTitle ( ) )
assertEquals ( "Data Type Controls" , dataTypePreferencesPanel0 . getTitle ( ) )
assertNull ( iApplication0 )
assertEquals ( true , wikiTablePreferencesPanel0 . isFocusTraversable ( ) )
assertEquals ( false , wikiTablePreferencesPanel0 . isFocusOwner ( ) )
assertNotNull ( wikiTableConfigurationFactory0 )
assertEquals ( true , wikiTablePreferencesPanel0 . isEnabled ( ) )
assertEquals ( 1 , wikiTablePreferencesPanel0 . getComponentCount ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( "cG { ^3 R2CveB#3 > " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "Wiki Table" , string0 )
assertEquals ( "Wiki Table" , wikiTablePreferencesTab0 . getTitle ( ) )
assertEquals ( "Configure exports for a Wiki table" , string0 )
assertSame ( wikiTablePreferencesPanel1 , wikiTablePreferencesPanel0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertEquals ( true , squirrelPreferences0 . getTabbedStyle ( ) )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertEquals ( false , squirrelPreferences0 . getShowContentsWhenDragging ( ) )
assertNotNull ( squirrelPreferences0 )
assertEquals ( true , squirrelPreferences0 . getShowMainStatusBar ( ) )
assertNotNull ( squirrelPreferences0 )
assertEquals ( true , squirrelPreferences0 . getShowMainToolBar ( ) )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertEquals ( false , squirrelPreferences0 . getUseScrollableTabbedPanes ( ) )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( squirrelPreferences0 )
assertNotNull ( updatePreferencesPanel0 )
assertEquals ( false , updatePreferencesPanel0 . isMaximumSizeSet ( ) )
assertEquals ( false , updatePreferencesPanel0 . isValid ( ) )
assertEquals ( "Update" , string0 )
assertEquals ( "Software Update Settings" , string0 )
assertEquals ( "Update" , updatePreferencesTab0 . getTitle ( ) )
assertNotNull ( updatePreferencesPanel1 )
assertEquals ( "Proxy" , string0 )
assertEquals ( "Proxy Server Settings" , proxyPreferencesPanel0 . getHint ( ) )
assertEquals ( "Proxy Server Settings" , string0 )
assertEquals ( false , component0 . requestFocusInWindow ( ) )
assertEquals ( 0 , jComboBox0 . getSelectedIndex ( ) )
assertEquals ( false , vector0 . isEmpty ( ) )
assertEquals ( 8 , jComboBox0 . getItemCount ( ) )
assertEquals ( 5 , jComboBox0 . getSelectedIndex ( ) )
assertEquals ( Component . BaselineResizeBehavior . CENTER_OFFSET , jComboBox0 . getBaselineResizeBehavior ( ) )
assertNotNull ( formatSqlPref0 )
assertNotNull ( keywordBehaviourPrefArray0 )
assertNotNull ( formatSqlPref0 )
assertNotNull ( formatSqlPref0 )
assertNotNull ( formatSqlPref0 )
assertNotNull ( formatSqlPref0 )
assertEquals ( 80 , formatSqlPref0 . getPreferedLineLength ( ) )
assertNotNull ( formatSqlPref0 )
assertNotNull ( formatSqlPrefReader0 )
assertEquals ( 80 , formatSqlPref0 . getPreferedLineLength ( ) )
assertEquals ( 2 , formatSqlPanel0 . getComponentCount ( ) )
assertEquals ( 0 , keywordBehaviourPref0 . getKeywordBehaviourId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1772 , keywordBehaviourPref0 . getKeywordBehaviourId ( ) )
assertEquals ( - 1259 , keywordBehaviourPref0 . getKeywordBehaviourId ( ) )
assertNull ( keywordBehaviourPref0 . getKeyWord ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( sQLEntryPanelUtil0 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( intArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( file0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNotNull ( extendedColumnInfo0 )
assertNull ( string0 )
assertNotNull ( editableSqlCheck0 )
assertEquals ( 0L , sQLExecutionInfo0 . getSQLExecutionElapsedMillis ( ) )
assertEquals ( "0s : $" , sQLExecutionInfo0 . getSQL ( ) )
assertEquals ( 0 , arrayList0 . size ( ) )
assertNotNull ( messagePanel0 )
assertEquals ( 0 , messagePanel0 . getComponentCount ( ) )
assertNotNull ( messagePanel0 )
assertNotNull ( messagePanel0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNotNull ( sQLExecutionInfo0 )
assertNull ( iSession0 )
assertEquals ( Thread . State . TERMINATED , cancelStatementThread0 . getState ( ) )
assertEquals ( 828L , cancelStatementThread0 . getId ( ) )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertEquals ( false , dataSetUpdateableTableModelImpl0 . editModeIsForced ( ) )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertNotNull ( dataSetUpdateableTableModelImpl0 )
assertEquals ( " ; " , defaultDataModelImplementationDetails0 . getStatementSeparator ( ) )
assertNotNull ( string0 )
assertEquals ( false , file0 . isHidden ( ) )
assertNotNull ( formatSQLCommand0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "Where clause for the selected table" , string0 )
assertEquals ( "Where Clause" , whereClausePanel0 . getClauseIdentifier ( ) )
assertEquals ( "Where Clause" , whereClausePanel0 . getClauseIdentifier ( ) )
assertEquals ( 0 , component0 . getX ( ) )
assertEquals ( "Where Clause" , whereClausePanel0 . getClauseIdentifier ( ) )
assertEquals ( "Where Clause" , string0 )
assertEquals ( "Order by clause for the selected table" , string0 )
assertEquals ( false , component0 . isShowing ( ) )
assertEquals ( "Order By Clause" , orderByClausePanel0 . getClauseIdentifier ( ) )
assertEquals ( "Order By Clause" , string0 )
assertEquals ( "Order By Clause" , orderByClausePanel0 . getTitle ( ) )
assertNull ( sQLFilterSheet0 )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( 100 , sessionProperties0 . getContentsNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertNotNull ( string0 )
assertEquals ( "net . sourceforge . squirrel_sql . fw . datasetviewer . DataSetViewerTablePanel" , sessionProperties0 . getCatalogFilterInclude ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( true , sessionProperties0 . getShowRowCount ( ) )
assertEquals ( 100 , int0 )
assertEquals ( 100 , sessionProperties0 . getContentsNbrRowsToShow ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getLimitSQLEntryHistorySize ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getShowResultsMetaData ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "#_fBU ; U" , sessionProperties0 . getSchemaFilterInclude ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( false , sessionProperties0 . getSQLShareHistory ( ) )
assertNotNull ( string0 )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( "net . sourceforge . squirrel_sql . fw . datasetviewer . DataSetViewerTablePanel" , sessionProperties0 . getCatalogFilterExclude ( ) )
assertEquals ( " ; " , sessionProperties0 . getSchemaFilterExclude ( ) )
assertEquals ( 50 , int0 )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( true , sessionProperties0 . getSQLLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getSQLLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( false , sessionProperties0 . getRemoveMultiLineComment ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( "#_fBU ; U" , sessionProperties0 . getStartOfLineComment ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( " / ( [ + C . ? * rl@ | " , sessionProperties0 . getObjectFilterInclude ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertNotNull ( sessionProperties1 )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( "" , sessionProperties0 . getMetaDataOutputClassName ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( "" , sessionProperties0 . getTableContentsOutputClassName ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( "" , sessionProperties0 . getReadOnlySQLResultsOutputClassName ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( false , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getAbortOnError ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( false , sessionProperties0 . getShowSQLErrorsInTab ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getWriteSQLErrorsToLog ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getLoadColumnsInBackground ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( 1 , sessionProperties0 . getSqlResultTabLimit ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( false , sessionProperties0 . getShowToolBar ( ) )
assertEquals ( true , sessionProperties0 . getLoadSchemasCatalogs ( ) )
assertEquals ( - 158 , sessionProperties0 . getContentsNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getShowResultsMetaData ( ) )
assertEquals ( 27 , sessionProperties0 . getSQLNbrRowsToShow ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getSQLLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getSQLLimitRows ( ) )
assertEquals ( 0 , sessionProperties0 . getSQLFetchSize ( ) )
assertEquals ( true , sessionProperties0 . getSQLLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getSQLUseFetchSize ( ) )
assertEquals ( " ; " , sessionProperties0 . getSQLStatementSeparator ( ) )
assertEquals ( " ; " , sessionProperties0 . getSQLStatementSeparator ( ) )
assertEquals ( "dOgate" , sessionProperties0 . getSQLStatementSeparator ( ) )
assertEquals ( true , sessionProperties0 . getContentsLimitRows ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( 1 , sessionProperties0 . getSqlPanelOrientation ( ) )
assertEquals ( true , sessionProperties0 . getAutoCommit ( ) )
assertEquals ( 27 , sessionProperties0 . getMainTabPlacement ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( 100 , sessionProperties0 . getObjectTabPlacement ( ) )
assertEquals ( false , sessionProperties0 . getCommitOnClosingConnection ( ) )
assertEquals ( 598 , sessionProperties0 . getSQLExecutionTabPlacement ( ) )
assertEquals ( true , sessionProperties0 . getShowResultsMetaData ( ) )
assertEquals ( 100 , sessionProperties0 . getSQLResultsTabPlacement ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertNull ( hashMap0 )
assertEquals ( false , jScrollPane0 . getInheritsPopupMenu ( ) )
assertEquals ( "General" , string0 )
assertEquals ( "General settings for the current session" , string0 )
assertEquals ( true , treeMap0 . isEmpty ( ) )
assertEquals ( 0 , treeMap0 . size ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( list0 )
assertEquals ( "Te#U . " , caseInsensitiveString0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertNotNull ( caseInsensitiveString0 )
assertNotNull ( caseInsensitiveString0 )
assertNotNull ( caseInsensitiveString0 )
assertNotNull ( caseInsensitiveString0 )
assertNotNull ( caseInsensitiveString0 )
assertNotNull ( caseInsensitiveString0 )
assertEquals ( "\u0000" , caseInsensitiveString0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( caseInsensitiveString0 )
assertEquals ( "\u0000" , caseInsensitiveString0 . toString ( ) )
assertNotNull ( caseInsensitiveString0 )
assertEquals ( 71 , int0 )
assertEquals ( 113 , int0 )
assertNotNull ( caseInsensitiveString1 )
assertNotNull ( filterMatcher0 )
assertNotNull ( filterMatcher0 )
assertNotNull ( filterMatcher0 )
assertEquals ( "wd_y" , filterMatcher0 . getSqlLikeMatchString ( ) )
assertNotNull ( filterMatcher0 )
assertNotNull ( filterMatcher0 )
assertNotNull ( filterMatcher0 )
assertNotNull ( schemaInfoCacheSerializer0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( schemaInfo0 )
assertNotNull ( sQLHistoryItem0 )
assertEquals ( "" , sQLHistoryItem0 . getAliasName ( ) )
assertNull ( date0 )
assertEquals ( "" , string0 )
assertNotSame ( sQLHistoryItem1 , sQLHistoryItem0 )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertEquals ( "sU * t ) " , sQLHistoryItem0 . toString ( ) )
assertNotNull ( sQLHistoryItem0 )
assertNotNull ( sQLHistoryItem0 )
assertNotNull ( sQLHistoryItem0 )
assertNotNull ( stringArray0 )
assertEquals ( 2 , int0 )
assertEquals ( " * " , string0 )
assertEquals ( 1 , arrayList0 . size ( ) )
assertNotNull ( sQLHistoryItemWrapper0 )
assertNull ( integer0 )
assertNotNull ( sQLHistoryItemWrapper0 )
assertEquals ( "Objects" , objectTreeTab0 . getTitle ( ) )
assertNotNull ( string0 )
assertNull ( component0 )
assertEquals ( "Objects" , objectTreeTab0 . getTitle ( ) )
assertNull ( iSession0 )
assertEquals ( "Objects" , objectTreeTab0 . getTitle ( ) )
assertEquals ( "Show database objects" , objectTreeTab0 . getHint ( ) )
assertNotNull ( sQLHistoryItemArray0 )
assertEquals ( "" , sQLHistoryItem0 . toString ( ) )
assertEquals ( true , squirrelDefaultUndoManager0 . canUndoOrRedo ( ) )
assertEquals ( "style change" , squirrelDefaultUndoManager0 . getPresentationName ( ) )
assertEquals ( true , squirrelDefaultUndoManager0 . isSignificant ( ) )
assertNotNull ( string0 )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertEquals ( 0 , sQLHistoryComboBoxModel0 . getSize ( ) )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertNotNull ( sQLHistoryComboBoxModel0 )
assertNotNull ( arrayList0 )
assertEquals ( "regular exp" , string0 )
assertEquals ( true , sQLHistoryComboBox0 . isOptimizedDrawingEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , sQLHistoryComboBox0 . getIgnoreRepaint ( ) )
assertNotNull ( sQLHistoryComboBox0 )
assertEquals ( 14 , int0 )
assertNotNull ( chartConfigPanelTab0 )
assertNotNull ( chartConfigPanelTab0 )
assertNotNull ( chartConfigPanelTab0 )
assertEquals ( 88 , int0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertNotNull ( callDepthComboModelArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , callDepthComboModel1 . getCallDepth ( ) )
assertEquals ( - 1673 , callDepthComboModel1 . getCallDepth ( ) )
assertNotNull ( chartConfigModeArray0 )
assertNotNull ( chartConfigModeArray0 )
assertNotNull ( chartConfigModeArray0 )
assertNull ( list0 )
assertNull ( iIdentifier0 )
assertNotNull ( tableTypeExpander0 )
assertNotNull ( uDTTypeExpander0 )
assertEquals ( 2 , javabeanDataSet0 . getColumnCount ( ) )
assertEquals ( "Basic information" , string0 )
assertEquals ( "Info" , string0 )
assertNull ( iDatabaseObjectInfo0 )
assertEquals ( "Info" , databaseObjectInfoTab0 . getTitle ( ) )
assertEquals ( "Basic information" , databaseObjectInfoTab0 . getHint ( ) )
assertNotNull ( lineNumber0 )
assertNotNull ( lineNumber0 )
assertNotNull ( lineNumber0 )
assertNotNull ( lineNumber0 )
assertNotNull ( lineNumber0 )
assertEquals ( "Basic information" , databaseObjectInfoTab0 . getHint ( ) )
assertNotNull ( string0 )
assertEquals ( "Number of rows in the selected table" , string0 )
assertEquals ( "ImportedKeysTab . hint" , string0 )
assertEquals ( "ImportedKeysTab . title" , string0 )
assertEquals ( "Exported Keys" , string0 )
assertEquals ( "Show tables that the selected table makes reference to" , string0 )
assertNotNull ( string0 )
assertEquals ( "ExportedKeysTab . title" , string0 )
assertEquals ( "ExportedKeysTab . hint" , string0 )
assertNotNull ( tablePriviligesTab0 )
assertNotNull ( tablePriviligesTab0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( columnPriviligesTab0 )
assertNotNull ( columnPriviligesTab0 )
assertEquals ( "Show columns that are automatically updated when the row is updated" , string0 )
assertEquals ( "Versions" , string0 )
assertEquals ( "Versions" , versionColumnsTab0 . getTitle ( ) )
assertNull ( iTableInfo0 )
assertEquals ( "Row IDs" , string0 )
assertEquals ( "Show columns that uniquely identify a row" , string0 )
assertEquals ( "Show columns for the selected table" , string0 )
assertNotNull ( string0 )
assertEquals ( "Indexes" , string0 )
assertEquals ( "Show indexes for the selected table" , string0 )
assertEquals ( "Columns" , procedureColumnsTab0 . getTitle ( ) )
assertNull ( iProcedureInfo0 )
assertEquals ( "Show columns for the selected procedure" , string0 )
assertNotNull ( string0 )
assertEquals ( "Data Types" , string0 )
assertNotNull ( string0 )
assertEquals ( "Time / Date Functions" , string0 )
assertEquals ( "Show all the numeric functions available in DBMS" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "Table Types" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "Show database metadata" , string0 )
assertEquals ( "Metadata" , string0 )
assertNotNull ( string0 )
assertEquals ( "System Functions" , string0 )
assertNotNull ( string0 )
assertEquals ( "String Functions" , string0 )
assertEquals ( "Show all the catalogs" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "Show all the schemas" , string0 )
assertNull ( string0 )
assertNull ( parser0 . LookAheadName ( ) )
assertNull ( parser0 . LookAheadString ( ) )
assertNull ( string0 )
assertNull ( parser0 . LookAheadString ( ) )
assertNull ( parser0 . LookAheadName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1285 , tableAliasInfo0 . statBegin )
assertNotNull ( scanner_SBuffer0 )
assertNotNull ( scanner_SBuffer0 )
assertNotNull ( scanner_SBuffer0 )
assertNotNull ( scanner_SBuffer0 )
assertEquals ( false , boolean0 )
assertEquals ( 100017 , int0 )
assertNull ( sQLColumn1 )
assertEquals ( 0 , int0 )
assertEquals ( 100000 , sQLSelectStatement0 . getLength ( ) )
assertEquals ( 100000 , sQLModifyingStatement0 . getLength ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 100017 , sQLTable0 . getLength ( ) )
assertEquals ( 100000 , sQLModifyingStatement0 . getLength ( ) )
assertEquals ( 99999 , sQLSelectStatement0 . getLength ( ) )
assertEquals ( 13 , sQLTable0 . getLength ( ) )
assertEquals ( 100000 , sQLSelectStatement0 . getLength ( ) )
assertEquals ( 100017 , sQLTable0 . getLength ( ) )
assertNotNull ( parserThread0 )
assertNotNull ( parserThread0 )
assertNotNull ( parserThread0 )
assertNotNull ( parserThread0 )
assertNotNull ( parserThread0 )
assertNotNull ( parserThread0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLColumn0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertEquals ( - 34 , sQLSelectStatement0 . getStart ( ) )
assertEquals ( 11 , sQLSelectStatement0 . getStart ( ) )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertNotNull ( sQLSelectStatement0 )
assertNull ( sQLTable0 )
assertSame ( sQLColumn1 , sQLColumn0 )
assertNull ( sQLColumn0 )
assertNotNull ( sQLTable0 )
assertEquals ( "GQ" , string0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLTable0 )
assertNotNull ( sQLWhere0 )
assertNotNull ( sQLWhere0 )
assertNotNull ( sQLWhere0 )
assertNotNull ( sQLWhere0 )
assertNotNull ( sQLWhere0 )
assertNotNull ( sQLWhere0 )
assertNull ( sQLSchema_Table0 )
assertEquals ( 365 , sQLSelectStatement1 . getStart ( ) )
assertEquals ( true , sQLTable1 . isRepeatable ( ) )
assertNull ( sQLColumn1 )
assertNull ( completion0 )
assertNull ( completion0 )
assertEquals ( false , sQLModifyingStatement0 . isRepeatable ( ) )
assertEquals ( 1 , sQLSelectStatement0 . getLength ( ) )
assertEquals ( true , sQLColumn0 . isRepeatable ( ) )
assertEquals ( true , sQLColumn0 . isConcrete ( ) )
assertEquals ( true , sQLColumn0 . isRepeatable ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , sQLColumn0 . isRepeatable ( ) )
assertEquals ( true , sQLColumn0 . isRepeatable ( ) )
assertEquals ( true , sQLColumn0 . isRepeatable ( ) )
assertEquals ( 1 , sQLColumn0 . getLength ( ) )
assertNotNull ( stringArray0 )
assertEquals ( 1861 , sQLColumn0 . getLength ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 12 , sQLColumn0 . getLength ( ) )
assertEquals ( 12 , sQLColumn0 . getLength ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1 , sQLColumn0 . getLength ( ) )
assertEquals ( 8 , sQLColumn0 . getLength ( ) )
assertEquals ( "S ; - WAUSx ; ! ^T" , string0 )
assertEquals ( 8 , sQLColumn0 . getLength ( ) )
assertEquals ( 1 , sQLColumn0 . getLength ( ) )
assertEquals ( 99527 , sQLModifyingStatement0 . getLength ( ) )
assertEquals ( 473 , sQLModifyingStatement0 . getStart ( ) )
assertEquals ( false , sQLColumn0 . isRepeatable ( ) )
assertNull ( sQLColumn0 )
assertNull ( sQLColumn0 )
assertEquals ( "iK# > . ~26 ( 0 bytes ) " , logFile0 . toString ( ) )
assertNotNull ( logFile0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertNotNull ( htmlViewerPanel0 )
assertEquals ( "net . sourceforge . squirrel_sql . client . gui . HtmlViewerPanel [ , 0 , 0 , 0x0 , invalid , layout = java . awt . BorderLayout , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 9 , maximumSize = , minimumSize = , preferredSize = ] " , htmlViewerPanel0 . toString ( ) )
assertEquals ( true , htmlViewerPanel1 . isForegroundSet ( ) )
assertEquals ( "" , aliasGroup0 . getName ( ) )
assertEquals ( "" , aliasGroup0 . getName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "" , aliasGroup0 . getName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "HtmlViewerPanel . error . processhyperlink" , aliasGroup0 . getName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "HtmlViewerPanel . error . processhyperlink" , aliasGroup0 . getName ( ) )
assertEquals ( true , aliasGroup0 . isValid ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( 0 , downloadStatusEventHandler0 . currentFile )
assertEquals ( 0 , downloadStatusEventHandler0 . totalFiles )
assertEquals ( 0 , downloadStatusEventHandler0 . currentFile )
assertEquals ( 1 , downloadStatusEventHandler0 . currentFile )
assertEquals ( 0 , downloadStatusEventHandler0 . totalFiles )
assertNull ( iPluginManager0 )
assertNotNull ( fileWrapperImpl0 )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql" , fileWrapperImpl0 . getCanonicalPath ( ) )
assertNull ( channelXmlBean0 )
assertNull ( channelXmlBean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , fileWrapperImpl0 . length ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / lib" , fileWrapperImpl0 . getAbsolutePath ( ) )
assertNull ( channelXmlBean0 )
assertNotNull ( set0 )
assertNotNull ( fileWrapperImpl0 )
assertNotNull ( fileWrapperImpl0 )
assertEquals ( false , fileWrapperImpl0 . isDirectory ( ) )
assertNull ( fileWrapper0 )
assertEquals ( UpdateCheckFrequency . STARTUP , updateCheckFrequency0 )
assertEquals ( UpdateCheckFrequency . WEEKLY , updateCheckFrequency0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( UpdateCheckFrequency . DAILY , updateCheckFrequency0 )
assertEquals ( UpdateCheckFrequency . STARTUP , updateCheckFrequency0 )
assertEquals ( UpdateCheckFrequency . WEEKLY , updateCheckFrequency0 )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( 3000L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , artifactDownloaderImpl0 . isRemoteUpdateSite ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertNull ( string0 )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( true , artifactDownloaderImpl0 . isRemoteUpdateSite ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( true , artifactDownloaderImpl0 . isRemoteUpdateSite ( ) )
assertEquals ( true , artifactDownloaderImpl0 . isRemoteUpdateSite ( ) )
assertEquals ( false , artifactDownloaderImpl0 . isReleaseVersionWillChange ( ) )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( 0 , downloadStatusEvent0 . getFileCountTotal ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 16 . 455 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 16 . 509 + 0100" , releaseXmlBean0 . getLastModifiedTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 16 . 524 + 0100" , releaseXmlBean0 . getLastModifiedTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 16 . 576 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 16 . 609 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 035 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 055 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 067 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 080 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 110 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 120 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 358 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 439 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 463 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 491 + 0100" , releaseXmlBean1 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 546 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 617 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 724 + 0100" , releaseXmlBean1 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 816 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "1970 - 01 - 01_01 : 00 : 01 . 928 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 935 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 951 + 0100" , releaseXmlBean0 . getLastModifiedTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 08 : 17 . 975 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( "2013 - 07 - 02_08 : 02 : 43 . 127 + 0100" , releaseXmlBean0 . getLastModifiedTime ( ) )
assertNull ( releaseXmlBean0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "2013 - 07 - 02_08 : 02 : 43 . 491 + 0100" , releaseXmlBean0 . getLastModifiedTime ( ) )
assertEquals ( ( - 1318183123 ) , int0 )
assertEquals ( "2013 - 07 - 02_08 : 02 : 43 . 885 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "2013 - 07 - 02_08 : 02 : 44 . 014 + 0100" , releaseXmlBean0 . getCreateTime ( ) )
assertTrue ( channelXmlBean1 . equals ( channelXmlBean0 ) )
assertTrue ( channelXmlBean1 . equals ( channelXmlBean0 ) )
assertFalse ( channelXmlBean0 . equals ( channelXmlBean1 ) )
assertNull ( moduleXmlBean0 . getName ( ) )
assertNull ( moduleXmlBean0 . getName ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertNull ( string0 )
assertNull ( moduleXmlBean0 . getName ( ) )
assertEquals ( ( - 1L ) , artifactXmlBean0 . getSize ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( ( - 1574L ) , long0 )
assertEquals ( ( - 1574L ) , artifactXmlBean0 . getSize ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( ( - 1574L ) , artifactXmlBean0 . getSize ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( ( - 1574L ) , artifactXmlBean0 . getChecksum ( ) )
assertEquals ( ( - 1637408918 ) , int0 )
assertEquals ( ( - 1574L ) , artifactXmlBean0 . getSize ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( false , artifactXmlBean1 . isInstalled ( ) )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertFalse ( artifactXmlBean1 . equals ( artifactXmlBean0 ) )
assertEquals ( false , artifactXmlBean1 . isInstalled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , artifactXmlBean0 . isInstalled ( ) )
assertEquals ( false , boolean0 )
assertNull ( list0 )
assertEquals ( 0 , linkedList0 . size ( ) )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTableModel0 )
assertNotNull ( updateSummaryTable0 )
assertEquals ( false , updateSummaryTable0 . getReleaseVersionWillChange ( ) )
assertNotNull ( updateSummaryTable0 )
assertEquals ( 1 , linkedList0 . size ( ) )
assertEquals ( "NONE" , artifactAction0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1030316 , int0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( artifactStatus0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , artifactStatus0 . isInstalled ( ) )
assertNull ( artifactStatus0 . getType ( ) )
assertEquals ( false , artifactStatus0 . isCoreArtifact ( ) )
assertEquals ( ( - 941L ) , artifactStatus0 . getChecksum ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "core" , artifactStatus0 . getDisplayType ( ) )
assertEquals ( true , artifactStatus0 . isPluginArtifact ( ) )
assertEquals ( 34166 , int0 )
assertEquals ( true , artifactStatus1 . isTranslationArtifact ( ) )
assertNotNull ( artifactStatus0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( " : `s# ; | ; d . sh" , string0 )
assertNotNull ( string0 )
assertEquals ( " ) buildCPFromDir ( ) " , string0 )
assertEquals ( " ) buildCPFromDir ( ) " , string0 )
assertEquals ( 0 , vector0 . size ( ) )
assertNull ( preLaunchHelperImpl0 . getScriptLocation ( ) )
assertNull ( preLaunchHelperImpl0 . getScriptLocation ( ) )
assertNull ( preLaunchHelperImpl0 . getScriptLocation ( ) )
assertNull ( string0 )
assertEquals ( false , fileSystemXmlApplicationContext0 . isActive ( ) )
assertNotNull ( preLaunchUpdateApplication0 )
assertNull ( fileWrapper0 )
assertNotNull ( installStatusEvent0 )
assertNotNull ( installStatusEvent0 )
assertNotNull ( installStatusEvent0 )
assertNotNull ( installStatusEvent0 )
assertNotNull ( installStatusEvent0 )
assertNotNull ( installStatusEvent0 )
assertEquals ( InstallEventType . BACKUP_STARTED , installStatusEvent0 . getType ( ) )
assertEquals ( InstallEventType . REMOVE_STARTED , installStatusEvent0 . getType ( ) )
assertNull ( installStatusEvent0 . getArtifactName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , fileWrapperImpl1 . canRead ( ) )
assertEquals ( true , installFileOperationInfoImpl0 . isPlugin ( ) )
assertEquals ( true , fileWrapperImpl0 . canRead ( ) )
assertEquals ( false , installFileOperationInfoImpl0 . isPlugin ( ) )
assertNull ( string0 )
assertEquals ( false , installFileOperationInfoImpl0 . isPlugin ( ) )
assertEquals ( false , fileWrapperImpl1 . isHidden ( ) )
assertEquals ( false , installFileOperationInfoImpl0 . isPlugin ( ) )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " - 159abb42 : 13f9e495525 : - 7be1" , uidIdentifier0 . toString ( ) )
assertNotNull ( uidIdentifierFactory0 )
assertEquals ( false , fileWrapperImpl0 . exists ( ) )
assertEquals ( false , fileWrapperImpl0 . exists ( ) )
assertEquals ( false , fileWrapperImpl0 . exists ( ) )
assertEquals ( false , fileWrapperImpl0 . isHidden ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql / logs / squirrel - sql . log" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( false , fileWrapperImpl0 . canRead ( ) )
assertEquals ( false , fileWrapperImpl0 . exists ( ) )
assertEquals ( "changes . txt" , fileWrapperImpl0 . getName ( ) )
assertEquals ( true , fileWrapperImpl0 . canRead ( ) )
assertEquals ( false , fileWrapperImpl0 . isDirectory ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql" , fileWrapperImpl0 . getParent ( ) )
assertEquals ( false , fileWrapperImpl0 . isDirectory ( ) )
assertEquals ( 4096L , fileWrapperImpl0 . length ( ) )
assertEquals ( false , fileWrapperImpl0 . isFile ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / doc / welcome . html" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql / editWhereCols . xml" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( true , fileWrapperImpl0 . isAbsolute ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql" , fileWrapperImpl0 . getParent ( ) )
assertEquals ( "cellImportExport . xml" , fileWrapperImpl0 . getName ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql / prefs . xml" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / doc / licences / squirrel_licence . txt" , fileWrapperImpl0 . toString ( ) )
assertEquals ( " / home / ac1gf / . squirrel - sql / SQLDrivers . xml" , fileWrapperImpl0 . getPath ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql" , fileWrapperImpl0 . getAbsolutePath ( ) )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertEquals ( false , file0 . mkdirs ( ) )
assertEquals ( true , file0 . isAbsolute ( ) )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertNotNull ( applicationFiles0 )
assertEquals ( 0 , box0 . getHeight ( ) )
assertEquals ( false , box0 . isFontSet ( ) )
assertEquals ( 1 , int0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertNotNull ( pieceMarkerSpec0 )
assertEquals ( 0 , stateOfPosition0 . literalSepCount )
assertNotNull ( commentSpec0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stateOfPositionArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " | \n" , string0 )
assertEquals ( true , codeReformatorConfig0 . isDoInsertValuesAlign ( ) )
assertNotNull ( codeReformatorConfigFactory0 )
assertEquals ( true , codeReformatorConfig0 . isDoInsertValuesAlign ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 452 , int0 )
assertNotNull ( string0 )
assertEquals ( true , codeReformatorConfig0 . isDoInsertValuesAlign ( ) )
assertEquals ( 1873 , codeReformatorConfig0 . getTrySplitLineLen ( ) )
assertEquals ( 1 , codeReformatorConfig0 . getTrySplitLineLen ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( ( - 197 ) , int0 )
assertEquals ( "1638" , integerIdentifier0 . toString ( ) )
assertEquals ( " - 973" , integerIdentifier0 . toString ( ) )
assertEquals ( "1638" , integerIdentifier0 . toString ( ) )
assertEquals ( "0" , integerIdentifier0 . toString ( ) )
assertEquals ( "yCoM" , uidIdentifier0 . toString ( ) )
assertEquals ( "6cdea54a : 13f9f5445b6 : - 7caa" , uidIdentifier0 . toString ( ) )
assertEquals ( "6cdea54a : 13f9f5445b6 : - 7ca5" , uidIdentifier0 . toString ( ) )
assertEquals ( "6cdea54a : 13f9f5445b6 : - 7c9e" , uidIdentifier0 . toString ( ) )
assertEquals ( "6cdea54a : 13f9f5445b6 : - 7c8f" , uidIdentifier0 . toString ( ) )
assertEquals ( ( short ) ( - 1237 ) , constraintInfo0 . updateRule )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE Null 8x' vrgument . DROP COLUMN Null 8x' vrgument . CASCADE" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( DialectType . DAFFODIL , dialectType0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE \"jxa\" . \"jxa\" DROP CONSTRAINT \"jxa\"" , string0 )
assertEquals ( "CREATE VIEW \"Found pr\" . \"Found pr\" . \"Found pr\"\n AS Found pr" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ADD COLUMN" , string0 )
assertEquals ( "ALTER TABLE \"A0#iYY#c\" . \"gZ%g8 < ef\" . \"gZ%g8 < ef\" ALTER COLUMN \"A0#iYY#c\" SET DEFAULT 'A0#iYY#c'" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "DROP VIEW \" ] X^# ) \" . \" ] X^# ) \" . \" ] X^# ) \" CASCADE" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 15 , int0 )
assertEquals ( 38 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "CREATE INDEX \"GqOAE | V\" . \"GqOAE | V\" . \"GqOAE | V\" ON \"GqOAE | V\" . \"GqOAE | V\" . \"GqOAE | V\" ( null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null , null ) " , string0 )
assertEquals ( "ALTER TABLE \" ] X^# ) \" DROP CONSTRAINT \" ] X^# ) \" CASCADE" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "max" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "GENERIC" , dialectType0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 479 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "DROP VIEW CREATE SEQUENCE $sequenceName$ $increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "length" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , sequencePropertyMutability0 . isRestart ( ) )
assertNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( 3 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( Integer . MAX_VALUE , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "INSERT INTO \n 0" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertNotSame ( stringArray0 , stringArray1 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1218 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 1521 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "TIMESTEN" , dialectType0 . name ( ) )
assertEquals ( 40 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE DROP CONSTRAINT \"21H2 ; \" , | x@ ? \"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE 21H2 ; \" , | x@ ? DROP \"21H2 ; \" , | x@ ? \"" , string0 )
assertEquals ( "ALTER TABLE * b } , hb < p DROP PRIMARY KEY" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 53 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( databaseObjectQualifier0 . getCatalog ( ) )
assertEquals ( "" , databaseObjectQualifier0 . getSchema ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , databaseObjectQualifier0 . getCatalog ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 3 , dialectType0 . ordinal ( ) )
assertEquals ( 1 , int0 )
assertEquals ( "ALTER TABLE \"lB : \" DROP \"lB : \"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 31 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE \"\" DROP CONSTRAINT \"\"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 38 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE ALTER TABLE AxionAxionAx < pion < 99 DROP CONSTRAINT \"c ; 3int { 41RnKM [ 0f\" ALTER COLUMN \"ALTER TABLE AxionAxionAx < pion < 99 DROP CONSTRAINT \"c ; 3int { 41RnKM [ 0f\"\" SET DEFAULT 'ALTER TABLE AxionAxionAx < pion < 99 DROP CONSTRAINT \"c ; 3int { 41RnKM [ 0f\"'" , string0 )
assertEquals ( "ALTER TABLE 2 DROP \"2\"" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( "ALTER TABLE 1 ( pA z4g# + B\"y / is ALTER COLUMN \"1 ( pA z4g# + B\"y / is\" RENAME TO \"1 ( pA z4g# + B\"y / is\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( DialectType . AXION , dialectType0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "HSQL" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "DROP INDEX B | Jp { B > 9p9`0" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE w'A7U ] g * ( \" ALTER COLUMN \"w'A7U ] g * ( \"\" RENAME TO \"w'A7U ] g * ( \"\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , sequencePropertyMutability0 . isCache ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "SELECT VIEW_DEFINITION FROM INFORMATION_SCHEMA . SYSTEM_VIEWS WHERE TABLE_NAME = 'R6JU | BXL & z#w^DE' and TABLE_SCHEMA = 'R6JU | BXL & z#w^DE' " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE ma ALTER COLUMN \"ma\" SET DEFAULT 'ma'" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertNull ( stringArray0 )
assertEquals ( "ALTER TABLE X@#D DROP PRIMARY KEY" , string0 )
assertEquals ( "DROP SEQUENCE 1lkP5J^Bi / = ki_y [ " , string0 )
assertEquals ( "select view_definition from information_schema . views where table_schema = '' and UPPER ( table_name ) = UPPER ( 'TimePeriodAnchor . START' ) " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE ^0v DROP CONSTRAINT ^0v" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "SELECT CURRENT_VALUE , 'NONE' , 'NONE' , CACHE , INCREMENT , 0 FROM INFORMATION_SCHEMA . SEQUENCES WHERE SEQUENCE_SCHEMA = '' AND SEQUENCE_NAME = '' AND SEQUENCE_CATALOG = ''" , string0 )
assertNotNull ( string0 )
assertEquals ( "INSERT INTO FM - Y + ^ & gt6 ; nD~\n FM - Y + ^ & gt6 ; nD~" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "H2" , dialectType0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 9 , int0 )
assertEquals ( "DROP INDEX " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( "CREATE INDEX MJsp , 6% | Gr$` | ON MJsp , 6% | Gr$` | ( ) " , string0 )
assertNotNull ( string0 )
assertEquals ( "CREATE UNIQUE INDEX 2 ON 2 ( ) " , string0 )
assertEquals ( "CREATE SEQUENCE START WITH INCREMENT BY " , string0 )
assertNotNull ( string0 )
assertEquals ( "FRONTBASE" , dialectType0 . name ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "max" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 375 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( "character_length" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "INSERT INTO Fol0N# { { } - h = c / Q\"\n Fol0N# { { } - h = c / Q\"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( 36 , int0 )
assertEquals ( true , boolean0 )
assertNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE I8'u ] DROP CONSTRAINT \"I8'u ] \" CASCADE" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( 1207 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE DROP CONSTRAINT \"\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "CREATE UNIQUE INDEX %N | 35~ / 9y ? \" [ mG [ KY ON %N | 35~ / 9y ? \" [ mG [ KY ( null , null , null , null , null ) " , string0 )
assertEquals ( false , tableIndexInfo0 . unique )
assertNotNull ( string0 )
assertEquals ( "DROP SEQUENCE " , string0 )
assertEquals ( "SELECT 'create or replace view ' | | v . VIEWNAME | | ' as ' | | v . definition FROM _v_view v , _v_objs_owned o where v . objid = o . objid and o . DATABASE = '' and v . VIEWNAME = ''" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE max\n DROP CONSTRAINT \"max\" RESTRICT" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 38 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "NETEZZA" , dialectType0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 38 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "CREATE VIEW \n AS " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE X RENAME COLUMN \"X\" TO \"X\"" , string0 )
assertEquals ( false , sequencePropertyMutability0 . isCache ( ) )
assertNotNull ( stringArray0 )
assertEquals ( "ALTER TABLE CREATE VIEW \n AS RENAME TO CREATE VIEW \n AS " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "CREATE SEQUENCE \nMINVALUE MAXVALUE\nCYCLE" , string0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNull ( hibernateDialect0 )
assertEquals ( DialectType . GENERIC , dialectType0 )
assertEquals ( false , dialectFactory0 . isPromptForDialect )
assertEquals ( true , genericDialectExt0 . supportsAddPrimaryKey ( ) )
assertNull ( postgreSQLDialectExt0 )
assertEquals ( 8 , informixDialectExt0 . getTimestampMaximumFractionalDigits ( ) )
assertEquals ( false , genericDialectExt0 . supportsColumnComment ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "select text from sysobjects inner join syscomments on syscomments . id = sysobjects . id where ( loginame = '' or loginame is null ) and name = 'gn0Wbpg | * * PnOw ? ' and text not like '% - - %'" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE datalength DROP CONSTRAINT \"datalength\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "datalength" , string0 )
assertEquals ( "DROP VIEW ` | k = #3 - ) tT ] ) ~K5 > 'r" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "exec sp_rename ' . ' , " , string0 )
assertEquals ( "ALTER TABLE DefaultIntervalCategoryDataset : the number of categories in the start value dataset does not match the number of categories in the end value dataset . DROP \"DefaultIntervalCategoryDataset : the number of categories in the start value dataset does not match the number of categories in the end value dataset . \"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "sp_rename , " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "DROP INDEX . " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "0x00000000" , string0 )
assertEquals ( "ALTER TABLE DROP CONSTRAINT \"\"" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "SYBASEASE" , dialectType0 . name ( ) )
assertEquals ( "ALTER TABLE null\n DROP CONSTRAINT \"null\"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " NULL" , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 48 , int0 )
assertEquals ( 38 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "CREATE INDEX ON ( ) " , string0 )
assertEquals ( "CREATE VIEW AS " , string0 )
assertNotNull ( string0 )
assertEquals ( "CREATE VIEW rtrim AS rtrim WITH CHECK OPTION" , string0 )
assertNotSame ( stringArray0 , stringArray1 )
assertEquals ( "ALTER TABLE \"'maxX' cannot be INF or NaN . \" . \"'maxX' cannot be INF or NaN . \" . \" [ ! _VB\\czwD\" DROP PRIMARY KEY" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "max" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "DB2" , dialectType0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( "ALTER TABLE \"\" DROP CONSTRAINT \"\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "COMMENT ON COLUMN \"Q%5JH ( \" . \"Q%5JH ( \" IS 'Q%5JH ( '" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "CREATE VIEW \"'maxX' cannot be INF or NaN . \" . \"'maxX' cannot be INF or NaN . \" . \"\"\n AS " , string0 )
assertEquals ( 6 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "COMMENT ON COLUMN \"ADD\" . \"ADD\" . \"ADD\" . \"ADD\" IS 'ADD'" , string0 )
assertEquals ( "DROP SEQUENCE \"'maxX' cannot be INF or NaN . \" . \"'maxX' cannot be INF or NaN . \" . \"'maxX' cannot be INF or NaN . \" RESTRICT" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "length" , string0 )
assertEquals ( "RENAME TABLE \"\" TO \"\"" , string0 )
assertEquals ( "ALTER TABLE \"@q & HrG9QP1_4m ) P\" DROP \"@q & HrG9QP1_4m ) P\"" , string0 )
assertEquals ( "SELECT TEXT FROM SYSCAT . VIEWS WHERE VIEWSCHEMA = 'null' AND UPPER ( VIEWNAME ) = 'Q`'" , string0 )
assertEquals ( "BLOB ( x'00' ) " , string0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 313 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE \"\" ALTER COLUMN \"\" SET DEFAULT ''" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "DROP INDEX \"ADD\" . \"ADD\" . \"\" " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "ALTER TABLE \"qb [ < FmiCB`esT'a6lZ\" . \"qb [ < FmiCB`esT'a6lZ\" . \"qb [ < FmiCB`esT'a6lZ\"\n DROP CONSTRAINT \"qb [ < FmiCB`esT'a6lZ\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( 31 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "max" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( DialectType . HADB , dialectType0 )
assertEquals ( false , boolean0 )
assertEquals ( "char_length" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( "ALTER TABLE char_length DROP PRIMARY KEY" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE null DROP CONSTRAINT \"21H2 ; \" , | x@ ? \"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( Integer . MAX_VALUE , int0 )
assertEquals ( 360 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotSame ( tableColumnInfo0 , tableColumnInfo1 )
assertNotNull ( string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( string0 )
assertEquals ( "DROP INDEX \" ON UPDATE \" " , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( dialectUtils0 )
assertEquals ( "ALTER TABLE L < Uke } n1 ~ceEi \"n\" NULL" , string0 )
assertEquals ( "ALTER TABLE > 3 RENAME TO > 3" , string0 )
assertNotNull ( string0 )
assertEquals ( "COMMENT ON COLUMN . \"\" IS ''" , string0 )
assertEquals ( "COMMENT ON COLUMN . \"null\" IS ''" , string0 )
assertEquals ( "COMMENT ON COLUMN r . \"r\" IS 'r'" , string0 )
assertEquals ( "ALTER TABLE o o \"o \" o " , string0 )
assertEquals ( "ALTER TABLE . P `Fgj$S ) q \"TEMPLATE_ARGS\" NOT NULL" , string0 )
assertEquals ( 6 , arrayList0 . size ( ) )
assertEquals ( "ALTER TABLE null\n ADD CONSTRAINT \"S4EQ\u0004^jJ$Y | hbg\" UNIQUE ( \"CREATE SEQUENCE _ = QH#2nb3zS\nINCREMENT BY _ = QH#2nb3zS NO MINVALUE NO MAXVALUE\n\" , \"CREATE SEQUENCE _ = QH#2nb3zS\nINCREMENT BY _ = QH#2nb3zS NO MINVALUE NO MAXVALUE\n\" ) " , string0 )
assertNotNull ( string0 )
assertEquals ( "ALTER TABLE ALTER COLUMN \"null\" SET DEFAULT '0twVP | b { ey'" , string0 )
assertEquals ( "RENAME COLUMN L < Uke } n1 . \"n\" TO \"n\"" , string0 )
assertEquals ( "ALTER TABLE DROP PRIMARY KEY" , string0 )
assertEquals ( "ALTER TABLE 6NO DROP CONSTRAINT \"\" CASCADE" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "CREATE UNIQUE INDEX \"null\" ON null ( \"null\" , \"null\" , \"null\" , \"null\" , \"null\" , \"null\" , \"null\" , \"null\" , \"null\" ) \n TABLESPACE Z4AJZ5P" , string0 )
assertNotNull ( string0 )
assertEquals ( "CREATE INDEX QIiH8kq * H`p < h : wy : QIiH8kq * H`p < h : wy . QIiH8kq * H`p < h : wy ON QIiH8kq * H`p < h : wy : QIiH8kq * H`p < h : wy . QIiH8kq * H`p < h : wy ( null , null , null , null , null , null , null ) " , string0 )
assertEquals ( "CREATE UNIQUE INDEX QIiH8kq * H`p < h : wy : ` . QIiH8kq * H`p < h : wy ON QIiH8kq * H`p < h : wy : ` . QIiH8kq * H`p < h : wy ( null , null , null , null , null , null , null ) " , string0 )
assertNotNull ( string0 )
assertEquals ( "CREATE SEQUENCE null\nNO MINVALUE NO MAXVALUE\n" , string0 )
assertEquals ( "CREATE SEQUENCE L < Uke } n1\nINCREMENT BY L < Uke } n1 MINVALUE L < Uke } n1 MAXVALUE n \nSTART WITH n CACHE L < Uke } n1 L < Uke } n1" , string0 )
assertEquals ( "CREATE SEQUENCE _ = QH#2nb3zS\nINCREMENT BY _ = QH#2nb3zS NO MINVALUE NO MAXVALUE\n" , string0 )
assertNotNull ( string0 )
assertEquals ( "ALTER SEQUENCE r\nINCREMENT BY r MINVALUE r NO MAXVALUE\nCACHE r " , string0 )
assertNotNull ( string0 )
assertEquals ( "5VH" , string0 )
assertNotNull ( string0 )
assertEquals ( "\"n\" . \"L < Uke } n1\"" , string0 )
assertEquals ( "_R & Ns / & | tP WT \"_R & Ns / & | tP WT\" _R & Ns / & | tP WT \"_R & Ns / & | tP WT\"" , string0 )
assertEquals ( "_R & Ns / & | tP WT _R & Ns / & | tP WT _R & Ns / & | tP WT _R & Ns / & | tP WT" , string0 )
assertNotNull ( string0 )
assertEquals ( "template - < anonymous ( [ ] ) @3 > : chunks = attributes = [ columnName = \"I`%WtNK1h#nBsZ ! t\" ] " , stringTemplate0 . toDebugString ( ) )
assertEquals ( "00000000000000" , string0 )
assertEquals ( false , createScriptPreferences0 . isUpdateRefAction ( ) )
assertEquals ( 3 , createScriptPreferences0 . getDeleteAction ( ) )
assertEquals ( 3 , createScriptPreferences0 . getUpdateAction ( ) )
assertEquals ( false , createScriptPreferences0 . isUpdateRefAction ( ) )
assertEquals ( 3 , createScriptPreferences0 . getDeleteAction ( ) )
assertEquals ( 3 , int0 )
assertEquals ( 3 , createScriptPreferences0 . getUpdateAction ( ) )
assertEquals ( false , createScriptPreferences0 . isDeleteRefAction ( ) )
assertEquals ( true , createScriptPreferences0 . isUseDoubleQuotes ( ) )
assertEquals ( false , createScriptPreferences0 . isUpdateRefAction ( ) )
assertEquals ( false , createScriptPreferences0 . isDeleteRefAction ( ) )
assertEquals ( false , createScriptPreferences0 . isDeleteRefAction ( ) )
assertEquals ( false , createScriptPreferences0 . isConstraintsAtEnd ( ) )
assertEquals ( 3 , createScriptPreferences0 . getDeleteAction ( ) )
assertEquals ( 3 , createScriptPreferences0 . getDeleteAction ( ) )
assertEquals ( false , createScriptPreferences0 . isIncludeExternalReferences ( ) )
assertEquals ( false , createScriptPreferences0 . isUpdateRefAction ( ) )
assertEquals ( "NO ACTION" , string0 )
assertEquals ( 3 , createScriptPreferences0 . getUpdateAction ( ) )
assertEquals ( false , createScriptPreferences0 . isUpdateRefAction ( ) )
assertEquals ( 3 , createScriptPreferences0 . getUpdateAction ( ) )
assertEquals ( "SET DEFAULT" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "DROP VIEW " , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "select rdb$view_source from rdb$relations where rdb$relation_name = ''" , string0 )
assertEquals ( true , boolean0 )
assertNull ( stringArray0 )
assertEquals ( "strlen" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "DROP GENERATOR " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "ALTER TABLE , p`rs < & ! Sd4~ DROP CONSTRAINT \" , p`rs < & ! Sd4~\"" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "ALTER TABLE DROP CONSTRAINT \"c ; 3in4t@ { 41RnKM [ 0f\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE D ? DROP \"D ? \"" , string0 )
assertEquals ( "DROP INDEX Firebird & 9_V * . J09" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE c ; 3in4t@ { 41RnKM [ 0f DROP CONSTRAINT BH^CRML [ ~ ? " , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( 8 , int0 )
assertEquals ( 4 , dialectType0 . ordinal ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "ALTER TABLE FirebirdA0#iYY#c7kL@r1a ALTER COLUMN \"FirebirdA0#iYY#c7kL@r1a\" TO \"FirebirdA0#iYY#c7kL@r1a\"" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( Integer . MAX_VALUE , int0 )
assertEquals ( 18 , int0 )
assertEquals ( 18 , int0 )
assertEquals ( Integer . MAX_VALUE , int0 )
assertEquals ( 2001 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "CREATE INDEX line . separatr ON line . separatr ( ) " , string0 )
assertEquals ( "CREATE UNIQUE INDEX BH^CRML [ ~ ? ON BH^CRML [ ~ ? ( ) " , string0 )
assertEquals ( "CREATE VIEW ALTER TABLE $tableName$ ADD CONSTRAINT $constraintName$ UNIQUE ( $columnName ; separator = \" , \"$ ) AS KTSq & HK~a%sEH " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( 24 , dialectType0 . ordinal ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , genericDialectExt0 . supportsColumnComment ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( hibernateDialect0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( objectArray0 )
assertNull ( hibernateDialect0 )
assertEquals ( false , boolean0 )
assertNotNull ( objectArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , genericDialectExt0 . supportsAlterSequence ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "GENERIC" , dialectType0 . name ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 716 ) , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "select uuid ( ) " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "now" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " { b'false' } " , string0 )
assertEquals ( " { b'true' } " , string0 )
assertNotNull ( string0 )
assertEquals ( "e ! n qP6 ; limit ? , ? " , string0 )
assertEquals ( " ; " , baseQueryTokenizerPreferenceBean0 . getStatementSeparator ( ) )
assertEquals ( " - - " , baseQueryTokenizerPreferenceBean0 . getLineComment ( ) )
assertEquals ( " / " , baseQueryTokenizerPreferenceBean0 . getProcedureSeparator ( ) )
assertNotNull ( string0 )
assertEquals ( " / " , baseQueryTokenizerPreferenceBean1 . getProcedureSeparator ( ) )
assertEquals ( " ; " , baseQueryTokenizerPreferenceBean0 . getStatementSeparator ( ) )
assertEquals ( " - - " , baseQueryTokenizerPreferenceBean0 . getLineComment ( ) )
assertEquals ( true , baseQueryTokenizerPreferenceBean0 . isInstallCustomQueryTokenizer ( ) )
assertEquals ( true , baseQueryTokenizerPreferenceBean0 . isInstallCustomQueryTokenizer ( ) )
assertEquals ( false , baseQueryTokenizerPreferenceBean0 . isRemoveMultiLineComments ( ) )
assertEquals ( true , baseQueryTokenizerPreferenceBean0 . isInstallCustomQueryTokenizer ( ) )
assertEquals ( " - - " , baseQueryTokenizerPreferenceBean0 . getLineComment ( ) )
assertEquals ( " / " , baseQueryTokenizerPreferenceBean0 . getProcedureSeparator ( ) )
assertEquals ( false , baseQueryTokenizerPreferenceBean0 . isRemoveMultiLineComments ( ) )
assertEquals ( " - - " , baseQueryTokenizerPreferenceBean0 . getLineComment ( ) )
assertEquals ( 0 , defaultTableModel0 . getColumnCount ( ) )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( sortableTableModel0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertNotNull ( buttonTableHeader0 )
assertEquals ( 2 , sortedListModel0 . getSize ( ) )
assertEquals ( 1 , sortedListModel0 . getSize ( ) )
assertEquals ( " [ java . awt . geom . Rectangle2D$Double [ x = - 1593 . 3908946784009 , y = 0 . 0 , w = 1 . 0 , h = 1642 . 4740766556645 ] , LongDescription ] " , sortedListModel0 . toString ( ) )
assertEquals ( "46" , integerField0 . getText ( ) )
assertEquals ( 0 , integerField0 . countComponents ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , integerField_IntegerDocument0 . getAsynchronousLoadPriority ( ) )
assertNotNull ( charField0 )
assertNotNull ( charField0 )
assertNotNull ( charField0 )
assertNotNull ( charField0 )
assertEquals ( 1 , charField_CharacterDocument0 . getLength ( ) )
assertEquals ( Component . BaselineResizeBehavior . CENTER_OFFSET , memoryComboBox0 . getBaselineResizeBehavior ( ) )
assertEquals ( - 1 , memoryComboBox0 . getSelectedIndex ( ) )
assertEquals ( 0 , memoryComboBox0 . getItemCount ( ) )
assertEquals ( false , sortableTable1 . isValidateRoot ( ) )
assertEquals ( - 1 , sortableTable0 . getEditingRow ( ) )
assertEquals ( true , sortableTable0 . getShowHorizontalLines ( ) )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertNotNull ( textPopupMenu0 )
assertEquals ( "net . sourceforge . squirrel_sql . fw . gui . OutputLabel [ , 0 , 0 , 0x0 , invalid , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 8388608 , maximumSize = , minimumSize = , preferredSize = java . awt . Dimension [ width = 200 , height = 15 ] , defaultIcon = , disabledIcon = , horizontalAlignment = LEADING , horizontalTextPosition = TRAILING , iconTextGap = 4 , labelFor = , text = ` ! ! av ( FZ3t + c , verticalAlignment = CENTER , verticalTextPosition = CENTER ] " , outputLabel0 . toString ( ) )
assertEquals ( "net . sourceforge . squirrel_sql . fw . gui . OutputLabel [ , 0 , 0 , 0x0 , invalid , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 8388608 , maximumSize = , minimumSize = , preferredSize = java . awt . Dimension [ width = 200 , height = 0 ] , defaultIcon = , disabledIcon = , horizontalAlignment = LEADING , horizontalTextPosition = TRAILING , iconTextGap = 4 , labelFor = , text = , verticalAlignment = CENTER , verticalTextPosition = CENTER ] " , outputLabel0 . toString ( ) )
assertNotNull ( dialogs0 )
assertEquals ( true , multipleLineLabel0 . isBackgroundSet ( ) )
assertEquals ( "javax . swing . JTable [ , 0 , 0 , 0x0 , invalid , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 251658728 , maximumSize = , minimumSize = , preferredSize = , autoCreateColumnsFromModel = true , autoResizeMode = AUTO_RESIZE_SUBSEQUENT_COLUMNS , cellSelectionEnabled = false , editingColumn = - 1 , editingRow = - 1 , gridColor = javax . swing . plaf . ColorUIResource [ r = 122 , g = 138 , b = 153 ] , preferredViewportSize = java . awt . Dimension [ width = 450 , height = 400 ] , rowHeight = 16 , rowMargin = 1 , rowSelectionAllowed = true , selectionBackground = javax . swing . plaf . ColorUIResource [ r = 184 , g = 207 , b = 229 ] , selectionForeground = sun . swing . PrintColorUIResource [ r = 51 , g = 51 , b = 51 ] , showHorizontalLines = true , showVerticalLines = true ] " , jTable0 . toString ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( true , modifiedDefaultListCellRenderer1 . isOpaque ( ) )
assertNotNull ( classPathListModel0 )
assertNotNull ( chooserPreviewer0 )
assertNotNull ( chooserPreviewer0 )
assertNotNull ( chooserPreviewer0 )
assertNotNull ( chooserPreviewer0 )
assertEquals ( true , jInternalFrame0 . isVisible ( ) )
assertNotNull ( gUIUtils0 )
assertNull ( jFrame0 )
assertEquals ( false , jInternalFrame0 . isVisible ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "~B ) r : H ( " , string0 )
assertNotNull ( string0 )
assertEquals ( "~B ) r : H ( \n" , string0 )
assertNotNull ( string0 )
assertEquals ( "comboBoxChanged" , directoryListComboBox0 . getActionCommand ( ) )
assertEquals ( "net . sourceforge . squirrel_sql . fw . gui . DirectoryListComboBox [ , 0 , 0 , 0x0 , invalid , layout = javax . swing . plaf . metal . MetalComboBoxUI$MetalComboBoxLayoutManager , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 328 , maximumSize = , minimumSize = , preferredSize = , isEditable = false , lightWeightPopupEnabled = true , maximumRowCount = 8 , selectedItemReminder = scratch ] " , directoryListComboBox0 . toString ( ) )
assertEquals ( true , directoryListComboBox0 . isForegroundSet ( ) )
assertEquals ( 0 , directoryListComboBox0 . getSelectedIndex ( ) )
assertEquals ( 1 , sortedComboBoxModel0 . getSize ( ) )
assertEquals ( 2 , sortedComboBoxModel0 . getSize ( ) )
assertEquals ( 0 , windowState0 . getFrameExtendedState ( ) )
assertEquals ( true , windowState0 . isVisible ( ) )
assertEquals ( true , windowState0 . isVisible ( ) )
assertEquals ( true , windowState0 . isVisible ( ) )
assertNull ( file0 )
assertEquals ( 48 , classPathListModel0 . getSize ( ) )
assertEquals ( 0 , sQLCatalogsComboBox0 . getSelectedIndex ( ) )
assertEquals ( true , sQLCatalogsComboBox0 . isMaximumSizeSet ( ) )
assertEquals ( true , sQLCatalogsComboBox0 . isMaximumSizeSet ( ) )
assertEquals ( true , sQLCatalogsComboBox0 . isOpaque ( ) )
assertEquals ( false , sQLCatalogsComboBox0 . requestDefaultFocus ( ) )
assertEquals ( "java . awt . event . ActionEvent [ unknown type , cmd = null , when = 0 , modifiers = ] on net . sourceforge . squirrel_sql . fw . gui . TimePanel [ , 0 , 0 , 0x0 , invalid , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 8388608 , maximumSize = , minimumSize = , preferredSize = , defaultIcon = , disabledIcon = , horizontalAlignment = CENTER , horizontalTextPosition = TRAILING , iconTextGap = 4 , labelFor = , text = 1 . 00 . 00 GMT , verticalAlignment = CENTER , verticalTextPosition = CENTER ] " , actionEvent0 . toString ( ) )
assertEquals ( true , timePanel0 . getVerifyInputWhenFocusTarget ( ) )
assertEquals ( true , timePanel0 . isForegroundSet ( ) )
assertNotNull ( dimension0 )
assertNotNull ( dimension0 )
assertEquals ( 0 , jInternalFrame0 . getY ( ) )
assertEquals ( 5 , jInternalFrame0 . getY ( ) )
assertEquals ( 5 , jInternalFrame0 . getY ( ) )
assertEquals ( 5 , jInternalFrame0 . getX ( ) )
assertEquals ( 5 , jInternalFrame0 . getY ( ) )
assertEquals ( false , toggleComponentHolder0 . isSelected ( ) )
assertEquals ( false , jRadioButton0 . isSelected ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , jTable0 . isCursorSet ( ) )
assertEquals ( true , jTable0 . isCursorSet ( ) )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( statusBar0 )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( false , defaultFileListBoxModel0 . isEmpty ( ) )
assertEquals ( 1 , defaultFileListBoxModel0 . getSize ( ) )
assertNotNull ( stringArray0 )
assertEquals ( true , beanPropertyTable0 . getVerifyInputWhenFocusTarget ( ) )
assertNotNull ( beanPropertyTable0 )
assertEquals ( 2 , beanPropertyTable0 . getColumnCount ( ) )
assertNotNull ( rectangleSelectionHandler0 )
assertEquals ( 1 , propertyPanel0 . getComponentCount ( ) )
assertEquals ( 1 , propertyPanel0 . getComponentCount ( ) )
assertEquals ( 1 , propertyPanel0 . getComponentCount ( ) )
assertEquals ( false , jCheckBox0 . isRequestFocusEnabled ( ) )
assertEquals ( false , toolBar0 . isRollover ( ) )
assertEquals ( true , toolBar0 . isRollover ( ) )
assertNull ( toolBar0 . getName ( ) )
assertNotNull ( jButton0 )
assertEquals ( 2 , readTypeCombo0 . getItemCount ( ) )
assertNotNull ( fontInfo0 )
assertEquals ( 1 , fontInfo0 . generateStyle ( ) )
assertEquals ( 1 , fontInfo0 . generateStyle ( ) )
assertNotNull ( fontInfo0 )
assertEquals ( "Monospaced , 12" , fontInfo0 . toString ( ) )
assertEquals ( "Monospaced , 12" , fontInfo0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( jTable0 )
assertNotNull ( fontInfo0 )
assertEquals ( true , fontInfo0 . isItalic ( ) )
assertNotNull ( fontInfo0 )
assertNotNull ( fontInfo0 )
assertEquals ( 2 , fontInfo0 . generateStyle ( ) )
assertNotNull ( fontInfo0 )
assertEquals ( 2 , fontInfo0 . generateStyle ( ) )
assertNotNull ( fontInfo0 )
assertEquals ( "Monospaced , 12" , fontInfo0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "Monospaced , 12 , 12" , fontInfo0 . toString ( ) )
assertEquals ( 2 , fontInfo0 . generateStyle ( ) )
assertEquals ( - 19 , fontInfo1 . getSize ( ) )
assertEquals ( 0 , beanPropertyTableModel0 . getRowCount ( ) )
assertEquals ( 0 , beanPropertyTableModel0 . getColumnCount ( ) )
assertNotNull ( beanPropertyTableModel0 )
assertNotNull ( beanPropertyTableModel0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( " = null" , string0 )
assertEquals ( " = ' = java . awt . CheckboxGroup [ selectedCheckbox = null ] '" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "job - state - reason" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " = 'AcceleratorKey'" , string0 )
assertEquals ( " = { d '1970 - 01 - 01' } " , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " is null" , string0 )
assertNull ( frame0 )
assertNull ( frame0 )
assertNull ( frame0 )
assertEquals ( false , boolean0 )
assertEquals ( "Null 'group' argmnt . " , string0 )
assertEquals ( "CRLF ( \\r\\n ) " , string0 )
assertEquals ( "Default" , string0 )
assertEquals ( "LF ( \\n ) " , string0 )
assertNotNull ( tableSelectAllCellsCommand0 )
assertEquals ( ( - 1L ) , tableExportCsvCommand0 . getWrittenRows ( ) )
assertEquals ( ( - 1L ) , tableExportCsvCommand0 . getWrittenRows ( ) )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( ( - 1L ) , tableExportCsvCommand0 . getWrittenRows ( ) )
assertEquals ( ( - 1L ) , tableExportCsvCommand0 . getWrittenRows ( ) )
assertEquals ( ( - 1L ) , tableExportCsvCommand0 . getWrittenRows ( ) )
assertNotNull ( exportFileContainer0 )
assertEquals ( false , boolean0 )
assertEquals ( 1 , jTable0 . getSelectedColumnCount ( ) )
assertEquals ( false , jTable1 . isDisplayable ( ) )
assertNotNull ( jTableExportData0 )
assertEquals ( 50 , jTableExportData0 . nbrSelCols )
assertEquals ( 50 , jTableExportData0 . nbrSelCols )
assertNotNull ( jTableExportData0 )
assertEquals ( 999 , exportDataColumn0 . getColumnIndex ( ) )
assertEquals ( 999 , exportDataColumn0 . getRowIndex ( ) )
assertEquals ( 0 , exportDataColumn0 . getColumnIndex ( ) )
assertNotNull ( string0 )
assertEquals ( 999 , exportDataColumn0 . getColumnIndex ( ) )
assertNotNull ( exportDataRow0 )
assertNotNull ( exportDataRow0 )
assertEquals ( true , dataExportExcelWriter0 . isIncludeHeaders ( ) )
assertEquals ( false , dataExportXMLWriter0 . isIncludeHeaders ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , dataExportCSVWriter0 . isIncludeHeaders ( ) )
assertEquals ( true , dataExportXMLWriter0 . isIncludeHeaders ( ) )
assertEquals ( false , dataExportCSVWriter0 . isIncludeHeaders ( ) )
assertEquals ( "application / x - java - jvm - local - objectref" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "\"No resource found for key\"" , string0 )
assertEquals ( "\"No resource found for key\"" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "\"\"\"ad7\"\"\"\"\"\"\"\"k%o\"\"\"" , string0 )
assertNotNull ( list0 )
assertNotNull ( wikiTableConfigurationStorage0 )
assertNotNull ( wikiTableConfigurationStorage0 )
assertEquals ( true , copyWikiTableAction0 . isEnabled ( ) )
assertEquals ( "" , stringBuilder0 . toString ( ) )
assertNull ( iWikiTableConfiguration0 )
assertNull ( string0 )
assertNotNull ( list0 )
assertNotNull ( wikiTableConfigurationFactory0 )
assertEquals ( true , linkedList0 . isEmpty ( ) )
assertEquals ( " [ ] " , linkedList0 . toString ( ) )
assertEquals ( " [ < unnamed > ] " , linkedList0 . toString ( ) )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( genericWikiTableConfigurationBean0 )
assertNotNull ( jMenuItem0 )
assertNotNull ( copyWikiTableActionFactory0 )
assertEquals ( false , lineBorder1 . getRoundedCorners ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "java . awt . event . ActionEvent [ unknown type , cmd = First , when = 0 , modifiers = ] on First" , actionEvent0 . toString ( ) )
assertEquals ( false , keyEvent0 . isConsumed ( ) )
assertEquals ( "Mouse entered : Button with parentClass = null" , jButton0 . getToolTipText ( ) )
assertEquals ( 505 , containerEvent0 . getID ( ) )
assertEquals ( 0 , containerEvent0 . getID ( ) )
assertNotNull ( classArray0 )
assertNull ( iHasIdentifier0 )
assertEquals ( "3d87476d : 13faa1b33bb : - 7f9e" , uidIdentifier0 . toString ( ) )
assertEquals ( false , pushbackReader0 . markSupported ( ) )
assertNotNull ( xMLBeanWriter0 )
assertEquals ( " < Beans > \n < Bean Class = \"net . sourceforge . squirrel_sql . fw . xml . XMLBeanWriter\" > \n < asString > & lt ; Beans / & gt ; \n < / asString > \n < / Bean > \n < / Beans > \n" , xMLBeanWriter0 . getAsString ( ) )
assertEquals ( " < Beans > \n < Bean Class = \"javax . swing . table . DefaultTableModel\" > \n < columnCount > 0 < / columnCount > \n < dataVector Class = \"java . util . Vector\" > \n < empty > true < / empty > \n < / dataVector > \n < rowCount > 0 < / rowCount > \n < tableModelListeners Indexed = \"true\" / > \n < / Bean > \n < / Beans > \n" , xMLBeanWriter0 . getAsString ( ) )
assertNotNull ( jTextField1 )
assertNotNull ( textComponentProvider0 )
assertNotNull ( jTextArea1 )
assertNotNull ( textComponentProvider0 )
assertEquals ( true , boolean0 )
assertEquals ( 558 , completionCandidates0 . getReplacementStart ( ) )
assertNotNull ( string0 )
assertEquals ( 558 , int0 )
assertEquals ( "" , string0 )
assertNotNull ( camelCaseMatcher0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , completor0 . getTextTillCarret ( ) )
assertEquals ( "" , completor0 . getTextTillCarret ( ) )
assertEquals ( "javax . swing . JScrollBar [ , 0 , 0 , 0x0 , invalid , layout = javax . swing . plaf . metal . MetalScrollBarUI , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 4194632 , maximumSize = , minimumSize = , preferredSize = , blockIncrement = 10 , orientation = HORIZONTAL , unitIncrement = 1 ] " , jScrollBar0 . toString ( ) )
assertEquals ( "Largest" , string0 )
assertEquals ( "javax . swing . JScrollBar [ , 0 , 0 , 0x0 , invalid , layout = javax . swing . plaf . metal . MetalScrollBarUI , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 4194632 , maximumSize = , minimumSize = , preferredSize = , blockIncrement = 10 , orientation = HORIZONTAL , unitIncrement = 1 ] " , jScrollBar0 . toString ( ) )
assertNotNull ( rectangle1 )
assertEquals ( - 1754 , jToolTip0 . getWidth ( ) )
assertNotNull ( rectangle1 )
assertEquals ( 1970 , jSlider0 . getWidth ( ) )
assertEquals ( 0 , rectangle1 . height )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionParser0 )
assertNotNull ( completionUtils0 )
assertEquals ( " . / K" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 4 , int0 )
assertNotNull ( objectArrayDataSet0 )
assertEquals ( 1 , objectArrayDataSet0 . getColumnCount ( ) )
assertNotNull ( objectArrayDataSet0 )
assertNotNull ( objectArrayDataSet0 )
assertNotNull ( objectArrayDataSet0 )
assertNotNull ( objectArrayDataSet0 )
assertEquals ( true , dataSetListModel0 . getShowHeadings ( ) )
assertEquals ( 0 , int0 )
assertEquals ( true , dataSetListModel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetListModel0 . getShowHeadings ( ) )
assertEquals ( 1 , dataSetListModel0 . getRowCount ( ) )
assertEquals ( true , dataSetListModel0 . getShowHeadings ( ) )
assertNull ( component0 )
assertEquals ( 0 , dataSetListModel0 . getRowCount ( ) )
assertEquals ( false , popupEditableIOPanel0 . isMaximumSizeSet ( ) )
assertNotNull ( popupEditableIOPanel0 )
assertEquals ( 0 , popupEditableIOPanel0 . getHeight ( ) )
assertEquals ( true , popupEditableIOPanel0 . getFocusTraversalKeysEnabled ( ) )
assertEquals ( false , popupEditableIOPanel0 . getAutoscrolls ( ) )
assertNotNull ( popupEditableIOPanel0 )
assertNotNull ( popupEditableIOPanel0 )
assertSame ( columnDisplayDefinitionArray0 , columnDisplayDefinitionArray1 )
assertNotNull ( dataSetDefinition0 )
assertEquals ( false , propertyDescriptor1 . isHidden ( ) )
assertNotNull ( columnDisplayDefinitionArray0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , jTable0 . isPaintingForPrint ( ) )
assertNotNull ( intArray0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertEquals ( "4C = z [ CZ" , columnDisplayDefinition0 . getLabel ( ) )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertEquals ( false , columnDisplayDefinition0 . isSigned ( ) )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertNotNull ( columnDisplayDefinition0 )
assertEquals ( " [ columnName = dataType2tring . newine' , sqlType = 0 , sqlTypeName = null , dialectType = GENERIC ] " , columnDisplayDefinition0 . toString ( ) )
assertNotNull ( columnDisplayDefinition0 )
assertEquals ( false , columnDisplayDefinition0 . isAutoIncrement ( ) )
assertEquals ( 21 , int0 )
assertNotNull ( resultSetMetaDataDataSet0 )
assertNotNull ( dataSetDefinition0 )
assertNotNull ( resultSetMetaDataDataSet0 )
assertNotNull ( dataSetDefinition0 )
assertEquals ( 2 , int0 )
assertEquals ( "delete - next" , string0 )
assertNull ( object0 )
assertEquals ( "delete - next" , string0 )
assertEquals ( "delete - next" , string0 )
assertNull ( dataSetDefinition0 )
assertNotNull ( databaseTypesDataSet0 )
assertNotNull ( databaseTypesDataSet0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNull ( list0 )
assertNull ( dataSetDefinition0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , resultSetDataSet0 . getColumnCount ( ) )
assertEquals ( 0 , int0 )
assertNull ( object0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( dataSetModelEvent0 )
assertNotNull ( javabeanArrayDataSet0 )
assertEquals ( 7 , javabeanArrayDataSet0 . getColumnCount ( ) )
assertNotNull ( javabeanArrayDataSet0 )
assertNotNull ( javabeanArrayDataSet0 )
assertNull ( dataSetDefinition0 )
assertEquals ( false , boolean0 )
assertNotNull ( javabeanArrayDataSet0 )
assertEquals ( - 42 , rowNumberTableColumn0 . getModelIndex ( ) )
assertNotNull ( dataSetDefinition0 )
assertEquals ( 2 , hashtableDataSet0 . getColumnCount ( ) )
assertNotNull ( hashtableDataSet0 )
assertNotNull ( hashtableDataSet0 )
assertNotNull ( javabeanArrayDataSet0 )
assertEquals ( 0 , dataSetViewerPropertyPanel0 . getRowCount ( ) )
assertEquals ( 0 , dataSetViewerPropertyPanel0 . getRowCount ( ) )
assertEquals ( 0 , dataSetViewerEditableTablePanel0 . subPageIndex )
assertEquals ( 0 , dataSetViewerTablePanel0 . subTableSplitSize )
assertEquals ( 0 . 6666666666666666 , dataSetViewerEditableTablePanel0 . scale , 0 . 01D )
assertEquals ( 0 , dataSetViewerTablePanel0 . prevPageIndex )
assertEquals ( 0 , dataSetViewerTablePanel0 . totalNumPages )
assertEquals ( 0 , dataSetViewerTablePanel0 . subTableSplitSize )
assertEquals ( 0 . 6666666666666666 , dataSetViewerEditableTablePanel0 . scale , 0 . 01D )
assertEquals ( 0 , dataSetViewerTablePanel0 . prevPageIndex )
assertEquals ( false , dataSetViewerEditableTablePanel0 . pageinfoCalculated )
assertNotNull ( javabeanDataSet0 )
assertNotNull ( javabeanDataSet0 )
assertNotNull ( javabeanDataSet0 )
assertNull ( iDataSetViewer0 )
assertEquals ( false , dataSetScrollingPanel0 . isDisplayable ( ) )
assertEquals ( false , dataSetScrollingPanel0 . isDoubleBuffered ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( dataSetDefinition0 )
assertEquals ( false , boolean0 )
assertNotNull ( dataSetViewerTextFileDestination0 )
assertNotNull ( dataSetViewerTextFileDestination0 )
assertNotNull ( dataSetViewerTextFileDestination0 )
assertNotNull ( dataSetViewerTextFileDestination0 )
assertNull ( cellImportExportInfo0 )
assertEquals ( "" , cellImportExportInfo0 . getTableColumnName ( ) )
assertNotNull ( cellImportExportInfoArray0 )
assertNull ( columnDisplayDefinition0 )
assertEquals ( true , columnDisplayDefinition0 . isNullable ( ) )
assertEquals ( "" , cellImportExportInfo0 . getTableColumnName ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , cellImportExportInfo0 . getFileName ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , cellImportExportInfo0 . getCommand ( ) )
assertEquals ( true , dataSetViewerPropertyPanel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetViewerEditableTablePanel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetViewerEditableTablePanel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetViewerPropertyPanel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetViewerPropertyPanel0 . getShowHeadings ( ) )
assertEquals ( true , dataSetViewerPropertyPanel0 . getShowHeadings ( ) )
assertNotNull ( dataSetViewerTextPanel0 )
assertNotNull ( dataSetViewerTextPanel0 )
assertNotNull ( dataSetViewerTextPanel0 )
assertNotNull ( mapDataSet0 )
assertNotNull ( mapDataSet0 )
assertNotNull ( mapDataSet0 )
assertNotNull ( mapDataSet0 )
assertEquals ( false , jTable0 . getColumnSelectionAllowed ( ) )
assertNotNull ( tableState0 )
assertNotNull ( restorableJTextArea0 )
assertEquals ( false , restorableJTextField0 . isPreferredSizeSet ( ) )
assertEquals ( "java . lang . Boolean" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , ( boolean ) boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , ( boolean ) boolean1 )
assertEquals ( false , boolean0 )
assertNull ( boolean0 )
assertNull ( boolean0 )
assertEquals ( true , parameterWhereClausePart0 . shouldBeUsed ( ) )
assertEquals ( "true" , boolean0 . toString ( ) )
assertNull ( boolean0 )
assertNull ( jTable0 . getName ( ) )
assertEquals ( "java . lang . Object" , columnDisplayDefinition0 . getClassName ( ) )
assertNull ( keyListener0 )
assertEquals ( true , dataTypeByte0 . canDoFileIO ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( okJPanel0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( restorableJTextArea0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertEquals ( "java . lang . String" , string0 )
assertEquals ( true , restorableJTextField0 . isOpaque ( ) )
assertEquals ( true , parameterWhereClausePart0 . shouldBeUsed ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "t . o ) _ = iQ5L^ - x = : ] vO$" , restorableJTextArea0 . getText ( ) )
assertEquals ( "" , restorableJTextArea0 . getText ( ) )
assertEquals ( "" , restorableJTextArea0 . getText ( ) )
assertEquals ( " < null > " , restorableJTextArea0 . getText ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , restorableJTextField0 . isBackgroundSet ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "java . lang . Long" , string0 )
assertNull ( object0 )
assertEquals ( true , boolean0 )
assertNotNull ( restorableJTextArea0 )
assertEquals ( true , parameterWhereClausePart0 . shouldBeUsed ( ) )
assertEquals ( 0L , ( long ) long0 )
assertNull ( long0 )
assertNull ( long0 )
assertEquals ( true , restorableJTextField0 . isForegroundSet ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "37777774133" , restorableJTextArea0 . getText ( ) )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertEquals ( false , boolean0 )
assertEquals ( "java . lang . String" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( Component . BaselineResizeBehavior . CONSTANT_ASCENT , okJPanel0 . getBaselineResizeBehavior ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , parameterWhereClausePart0 . isParameterUsed ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( true , restorableJTextField0 . isBackgroundSet ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( restorableJTextArea0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( " [ Ljava . lang . Byte" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( " < null > " , restorableJTextArea0 . getText ( ) )
assertNull ( object0 )
assertEquals ( false , isNullWhereClausePart0 . isParameterUsed ( ) )
assertEquals ( "javax . swing . DefaultListSelectionModel 10437928 = { } " , defaultListSelectionModel0 . toString ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertNotNull ( object0 )
assertEquals ( "" , string0 )
assertEquals ( "" , restorableJTextField0 . getText ( ) )
assertEquals ( "k" , restorableJTextField0 . getText ( ) )
assertEquals ( "" , restorableJTextField0 . getText ( ) )
assertEquals ( " < null > " , restorableJTextField0 . getText ( ) )
assertEquals ( 0 , binaryDisplayConverter_ConversionConstants0 . radix )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( byteArray0 )
assertNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( dataTypeFloat0 )
assertNotNull ( dataTypeFloat0 )
assertNotNull ( dataTypeFloat0 )
assertEquals ( 0 , restorableJTextField0 . getX ( ) )
assertNotNull ( dataTypeFloat0 )
assertNotNull ( dataTypeFloat0 )
assertNotNull ( dataTypeFloat0 )
assertNotNull ( dataTypeFloat0 )
assertEquals ( " < null > " , string0 )
assertNotNull ( dataTypeFloat0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( false , isNullWhereClausePart0 . isParameterUsed ( ) )
assertEquals ( false , emptyWhereClausePart0 . shouldBeUsed ( ) )
assertNull ( float0 )
assertNotNull ( dataTypeFloat0 )
assertNull ( string0 )
assertNotNull ( databaseSpecificBooleanValue0 )
assertEquals ( " < null > " , restorableJTextField0 . getText ( ) )
assertEquals ( 2 , cellEditorUsingRenderer0 . getClickCountToStart ( ) )
assertEquals ( "SwingLargeIconKey" , jPasswordField0 . getText ( ) )
assertEquals ( " < null > " , jPasswordField0 . getText ( ) )
assertEquals ( true , blobDescriptor0 . getWholeBlobRead ( ) )
assertEquals ( true , blobDescriptor0 . getWholeBlobRead ( ) )
assertEquals ( "00 00 00 00 00 00 00 00 00 " , blobDescriptor0 . toString ( ) )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( false , blobDescriptor0 . getWholeBlobRead ( ) )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( " < Blob > " , blobDescriptor0 . toString ( ) )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( - 9 , blobDescriptor0 . getUserSetBlobLimit ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , blobDescriptor0 . getBlobRead ( ) )
assertEquals ( 247 , blobDescriptor0 . getUserSetBlobLimit ( ) )
assertEquals ( 59 , blobDescriptor0 . getUserSetBlobLimit ( ) )
assertEquals ( true , blobDescriptor0 . getWholeBlobRead ( ) )
assertEquals ( Component . BaselineResizeBehavior . CONSTANT_ASCENT , okJPanel0 . getBaselineResizeBehavior ( ) )
assertEquals ( false , dataTypeFloat0 . useBinaryEditingPanel ( ) )
assertNotNull ( defaultColumnRenderer0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( dataTypeDouble0 )
assertNotNull ( dataTypeDouble0 )
assertEquals ( true , restorableJTextField0 . isBackgroundSet ( ) )
assertNotNull ( dataTypeDouble0 )
assertNotNull ( dataTypeDouble0 )
assertNotNull ( dataTypeDouble0 )
assertNotNull ( dataTypeDouble0 )
assertNotNull ( dataTypeDouble0 )
assertEquals ( " < null > " , string0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( false , isNullWhereClausePart0 . isParameterUsed ( ) )
assertEquals ( "javax . swing . DefaultListSelectionModel 1094582600 = { } " , defaultListSelectionModel0 . toString ( ) )
assertEquals ( "javax . swing . DefaultListSelectionModel 334627753 = { } " , defaultListSelectionModel0 . toString ( ) )
assertNull ( double0 )
assertNotNull ( cellComponentFactory0 )
assertNotNull ( tableCellRenderer0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "CancelSelection" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "java . lang . String" , columnDisplayDefinition0 . getClassName ( ) )
assertEquals ( 1 , cellEditorUsingRenderer0 . getClickCountToStart ( ) )
assertEquals ( "document - name" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( restorableJTextArea0 )
assertEquals ( "java . lang . Float" , columnDisplayDefinition0 . getClassName ( ) )
assertEquals ( false , restorableJTextArea0 . isFocusTraversalPolicySet ( ) )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( iWhereClausePart0 )
assertEquals ( 20 , hashMap0 . size ( ) )
assertNull ( object0 )
assertEquals ( "java . lang . Object" , columnDisplayDefinition0 . getClassName ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( okJPanelArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "java . math . BigDecimal" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , menuKeyEvent0 . isConsumed ( ) )
assertEquals ( " < null > " , restorableJTextArea0 . getText ( ) )
assertEquals ( "java . awt . Panel [ panel1 , 0 , 0 , 0x0 , invalid ] " , panel0 . toString ( ) )
assertEquals ( false , keyEvent0 . isConsumed ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , restorableJTextField0 . getColumns ( ) )
assertEquals ( false , restorableJTextArea0 . requestFocusInWindow ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , okJPanel0 . isPreferredSizeSet ( ) )
assertEquals ( "java . lang . String" , string0 )
assertNull ( string0 )
assertEquals ( "acceptAllFileFilterUsedChanged" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , parameterWhereClausePart0 . shouldBeUsed ( ) )
assertEquals ( "acceptAllFileFilterUsedChanged" , isNullWhereClausePart0 . getColumn ( ) )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( ( - 1377 ) , int0 )
assertEquals ( 0 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( false , clobDescriptor0 . getWholeClobRead ( ) )
assertEquals ( true , clobDescriptor0 . getClobRead ( ) )
assertEquals ( - 1377 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( false , clobDescriptor0 . getClobRead ( ) )
assertEquals ( 243 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( false , clobDescriptor0 . getWholeClobRead ( ) )
assertEquals ( - 1304 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( false , clobDescriptor0 . getClobRead ( ) )
assertEquals ( true , clobDescriptor0 . getWholeClobRead ( ) )
assertEquals ( true , clobDescriptor0 . getWholeClobRead ( ) )
assertEquals ( 0 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( 1775 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( true , clobDescriptor1 . getClobRead ( ) )
assertEquals ( false , clobDescriptor0 . getWholeClobRead ( ) )
assertEquals ( "" , string0 )
assertEquals ( true , clobDescriptor0 . getClobRead ( ) )
assertEquals ( - 1 , clobDescriptor0 . getUserSetClobLimit ( ) )
assertEquals ( " . . . " , string0 )
assertNotNull ( dataTypeDate_DateFormatTypeCombo0 )
assertEquals ( false , dataTypeDate0 . getReadDateAsTimestamp ( ) )
assertEquals ( true , okJPanel0 . isRequestFocusEnabled ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , dataTypeDate0 . getReadDateAsTimestamp ( ) )
assertEquals ( 35 , stringBuffer0 . length ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , dataTypeDate0 . getReadDateAsTimestamp ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "java . sql . Date" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertNull ( date0 )
assertNotNull ( dataTypeDate_DateFormatTypeCombo0 )
assertEquals ( false , restorableJTextField0 . getInheritsPopupMenu ( ) )
assertEquals ( " < null > " , restorableJTextArea0 . getText ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , okJPanel0 . isBackgroundSet ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "net . sourceforge . squirrel_sql . fw . datasetviewer . cellcomponent . ClobDescriptor" , string0 )
assertNotNull ( clobDescriptor0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( " < null > " , string0 )
assertNotNull ( clobDescriptor0 )
assertEquals ( true , boolean0 )
assertNull ( clobDescriptor0 )
assertNotNull ( clobDescriptor0 )
assertNull ( object0 )
assertNull ( object1 )
assertEquals ( 1 , okJPanel0 . countComponents ( ) )
assertEquals ( false , dataTypeGeneral0 . isUseColumnLabelInsteadColumnName ( ) )
assertEquals ( false , boolean0 )
assertNull ( restorableJTextField0 . getToolTipText ( ) )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertNotNull ( dataTypeBigDecimal0 )
assertEquals ( "javax . swing . DefaultListSelectionModel 1023137635 = { } " , defaultListSelectionModel0 . toString ( ) )
assertEquals ( 2 , bigDecimal0 . precision ( ) )
assertEquals ( 6 . 0F , bigDecimal0 . floatValue ( ) , 0 . 01F )
assertNotNull ( dataTypeBigDecimal0 )
assertEquals ( "a { z = 05 | . aW ! VV } aRNRD = ? " , parameterWhereClausePart0 . getWhereClause ( ) )
assertNull ( bigDecimal0 )
assertEquals ( true , baseKeyTextHandler0 . firstBlankText )
assertEquals ( false , baseKeyTextHandler0 . firstBlankText )
assertEquals ( true , baseKeyTextHandler0 . firstBlankText )
assertEquals ( " WHERE b ! J9h^" , string0 )
assertNull ( string0 )
assertEquals ( ( - 1506 ) , int0 )
assertEquals ( ( - 1108 ) , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( isNullWhereClausePart0 )
assertEquals ( false , boolean0 )
assertNotNull ( isNullWhereClausePart0 )
assertEquals ( "K | KADZ } ; n , = UNhn" , string0 )
assertNotNull ( isNullWhereClausePart0 )
assertNotNull ( parameterWhereClausePart0 )
assertNotNull ( parameterWhereClausePart0 )
assertNotNull ( parameterWhereClausePart0 )
assertEquals ( 1023 , tableColumnInfo0 . getDataType ( ) )
assertEquals ( 1 , tableColumnInfo0 . getDecimalDigits ( ) )
assertEquals ( 0 , tableColumnInfo0 . isNullAllowed ( ) )
assertEquals ( 1 , tableColumnInfo0 . getOctetLength ( ) )
assertEquals ( - 1734 , tableColumnInfo0 . getRadix ( ) )
assertEquals ( "" , tableColumnInfo0 . getRemarks ( ) )
assertNotNull ( string0 )
assertEquals ( 0 , tableColumnInfo0 . getDecimalDigits ( ) )
assertEquals ( 9 , tableColumnInfo0 . getDataType ( ) )
assertEquals ( - 533 , tableColumnInfo0 . getOrdinalPosition ( ) )
assertEquals ( - 2016 , tableColumnInfo0 . getDecimalDigits ( ) )
assertEquals ( - 1734 , tableColumnInfo0 . getRadix ( ) )
assertEquals ( - 1 , tableColumnInfo0 . isNullAllowed ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( sQLUtilities0 )
assertEquals ( "8 { Zc\"\" = H | VI" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( list0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( string0 )
assertEquals ( "K\" . K\" . 8 { Zc\" = H | VI" , string0 )
assertEquals ( - 1987 , foreignKeyColumnInfo0 . getKeySequence ( ) )
assertNotNull ( string0 )
assertEquals ( ( - 1987 ) , int0 )
assertEquals ( " - 728b74b8 : 13f9fa96dbb : - 3e6f" , uidIdentifier0 . toString ( ) )
assertNull ( sQLDriverClassLoader0 )
assertNotNull ( databaseObjectType0 )
assertNotNull ( databaseObjectType0 )
assertEquals ( "Table Type" , string0 )
assertEquals ( "20" , integerIdentifier0 . toString ( ) )
assertNotNull ( databaseObjectType0 )
assertEquals ( false , progressCallBackAdaptor0 . finishedLoading ( ) )
assertEquals ( false , progressCallBackAdaptor0 . finishedLoading ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , progressCallBackAdaptor0 . finishedLoading ( ) )
assertEquals ( false , progressCallBackAdaptor0 . finishedLoading ( ) )
assertEquals ( false , progressCallBackAdaptor0 . finishedLoading ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( false , tokenizerSessPropsInteractions0 . _tokenizerDefinesStartOfLineComment )
assertEquals ( false , tokenizerSessPropsInteractions0 . _tokenizerDefinesStatementSeparator )
assertEquals ( false , tokenizerSessPropsInteractions0 . _tokenizerDefinesStatementSeparator )
assertEquals ( false , boolean0 )
assertEquals ( false , tokenizerSessPropsInteractions0 . _tokenizerDefinesStartOfLineComment )
assertEquals ( false , tokenizerSessPropsInteractions0 . _tokenizerDefinesStatementSeparator )
assertNull ( sQLDriverPropertyCollection0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( "supportsSchemaInTbleDefiniti ] ns" , string0 )
assertEquals ( "Other" , databaseObjectType0 . getKeyForSerializationReplace ( ) )
assertEquals ( "supportsSchemaInTbleDefiniti ] ns" , string0 )
assertEquals ( "" , databaseObjectInfo0 . getSimpleName ( ) )
assertEquals ( 610922589 , int0 )
assertEquals ( " ] K' { Qw { " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 2 , sQLDriverPropertyCollection0 . size ( ) )
assertNotNull ( sQLDriverPropertyArray0 )
assertEquals ( 0 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 2 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 0 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 2 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 1 , sQLDriverPropertyCollection0 . size ( ) )
assertEquals ( 91 , int0 )
assertNotNull ( jDBCTypeMapper0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( IndexInfo . IndexType . STATISTIC , indexInfo_IndexType0 )
assertEquals ( IndexInfo . IndexType . HASHED , indexInfo_IndexType0 )
assertEquals ( IndexInfo . IndexType . CLUSTERED , indexInfo_IndexType0 )
assertEquals ( IndexInfo . IndexType . OTHER , indexInfo_IndexType0 )
assertEquals ( IndexInfo . SortOrder . ASC , indexInfo_SortOrder0 )
assertEquals ( IndexInfo . SortOrder . NONE , indexInfo_SortOrder0 )
assertEquals ( IndexInfo . SortOrder . DESC , indexInfo_SortOrder0 )
assertEquals ( true , boolean0 )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "" , sQLDriver1 . getName ( ) )
assertNull ( string0 )
assertEquals ( true , sQLDriver0 . isJDBCDriverClassLoaded ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( "" , sQLDriver0 . toString ( ) )
assertNull ( string0 )
assertNull ( sQLDriver0 . getDriverClassName ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , sQLDriver0 . isJDBCDriverClassLoaded ( ) )
assertEquals ( "" , sQLDriver0 . getUrl ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "5d438a13 : 13f9fa408b0 : - 77f9" , uidIdentifier0 . toString ( ) )
assertNull ( sQLDriver0 . getWebSiteUrl ( ) )
assertNull ( sQLDriver0 . getDriverClassName ( ) )
assertEquals ( " ] C" , sQLDriver0 . getJarFileName ( ) )
assertNull ( sQLDriver0 . getUrl ( ) )
assertNull ( sQLDriver0 . getJarFileName ( ) )
assertNull ( sQLDriver0 . getJarFileName ( ) )
assertEquals ( "" , sQLDriver0 . getUrl ( ) )
assertFalse ( stringWrapperArray1 . equals ( stringWrapperArray0 ) )
assertEquals ( "5d438a13 : 13f9fa408b0 : - 77f1" , uidIdentifier0 . toString ( ) )
assertNull ( sQLDriver0 . getDriverClassName ( ) )
assertNull ( sQLDriver0 . getDriverClassName ( ) )
assertNotNull ( dataSetDefinition0 )
assertNotNull ( tableInfoDataSet0 )
assertNotNull ( propertyDescriptorArray0 )
assertNotNull ( tableQualifier0 )
assertNotNull ( tableQualifier0 )
assertEquals ( "''dvYOE" , tableQualifier0 . getSchema ( ) )
assertEquals ( " ; " , queryTokenizer0 . getQuerySep ( ) )
assertEquals ( false , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertEquals ( " - - " , queryTokenizer0 . getLineCommentBegin ( ) )
assertEquals ( true , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertEquals ( " - - " , string0 )
assertEquals ( " ; " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertEquals ( true , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertEquals ( " - - " , queryTokenizer0 . getLineCommentBegin ( ) )
assertEquals ( " - - " , queryTokenizer0 . getLineCommentBegin ( ) )
assertEquals ( true , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertEquals ( true , queryTokenizer0 . isRemoveMultiLineComment ( ) )
assertNotNull ( list0 )
assertNotNull ( propertyDescriptorArray0 )
assertNotNull ( propertyDescriptorArray0 )
assertNotNull ( classArray0 )
assertNotNull ( sQLDriverClassLoader0 )
assertNotNull ( sQLDriverClassLoader0 )
assertNull ( driverPropertyInfo0 )
assertEquals ( false , boolean0 )
assertEquals ( " - KF59 ] nH" , sQLDriverProperty1 . getName ( ) )
assertNotNull ( sQLDriverProperty0 )
assertEquals ( " - KF59 ] nH" , string0 )
assertEquals ( false , sQLDriverProperty0 . isSpecified ( ) )
assertNull ( sQLDriverProperty0 . getValue ( ) )
assertNotNull ( dataSetDefinition0 )
assertNotNull ( metaDataListDataSet0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( 1 , metaDataListDataSet0 . getColumnCount ( ) )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertNotNull ( classArray0 )
assertNull ( iHasIdentifier0 )
assertEquals ( "2014" , integerIdentifier0 . toString ( ) )
assertNotNull ( classArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , fileWrapperImpl0 . mkdirs ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql" , fileWrapperImpl0 . getAbsolutePath ( ) )
assertEquals ( true , fileWrapperImpl1 . canRead ( ) )
assertEquals ( " , PZ . . 1E ! ; zV" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( true , uRI0 . isAbsolute ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , fileWrapperImpl1 . exists ( ) )
assertEquals ( false , boolean0 )
assertTrue ( fileWrapperImpl0 . equals ( fileWrapperImpl1 ) )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / Khz : t'Xpq / Khz : t'Xpq" , string0 )
assertEquals ( "antlr" , string0 )
assertEquals ( false , fileWrapperImpl1 . isDirectory ( ) )
assertEquals ( "Khz : t'Xpq" , string0 )
assertEquals ( false , boolean0 )
assertNull ( fileWrapperArray0 )
assertNull ( stringArray1 )
assertNull ( fileWrapperArray0 )
assertNull ( uRL0 . getRef ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / Khz : t'Xpq / Khz : t'Xpq" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( fileWrapperArray0 )
assertNull ( fileWrapperArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "Ki2G4^BrQI^ ; b / Ki2G4^BrQI^ ; b / Ki2G4^BrQI^ ; b" , fileWrapperImpl1 . getPath ( ) )
assertEquals ( 0L , fileWrapperImpl1 . length ( ) )
assertNull ( fileWrapperImpl1 )
assertEquals ( 1310587 , int0 )
assertEquals ( 31 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertFalse ( fileWrapperImpl1 . equals ( fileWrapperImpl0 ) )
assertEquals ( "antlr" , fileWrapperImpl1 . getName ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( "\n" , string0 )
assertEquals ( "\n" , stringUtilities0 . getEolStr ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray1 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( " - J" , string0 )
assertNotNull ( string0 )
assertEquals ( "DaUC_O8e_aMqYzn_4Eo" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( " & lt ; span & gt ; " , string0 )
assertEquals ( "0 bytes" , string0 )
assertEquals ( " : " , string0 )
assertEquals ( 0 , long0 . shortValue ( ) )
assertEquals ( 1118 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( string0 )
assertEquals ( "ZK1^ { > qi" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "U" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "VM 5R ] " , string0 )
assertEquals ( "pgXCZuWxZ" , string0 )
assertNotNull ( string0 )
assertNull ( object0 )
assertEquals ( "DATE" , string0 )
assertEquals ( " < span > " , string0 )
assertNotNull ( fileExtensionFilter0 )
assertNotNull ( fileExtensionFilter0 )
assertNotNull ( fileExtensionFilter0 )
assertNotNull ( fileExtensionFilter0 )
assertNotNull ( fileExtensionFilter0 )
assertNotNull ( libraryResources0 )
assertNotNull ( libraryResources0 )
assertNotNull ( propertyResourceBundle0 )
assertNotNull ( libraryResources0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( " ( * . ) " , extensionFilter0 . getDescription ( ) )
assertEquals ( " ( * . ) " , extensionFilter0 . getDescription ( ) )
assertNotNull ( string0 )
assertNotNull ( stringManagerFactory0 )
assertNotNull ( stringManager0 )
assertEquals ( true , byteArrayInputStream0 . markSupported ( ) )
assertEquals ( true , printStream0 . checkError ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( 0 , pushbackInputStream0 . available ( ) )
assertNotNull ( uRL0 )
assertEquals ( false , boolean0 )
assertEquals ( "40Bm" , propertyChangeListenerProxy0 . getPropertyName ( ) )
assertEquals ( " / fastdata / ac1gf / SF110 / evosuite - 0 . 1 - SNAPSHOT - jar - minimal . jar : lib / antlr - 2 . 7 . 5 . jar : lib / aopalliance - 1 . 0 . jar : lib / asm - 1 . 5 . 3 . jar : lib / asm - attrs - 1 . 5 . 3 . jar : lib / cglib - 2 . 1_3 . jar : lib / cglib - nodep - 2 . 1_3 . jar : lib / commons - cli - 1 . 2 . jar : lib / commons - codec - 1 . 3 . jar : lib / commons - collections - 2 . 1 . 1 . jar : lib / commons - httpclient - 3 . 1 . jar : lib / commons - lang - 2 . 6 . jar : lib / commons - logging - 1 . 0 . 4 . jar : lib / dom4j - 1 . 6 . 1 . jar : lib / easymock - 2 . 4 . jar : lib / easymockclassextension - 2 . 4 . jar : lib / ehcache - 1 . 2 . 3 . jar : lib / fest - assert - 1 . 2 . jar : lib / fest - reflect - 1 . 2 . jar : lib / fest - swing - 1 . 2 . 1 . jar : lib / fest - swing - junit - 1 . 2 . 1 . jar : lib / fest - swing - junit - 4 . 5 - 1 . 2 . 1 . jar : lib / fest - util - 1 . 1 . 3 . jar : lib / forms - 1 . 0 . 5 . jar : lib / gsbase - 2 . 0 . 1 . jar : lib / hibernate - 3 . 2 . 4 . sp1 . jar : lib / hibernate - annotations - 3 . 3 . 0 . ga . jar : lib / hibernate - commons - annotations - 3 . 3 . 0 . ga . jar : lib / hibernate - entitymanager - 3 . 3 . 1 . ga . jar : lib / hibernate - validator - 3 . 0 . 0 . ga . jar : lib / javassist - 3 . 3 . ga . jar : lib / jboss - common - core - 2 . 0 . 4 . GA . jar : lib / jcip - annotations - 1 . 0 . jar : lib / jcommon - 1 . 0 . 17 . jar : lib / jfreechart - 1 . 0 . 14 . jar : lib / jide - oss - 2 . 4 . 8 . jar : lib / jxl - 2 . 6 . 10 . jar : lib / log4j - 1 . 2 . 15 . jar : lib / mockito - all - 1 . 8 . 5 . jar : lib / nanoxml - 2 . 2 . 3 . jar : lib / persistence - api - 1 . 0 . jar : lib / spring - beans - 2 . 5 . 2 . jar : lib / spring - context - 2 . 5 . 2 . jar : lib / spring - context - support - 2 . 5 . 2 . jar : lib / spring - core - 2 . 5 . 2 . jar : lib / stringtemplate - 3 . 1 - b1 . jar : lib / xml - apis - 1 . 0 . b2 . jar : squirrel - sql . jar" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 , properties0 . size ( ) )
assertEquals ( true , proxySettings0 . getHttpUseProxy ( ) )
assertEquals ( true , proxySettings0 . getHttpUseProxy ( ) )
assertNull ( proxySettings0 . getHttpProxyPassword ( ) )
assertEquals ( 1 , properties0 . size ( ) )
assertEquals ( false , boolean0 )
assertNull ( proxySettings0 . getHttpProxyServer ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( true , proxySettings0 . getSocksUseProxy ( ) )
assertNull ( proxySettings0 . getSocksProxyServer ( ) )
assertNull ( string0 )
assertEquals ( false , proxySettings0 . getSocksUseProxy ( ) )
assertNull ( proxySettings1 . getHttpNonProxyHosts ( ) )
assertNull ( proxySettings0 . getSocksProxyServer ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( proxySettings0 . getHttpProxyUser ( ) )
assertNull ( string0 )
assertEquals ( false , proxySettings0 . getHttpUseProxy ( ) )
assertNull ( proxySettings0 . getSocksProxyPort ( ) )
assertNull ( string0 )
assertEquals ( true , proxySettings0 . getHttpUseProxy ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( localeUtils0 )
assertNotNull ( bareBonesBrowserLaunch0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( throwableArray0 )
assertNotNull ( throwableArray0 )
assertNotNull ( stringArray0 )
assertEquals ( true , log4jLogger0 . isDebugEnabled ( ) )
assertNotNull ( loggerController0 )
assertNotNull ( dimensionWrapper0 )
assertNotNull ( dimensionWrapper0 )
assertNotNull ( dimensionWrapper0 )
assertNotNull ( dimensionWrapper0 )
assertNotNull ( dimensionWrapper0 )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( "java . awt . Rectangle [ x = - 598 , y = - 1794 , width = 0 , height = - 1566 ] " , rectangle1 . toString ( ) )
assertEquals ( - 1566 , rectangleWrapper0 . getHeight ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 598 , rectangleWrapper0 . getX ( ) )
assertNotNull ( rectangleWrapper0 )
assertEquals ( 0 , rectangleWrapper0 . getHeight ( ) )
assertNotNull ( rectangleWrapper0 )
assertNotNull ( rectangleWrapper0 )
assertNotNull ( rectangleWrapper0 )
assertNotNull ( pointWrapper0 )
assertNotNull ( pointWrapper0 )
assertNotNull ( pointWrapper0 )
assertNotNull ( pointWrapper0 )
assertNotNull ( pointWrapper0 )
assertNotNull ( propertyDescriptorArray0 )
assertNotNull ( propertyDescriptorArray0 )
assertNotNull ( propertyDescriptorArray0 )
assertNull ( string0 )
assertNotNull ( propertyDescriptorArray0 )
assertEquals ( "Q " , uRLWrapper0 . getExternalForm ( ) )
assertNull ( string0 )
assertEquals ( " | \" : t : / / [ | \" : T ] : 1 | \" : T" , uRLWrapper0 . getExternalForm ( ) )
assertEquals ( "changes . txt" , dBCopyPlugin0 . getChangeLogFileName ( ) )
assertEquals ( "Rob Manning" , dBCopyPlugin0 . getAuthor ( ) )
assertNull ( list0 )
assertNull ( iSession0 )
assertEquals ( false , dBCopyPlugin0 . allowsSessionStartedInBackground ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 102_squirrel - sql / plugins / dbcopy . jar" , dBCopyPlugin0 . getPluginJarFilePath ( ) )
assertEquals ( "DBCopy Plugin" , string0 )
assertNull ( string0 )
assertEquals ( "readme . html" , string0 )
assertEquals ( "Dan Dragut" , string0 )
assertEquals ( "license . txt" , string0 )
assertNull ( iSession0 )
assertEquals ( "1 . 15" , string0 )
assertNull ( iDatabaseObjectInfo0 )
assertEquals ( "changes . txt" , string0 )
assertEquals ( "Rob Manning" , string0 )
assertEquals ( "Rob Manning" , dBCopyPlugin0 . getAuthor ( ) )
assertEquals ( "DBCopy Plugin" , dBCopyPlugin0 . getDescriptiveName ( ) )
assertNull ( tableInfo0 )
assertNotNull ( colTypeMapper0 )
assertEquals ( 10 , int0 )
assertEquals ( 10 , int0 )
assertEquals ( 10 , int0 )
assertEquals ( "No resource found for key " , string0 )
assertEquals ( "No resource found for key y : BFu2B : x" , string0 )
assertEquals ( "No resource found for key " , string0 )
assertNull ( uICallbacks0 )
assertNotNull ( preferencesManager0 )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyData ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isCopyPrimaryKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isTestColumnNames ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isPruneDuplicateIndexDefs ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( 1000 , dBCopyPreferenceBean0 . getSelectFetchSize ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isDelayBetweenObjects ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyIndexDefs ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyForeignKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isAutoCommitEnabled ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyForeignKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCommitAfterTableDefs ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( 100L , dBCopyPreferenceBean0 . getRecordDelayMillis ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isTestColumnNames ( ) )
assertEquals ( 100 , dBCopyPreferenceBean0 . getCommitCount ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isWriteScript ( ) )
assertEquals ( 100 , dBCopyPreferenceBean0 . getCommitCount ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyForeignKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyIndexDefs ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isTestColumnNames ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseTruncate ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isDelayBetweenObjects ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseTruncate ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCheckKeywords ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isCopyPrimaryKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isAutoCommitEnabled ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isDelayBetweenObjects ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isPromptForDialect ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isDelayBetweenObjects ( ) )
assertEquals ( ( - 1L ) , dBCopyPreferenceBean0 . getTableDelayMillis ( ) )
assertEquals ( 8192 , dBCopyPreferenceBean0 . getFileCacheBufferSize ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isPromptForDialect ( ) )
assertEquals ( 8192 , dBCopyPreferenceBean0 . getFileCacheBufferSize ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyForeignKeys ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isWriteScript ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyForeignKeys ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCopyData ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isUseFileCaching ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCheckKeywords ( ) )
assertEquals ( false , dBCopyPreferenceBean0 . isPromptForDialect ( ) )
assertEquals ( true , dBCopyPreferenceBean0 . isCommitAfterTableDefs ( ) )
assertEquals ( - 2046 , errorEvent0 . getType ( ) )
assertEquals ( ( - 2046 ) , int0 )
assertEquals ( - 2046 , errorEvent0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( - 182 , tableEvent0 . getTableNumber ( ) )
assertEquals ( - 786 , tableEvent0 . getTableCount ( ) )
assertEquals ( 0 , tableEvent0 . getTableCount ( ) )
assertEquals ( 0 , int0 )
assertNull ( sessionInfoProvider0 )
assertEquals ( "Record 181 of 0 total records" , recordEvent0 . toString ( ) )
assertEquals ( "Record - 1 of 93 total records" , string0 )
assertEquals ( 366 , recordEvent0 . getRecordNumber ( ) )
assertEquals ( 0 , recordEvent0 . getRecordCount ( ) )
assertEquals ( 1630 , recordEvent0 . getRecordCount ( ) )
assertNull ( intArray0 )
assertEquals ( - 1979 , statementEvent0 . getStatementType ( ) )
assertEquals ( 423 , statementEvent0 . getStatementType ( ) )
assertEquals ( 423 , int0 )
assertEquals ( 423 , statementEvent0 . getStatementType ( ) )
assertEquals ( 1997 , statementEvent0 . getStatementType ( ) )
assertEquals ( 1 , statementEvent0 . getStatementType ( ) )
assertEquals ( "Statement ( ) , bind values = \n ( length = 19 ) : 1 = > aL > | @O | 7CI + _W } lf & \n ( length = 0 ) : 2 = \n ( length = 19 ) : 3 = > aL > | @O | 7CI + _W } lf & \n ( length = 8 ) : 4 = e3no6%1m\n ( length = 0 ) : 5 = \n ( length = 0 ) : 6 = \n ( length = 19 ) : 7 = > aL > | @O | 7CI + _W } lf & \n" , statementEvent0 . toString ( ) )
assertNotNull ( preferencesPanel0 )
assertEquals ( false , preferencesPanel1 . isValid ( ) )
assertEquals ( false , preferencesPanel0 . requestFocusInWindow ( ) )
assertEquals ( "PanelUI" , preferencesPanel0 . getUIClassID ( ) )
assertNotNull ( dualProgressBarDialog0 )
assertNotNull ( jPanel0 )
assertNull ( jDialog0 )
assertNotNull ( jPanel0 )
assertNotNull ( jPanel0 )
assertNotNull ( pasteTableUtil0 )
assertNotNull ( scriptWriter0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( 1000 , dBCopyPreferenceBean0 . getSelectFetchSize ( ) )
assertEquals ( "" , dBUtil0 . getLastStatementValues ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 10 , int0 )
assertEquals ( 686 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( "FX + " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "DBCopy Plugin" , dBCopyPlugin0 . getDescriptiveName ( ) )
assertNotNull ( list0 )
assertEquals ( " [ null ] " , linkedList0 . toString ( ) )
assertNull ( string0 )
