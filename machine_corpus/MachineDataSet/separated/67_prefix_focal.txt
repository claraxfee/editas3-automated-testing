void test0 ( ) throws Throwable { Main main0 = new Main ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { Quota quota0 = Quota . TASKQUEUE_API_CALLS ; String string0 = quota0 . getQuotaName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getQuotaName ( ) { return quotaName ; }
void test1 ( ) throws Throwable { Quota quota0 = Quota . REQUESTS_SECURE_COUNT ; QuotaGroup quotaGroup0 = quota0 . getQuotaGroup ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" QuotaGroup getQuotaGroup ( ) { return quotaGroup ; }
void test0 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; int int0 = quotaDetails0 . getResetIntervalHours ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNextResetWithinHours ( ) { return nextResetWithinHours ; }
void test1 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; quotaDetails0 . setNextResetWithinHours ( ( - 1 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNextResetWithinHours ( ) { return nextResetWithinHours ; }
void test2 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; quotaDetails0 . setResetIntervalHours ( ( - 1 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNextResetWithinHours ( ) { return nextResetWithinHours ; }
void test3 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; int int0 = quotaDetails0 . getNextResetWithinHours ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getResetIntervalHours ( ) { return resetIntervalHours ; }
void test4 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; List < QuotaValue > list0 = quotaDetails0 . getValues ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNextResetWithinHours ( ) { return nextResetWithinHours ; }
void test5 ( ) throws Throwable { QuotaDetails quotaDetails0 = new QuotaDetails ( ) ; Quota quota0 = Quota . STORAGE_DATASTORE_CPU_TIME ; quotaDetails0 . findQuota ( quota0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNextResetWithinHours ( ) { return nextResetWithinHours ; }
void test0 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; quotaValue0 . setUnit ( " ; 6qJz * - & Z ] ^d . ? * } 9t" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test1 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = BigDecimal . ZERO ; quotaValue0 . setLimit ( bigDecimal0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test2 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; boolean boolean0 = quotaValue0 . isOkay ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test3 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; quotaValue0 . getQuota ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test4 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; String string0 = quotaValue0 . getUnit ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test5 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = quotaValue0 . getLimit ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test6 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = BigDecimal . TEN ; quotaValue0 . setPercent ( bigDecimal0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test7 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = quotaValue0 . getValue ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test8 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; Quota quota0 = Quota . DEPLOYMENTS_COUNT ; quotaValue0 . setQuota ( quota0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test9 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = BigDecimal . TEN ; quotaValue0 . setValue ( bigDecimal0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test10 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; quotaValue0 . setOkay ( false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test11 ( ) throws Throwable { QuotaValue quotaValue0 = new QuotaValue ( ) ; BigDecimal bigDecimal0 = quotaValue0 . getPercent ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isOkay ( ) { return okay ; }
void test0 ( ) throws Throwable { Manager manager0 = new Manager ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
