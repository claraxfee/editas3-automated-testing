assertEquals ( 2 , growableShortArray0 . getCurrentLength ( ) )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertEquals ( 8 , growableShortArray0 . getCurrentLength ( ) )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertEquals ( 4 , growableShortArray0 . getCurrentLength ( ) )
assertNotNull ( growableShortArray0 )
assertNotNull ( growableShortArray0 )
assertEquals ( "nullx 1295x - 871" , string0 )
assertEquals ( 82212 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "nullx 1295" , runLength0 . toString ( ) )
assertEquals ( "nullx 0" , runLength1 . toString ( ) )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotSame ( longArray0 , longArray1 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertEquals ( 8 , growableLongArray0 . getCurrentLength ( ) )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertNotNull ( growableLongArray0 )
assertEquals ( 8 , growableLongArray0 . getCurrentLength ( ) )
assertNotNull ( growableIntArray0 )
assertNotNull ( growableIntArray0 )
assertEquals ( 24 , growableIntArray0 . getCurrentLength ( ) )
assertNotNull ( growableIntArray0 )
assertNotNull ( growableIntArray0 )
assertFalse ( intArray1 . equals ( intArray0 ) )
assertNotNull ( growableIntArray0 )
assertNotNull ( growableIntArray0 )
assertNotNull ( growableIntArray0 )
assertEquals ( 10 , growableIntArray0 . getCurrentLength ( ) )
assertNotNull ( growableIntArray0 )
assertNotNull ( growableIntArray0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertNotNull ( indexedQualityFastaFileDataStore0 )
assertEquals ( false , boolean0 )
assertNotNull ( streamingIterator0 )
assertEquals ( false , indexedQualityFastaFileDataStore_IndexedQualitySequenceFastaFileDataStore2_0 . isClosed ( ) )
assertEquals ( false , indexedQualityFastaFileDataStore_IndexedQualitySequenceFastaFileDataStore2_0 . isClosed ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , indexedQualityFastaFileDataStore_IndexedQualitySequenceFastaFileDataStore2_0 . isClosed ( ) )
assertNotNull ( proxy0 )
assertEquals ( false , largeQualityFastaFileDataStore0 . isClosed ( ) )
assertNotNull ( indexedAminoAcidSequenceFastaFileDataStore0 )
assertNotNull ( streamingIterator0 )
assertEquals ( false , indexedAminoAcidSequenceFastaFileDataStore_IndexedAminoAcidSequenceFastaFileDataStore2_0 . isClosed ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , indexedAminoAcidSequenceFastaFileDataStore_IndexedAminoAcidSequenceFastaFileDataStore2_0 . isClosed ( ) )
assertEquals ( false , indexedAminoAcidSequenceFastaFileDataStore_IndexedAminoAcidSequenceFastaFileDataStore2_0 . isClosed ( ) )
assertEquals ( false , largeAminoAcidSequenceFastaFileDataStore0 . isClosed ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , basicChromatogramBuilder0 . id ( ) )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertNull ( positionSequence0 )
assertSame ( basicChromatogramBuilder1 , basicChromatogramBuilder0 )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertSame ( basicChromatogramBuilder1 , basicChromatogramBuilder0 )
assertFalse ( shortArray1 . equals ( shortArray0 ) )
assertEquals ( "" , basicChromatogramBuilder1 . id ( ) )
assertSame ( basicChromatogramBuilder0 , basicChromatogramBuilder1 )
assertEquals ( 0 , map0 . size ( ) )
assertNull ( map0 )
assertEquals ( "" , basicChromatogramBuilder1 . id ( ) )
assertNotNull ( defaultChannel0 )
assertNotNull ( defaultChannel0 )
assertNotNull ( defaultChannel0 )
assertNotNull ( defaultChannel0 )
assertNotNull ( defaultChannel0 )
assertNotNull ( defaultChannelGroup0 )
assertNotNull ( string0 )
assertNotNull ( defaultChannelGroup0 )
assertNotNull ( defaultChannelGroup0 )
assertNotNull ( defaultChannelGroup0 )
assertNotNull ( defaultChannelGroup0 )
assertNotNull ( defaultChannelGroup0 )
assertSame ( defaultChannel0 , defaultChannel1 )
assertSame ( defaultChannel0 , defaultChannel1 )
assertSame ( defaultChannel1 , defaultChannel0 )
assertSame ( defaultChannel0 , defaultChannel1 )
assertNotNull ( basicChromatogram0 )
assertNotNull ( basicChromatogram0 )
assertNotNull ( basicChromatogram0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( "" , basicChromatogram1 . getId ( ) )
assertNotNull ( basicChromatogram0 )
assertNotNull ( basicChromatogram0 )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000" , string0 )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000\u0000" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "ShortArrayTaggedDataRecord" , class0 . getSimpleName ( ) )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNotNull ( shortArray0 )
assertEquals ( "GELP" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "GELP" , taggedDataName0 . toString ( ) )
assertEquals ( 1 , int0 )
assertEquals ( TaggedDataType . TYPE_1 , taggedDataType0 )
assertEquals ( "Ab1LocalTime [ hour = 0 , min = - 410 , sec = 1052 ] " , ab1LocalTime0 . toString ( ) )
assertEquals ( ( - 1271 ) , int0 )
assertEquals ( "Ab1LocalTime [ hour = - 1305 , min = - 1305 , sec = 436 ] " , ab1LocalTime0 . toString ( ) )
assertEquals ( ( - 1232312 ) , int0 )
assertEquals ( "Ab1LocalTime [ hour = - 1305 , min = - 1305 , sec = 436 ] " , string0 )
assertEquals ( "Ab1LocalTime [ hour = - 1271 , min = - 684 , sec = - 1271 ] " , ab1LocalTime1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( - 1271 , ab1LocalTime0 . getHour ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0L , defaultTimeTaggedDataRecord0 . getRecordLength ( ) )
assertEquals ( "org . jcvi . jillion . internal . trace . chromat . abi . tag . DefaultAsciiTaggedDataRecord [ DATA ( - 66 ) 0 ] " , defaultAsciiTaggedDataRecord0 . toString ( ) )
assertEquals ( 0L , defaultDateTaggedDataRecord0 . getRecordLength ( ) )
assertEquals ( ( - 264572072 ) , int0 )
assertEquals ( ( - 2027L ) , defaultDateTaggedDataRecord0 . getRecordLength ( ) )
assertEquals ( 30L , defaultPascalStringTaggedDataRecord0 . getNumberOfElements ( ) )
assertEquals ( 981L , defaultPascalStringTaggedDataRecord0 . getNumberOfElements ( ) )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1190L ) , defaultShortArrayTaggedDataRecord0 . getTagNumber ( ) )
assertEquals ( - 685 , defaultTaggedDataRecord0 . getElementLength ( ) )
assertEquals ( 0 , ab1LocalTime0 . getHour ( ) )
assertEquals ( false , class0 . isLocalClass ( ) )
assertEquals ( false , class0 . isInterface ( ) )
assertSame ( taggedDataRecordBuilder0 , taggedDataRecordBuilder1 )
assertSame ( taggedDataRecordBuilder1 , taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertSame ( taggedDataRecordBuilder1 , taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertNotNull ( taggedDataRecordBuilder0 )
assertEquals ( 61534 , int0 )
assertEquals ( 1 , ab1LocalDate0 . getMonth ( ) )
assertNotNull ( date0 )
assertEquals ( 32 , ab1LocalDate0 . getMonth ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( - 735 , ab1LocalDate1 . getDay ( ) )
assertEquals ( 1 , ab1LocalDate0 . getMonth ( ) )
assertEquals ( 3 , ab1LocalDate0 . getYear ( ) )
assertNotNull ( string0 )
assertEquals ( 29791 , int0 )
assertEquals ( "DefaultScanRate [ time = 0 , period = 0 , line = 0 ] " , defaultScanRate1 . toString ( ) )
assertFalse ( defaultScanRate1 . equals ( defaultScanRate0 ) )
assertEquals ( "DefaultScanRate [ time = 0 , period = 0 , line = 0 ] " , defaultScanRate0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1 , defaultScanRate1 . getFirstScanLine ( ) )
assertEquals ( 0 , defaultScanRate0 . getFirstScanLine ( ) )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( false , class0 . isMemberClass ( ) )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1158222878 ) , int0 )
assertNull ( range0 )
assertEquals ( false , boolean0 )
assertNotNull ( ztrChromatogramWriter0 )
assertNotNull ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 )
assertNotNull ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 )
assertNotNull ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 )
assertSame ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder1 , defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 )
assertNotNull ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 )
assertSame ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 , defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder1 )
assertSame ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 , defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder1 )
assertSame ( defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder0 , defaultZTRChromatogramWriterBuilder_ChunkEncoderBuilder1 )
assertEquals ( "CLIP" , string0 )
assertEquals ( 5 , chunkType0 . ordinal ( ) )
assertNull ( nucleotideSequence0 )
assertEquals ( "BASE" , chunk0 . name ( ) )
assertEquals ( 0L , nucleotideSequence0 . getLength ( ) )
assertEquals ( "POSITIONS" , chunk0 . name ( ) )
assertNull ( nucleotideSequence0 )
assertNull ( nucleotideSequence0 )
assertNotNull ( byteArray0 )
assertEquals ( 3 , byteArrayInputStream0 . available ( ) )
assertEquals ( 0 , deltaEncodedData0 . getPaddingSize ( ) )
assertEquals ( ( byte ) 3 , byte0 )
assertNotSame ( byteArray1 , byteArray0 )
assertNotSame ( byteArray1 , byteArray0 )
assertFalse ( byteArray2 . equals ( byteArray0 ) )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertFalse ( byteArray1 . equals ( byteArray0 ) )
assertFalse ( byteArray2 . equals ( byteArray1 ) )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertEquals ( "INSTANCE" , rawData0 . name ( ) )
assertEquals ( "LEVEL_1" , deltaStrategy0 . toString ( ) )
assertEquals ( 10 , int0 )
assertEquals ( 1562 , int0 )
assertNotSame ( byteArray1 , byteArray0 )
assertNotSame ( byteArray1 , byteArray0 )
assertSame ( byteArray1 , byteArray0 )
assertEquals ( true , boolean0 )
assertEquals ( ( - 1807454432 ) , int0 )
assertEquals ( false , boolean0 )
assertNotNull ( shortArray1 )
assertNotNull ( byteArray0 )
assertEquals ( 0 , defaultSCFHeader0 . getSampleOffset ( ) )
assertEquals ( false , boolean0 )
assertEquals ( ( - 944262016 ) , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( ( - 935L ) , long0 )
assertNull ( encodedSection0 )
assertEquals ( 126L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 52L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( commentSectionCodec0 )
assertNotNull ( commentSectionCodec0 )
assertNotNull ( version3BasesSectionCodec0 )
assertNotNull ( version2BasesSectionCodec0 )
assertEquals ( 1L , long0 )
assertEquals ( 1 , bytePositionStrategy0 . getSampleSize ( ) )
assertEquals ( 1518L , long0 )
assertEquals ( 2 , shortPositionStrategy0 . getSampleSize ( ) )
assertNotNull ( shortArray0 )
assertNull ( byteBuffer0 )
assertSame ( section1 , section0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , byteBuffer0 . getDouble ( ) , 0 . 01D )
assertEquals ( ( - 1796951359 ) , int0 )
assertEquals ( 1 , defaultSCFHeader0 . getNumberOfSamples ( ) )
assertEquals ( 180 , defaultSCFHeader0 . getPrivateDataOffset ( ) )
assertEquals ( - 1479 , defaultSCFHeader0 . getSampleOffset ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , defaultSCFHeader0 . getPrivateDataSize ( ) )
assertEquals ( 495 , defaultSCFHeader1 . getBasesOffset ( ) )
assertEquals ( 37 , defaultSCFHeader0 . getCommentOffset ( ) )
assertEquals ( - 1796951359 , defaultSCFHeader0 . getCommentSize ( ) )
assertEquals ( 1 , defaultSCFHeader1 . getNumberOfBases ( ) )
assertEquals ( - 15 , defaultSCFHeader0 . getPrivateDataSize ( ) )
assertEquals ( - 1 , defaultSCFHeader1 . getSampleSize ( ) )
assertEquals ( ( - 1 . 0F ) , defaultSCFHeader1 . getVersion ( ) , 0 . 01F )
assertEquals ( ( byte ) 1 , byte0 )
assertEquals ( 127 , int0 )
assertEquals ( 32767 , shortPositionStrategy0 . getMaxAllowedValue ( ) )
assertEquals ( 2 , shortPositionStrategy0 . getSampleSize ( ) )
assertEquals ( 32767 , int0 )
assertEquals ( ( byte ) 2 , byte0 )
assertEquals ( " [ [ 0 . . - 1 ] / 0B , [ 0 . . - 1 ] / 0B ] " , linkedList0 . toString ( ) )
assertNotNull ( range0 )
assertEquals ( "Residue Based" , string0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertEquals ( " [ 65535 . . 2147483647 ] / 0B" , range0 . toString ( ) )
assertNotNull ( directedRange0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( directedRange0 )
assertSame ( range_Builder1 , range_Builder0 )
assertNotNull ( range0 )
assertSame ( range_Builder1 , range_Builder0 )
assertSame ( range_Builder1 , range_Builder0 )
assertFalse ( range_Builder1 . equals ( range_Builder0 ) )
assertEquals ( 0L , range0 . getBegin ( ) )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( directedRange0 )
assertNotNull ( range0 )
assertEquals ( "DirectedRange [ range = [ - 1 . . 2147483640 ] / 0B , direction = FORWARD ] " , directedRange0 . toString ( ) )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range_Builder0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( range0 )
assertNotNull ( string0 )
assertEquals ( 0 , direction0 . ordinal ( ) )
assertNotSame ( direction2 , direction1 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertEquals ( "DirectedRange [ range = [ - 12 . . - 12 ] / 0B , direction = REVERSE ] " , directedRange0 . toString ( ) )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertNotNull ( directedRange0 )
assertEquals ( 3 , int0 )
assertEquals ( 7 , int0 )
assertSame ( nucleotideSequence1 , nucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertEquals ( false , nucleotide1 . isGap ( ) )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertNotNull ( defaultReferenceEncodedNucleotideSequence0 )
assertEquals ( 826 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 122 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( byteArray0 )
assertEquals ( Nucleotide . Gap , nucleotide0 )
assertEquals ( Nucleotide . Gap , nucleotide0 )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( 0 , int0 )
assertNotNull ( string0 )
assertNotNull ( byteArray0 )
assertEquals ( ( byte ) 12 , byte0 )
assertEquals ( "C" , string0 )
assertEquals ( Nucleotide . Weak , nucleotide0 )
assertEquals ( Nucleotide . Unknown , nucleotide1 )
assertEquals ( Nucleotide . Thymine , nucleotide2 )
assertEquals ( Nucleotide . NotAdenine , nucleotide1 )
assertEquals ( Nucleotide . NotCytosine , nucleotide1 )
assertEquals ( Nucleotide . NotGuanine , nucleotide1 )
assertEquals ( Nucleotide . NotThymine , nucleotide1 )
assertEquals ( Nucleotide . Weak , nucleotide1 )
assertEquals ( Nucleotide . Keto , nucleotide1 )
assertEquals ( Nucleotide . Pyrimidine , nucleotide1 )
assertEquals ( Nucleotide . Strong , nucleotide1 )
assertEquals ( Nucleotide . Purine , nucleotide1 )
assertEquals ( Nucleotide . Amino , nucleotide1 )
assertEquals ( Nucleotide . Gap , nucleotide1 )
assertEquals ( false , nucleotide1 . isGap ( ) )
assertEquals ( Nucleotide . Cytosine , nucleotide1 )
assertEquals ( false , nucleotide0 . isGap ( ) )
assertEquals ( Nucleotide . Gap , nucleotide0 )
assertEquals ( Nucleotide . Adenine , nucleotide0 )
assertEquals ( Nucleotide . Cytosine , nucleotide0 )
assertEquals ( Nucleotide . NotCytosine , nucleotide0 )
assertEquals ( Nucleotide . Guanine , nucleotide0 )
assertEquals ( true , boolean0 )
assertEquals ( Nucleotide . Amino , nucleotide0 )
assertEquals ( Nucleotide . Unknown , nucleotide0 )
assertEquals ( Nucleotide . Purine , nucleotide0 )
assertEquals ( Nucleotide . Strong , nucleotide0 )
assertEquals ( Nucleotide . NotThymine , nucleotide0 )
assertEquals ( Nucleotide . Unknown , nucleotide0 )
assertEquals ( Nucleotide . Pyrimidine , nucleotide0 )
assertEquals ( Nucleotide . Adenine , nucleotide0 )
assertEquals ( Nucleotide . NotAdenine , nucleotide0 )
assertEquals ( Nucleotide . Cytosine , nucleotide0 )
assertEquals ( Nucleotide . Guanine , nucleotide0 )
assertEquals ( Nucleotide . NotGuanine , nucleotide0 )
assertEquals ( "Keto" , nucleotide0 . name ( ) )
assertEquals ( Nucleotide . Amino , nucleotide0 )
assertEquals ( Nucleotide . Unknown , nucleotide0 )
assertEquals ( Nucleotide . Purine , nucleotide0 )
assertEquals ( Nucleotide . Strong , nucleotide0 )
assertEquals ( Nucleotide . Thymine , nucleotide0 )
assertEquals ( Nucleotide . NotThymine , nucleotide0 )
assertEquals ( Nucleotide . Weak , nucleotide0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , nucleotide0 . isGap ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertNotNull ( set0 )
assertNotNull ( set0 )
assertEquals ( 1 , set0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 64 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1224 ) , int0 )
assertEquals ( 2 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( "Lys" , string0 )
assertEquals ( "K" , string0 )
assertEquals ( 'K' , char0 )
assertEquals ( "Lysine" , string0 )
assertEquals ( ( byte ) 2 , byte0 )
assertEquals ( AminoAcid . Lysine , aminoAcid0 )
assertEquals ( "R" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( string0 )
assertEquals ( AminoAcid . Isoleucine , aminoAcid0 )
assertEquals ( 0 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( 1 , list0 . size ( ) )
assertNotNull ( codon0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertNull ( codon0 )
assertNotNull ( codon0 )
assertEquals ( AminoAcid . Methionine , aminoAcid0 )
assertEquals ( 5 , list0 . size ( ) )
assertNotNull ( list0 )
assertNotNull ( codon0 )
assertNotNull ( string0 )
assertEquals ( Codon . Frame . ZERO , codon_Frame0 )
assertEquals ( 431 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 890 , int0 )
assertNotSame ( dataStoreFilter0 , dataStoreFilter1 )
assertNotNull ( dataStoreFilter0 )
assertNotNull ( dataStoreFilter0 )
assertNotNull ( dataStoreFilter0 )
assertNotNull ( dataStoreFilter0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 2048L , runLengthEncodedQualitySequence0 . getLength ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertEquals ( 0 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertNotNull ( byteArray0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 39 ) , int0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray1 )
assertNotNull ( byteArray1 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertFalse ( runLengthEncodedQualityCodec1 . equals ( runLengthEncodedQualityCodec0 ) )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray1 )
assertNotNull ( byteArray1 )
assertNotNull ( bwaQualityTrimmer0 )
assertNotSame ( qualityTrimmer1 , qualityTrimmer0 )
assertSame ( lucyQualityTrimmerBuilder1 , lucyQualityTrimmerBuilder0 )
assertEquals ( "" , string0 )
assertEquals ( " . . j . . j . . j . . j . . j . . j . . j . . " , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "^ > pWavrq ! %M" , string0 )
assertNotNull ( byteArray0 )
assertEquals ( 3 , byteArrayInputStream0 . available ( ) )
assertNotNull ( bitSet0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 5 , byteArrayInputStream0 . available ( ) )
assertEquals ( 7 , byteArrayInputStream0 . available ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 179 , int0 )
assertEquals ( 63609 , int0 )
assertEquals ( "" , file0 . toString ( ) )
assertEquals ( " ) 9 > 5IN1zm / ) 9 > 5IN1zm" , file0 . toString ( ) )
assertEquals ( false , file0 . canRead ( ) )
assertEquals ( true , file0 . canRead ( ) )
assertEquals ( "java . util . Scanner [ delimiters = \\p { javaWhitespace } + ] [ position = 0 ] [ match valid = false ] [ need input = false ] [ source closed = true ] [ skipped = false ] [ group separator = \\ , ] [ decimal separator = \\ . ] [ positive prefix = ] [ negative prefix = \\Q - \\E ] [ positive suffix = ] [ negative suffix = ] [ NaN string = \\Q\uFFFD\\E ] [ infinity string = \\Q\u221E\\E ] " , scanner0 . toString ( ) )
assertEquals ( true , bufferedInputStream0 . markSupported ( ) )
assertNotNull ( shortArray0 )
assertEquals ( ( byte ) ( - 47 ) , byte0 )
assertEquals ( ( byte ) ( - 1 ) , byte0 )
assertEquals ( ( short ) 255 , short0 )
assertEquals ( 1884 , int0 )
assertEquals ( 1 , byteArrayInputStream0 . available ( ) )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( 4 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( - 1 , pushbackInputStream0 . read ( ) )
assertEquals ( 11 , int0 )
assertEquals ( "0" , position0 . toString ( ) )
assertEquals ( 3 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( true , iterator0 . hasNext ( ) )
assertEquals ( 14L , long0 )
assertEquals ( ( - 448696608 ) , int0 )
assertEquals ( " [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] " , string0 )
assertFalse ( shortArray1 . equals ( shortArray0 ) )
assertEquals ( "0" , position0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertFalse ( defaultPositionSequence0 . equals ( defaultPositionSequence1 ) )
assertEquals ( 1 , int0 )
assertEquals ( true , sortedMap0 . isEmpty ( ) )
assertNotNull ( sortedMap0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 2136991324 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( ( - 1 ) , ( int ) integer1 )
assertEquals ( 1 , ( int ) integer1 )
assertEquals ( 1 . 0 , ( double ) double0 , 0 . 01D )
assertNotNull ( bigInteger0 )
assertNotNull ( bigInteger0 )
assertEquals ( 0 , bigInteger0 . byteValue ( ) )
assertNotNull ( bigInteger0 )
assertEquals ( 10L , ( long ) long0 )
assertEquals ( ( - 1L ) , ( long ) long0 )
assertEquals ( "P0S" , string0 )
assertEquals ( "P15888D1H31M22S" , string0 )
assertNotNull ( string0 )
assertEquals ( "P1S" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "a : Kwc ) < WDI * " , joinedStringBuilder0 . toString ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( fileIterator0 )
assertNotNull ( fileIterator0 )
assertNotNull ( fileIterator0 )
assertEquals ( true , fileIterator0 . hasNext ( ) )
assertSame ( fileIterator_FileIteratorBuilder0 , fileIterator_FileIteratorBuilder1 )
assertNotNull ( fileIterator0 )
assertNotNull ( fileIterator0 )
assertNotNull ( fileIterator0 )
assertEquals ( true , fileIterator0 . hasNext ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 1 , lIFOQueue0 . size ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( false , peekableIterator0 . hasNext ( ) )
assertEquals ( false , peekableStreamingIterator1 . hasNext ( ) )
assertNotNull ( chainedIterator0 )
assertNotNull ( chainedIterator0 )
assertNotNull ( chainedIterator0 )
assertNotNull ( proxy0 )
assertNotNull ( proxy0 )
assertEquals ( 0 , nucleotideSequence0 . getNumberOfGaps ( ) )
assertNotNull ( nucleotideSequence0 )
assertEquals ( 5155 , int0 )
assertNotNull ( byteArray0 )
assertEquals ( 19 . 94F , float0 , 0 . 01F )
assertEquals ( 0L , long0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( short ) 29 , short0 )
assertEquals ( 0 , defaultSffCommonHeader0 . getNumberOfFlowsPerRead ( ) )
assertSame ( defaultSffCommonHeader_Builder1 , defaultSffCommonHeader_Builder0 )
assertSame ( defaultSffCommonHeader_Builder0 , defaultSffCommonHeader_Builder1 )
assertEquals ( ( - 17L ) , defaultSffCommonHeader0 . getNumberOfReads ( ) )
assertSame ( defaultSffCommonHeader_Builder0 , defaultSffCommonHeader_Builder1 )
assertSame ( defaultSffCommonHeader_Builder1 , defaultSffCommonHeader_Builder0 )
assertSame ( defaultSffCommonHeader_Builder1 , defaultSffCommonHeader_Builder0 )
assertNotNull ( string0 )
assertEquals ( 902577943 , int0 )
assertEquals ( 1023241513 , int0 )
assertEquals ( "DefaultSFFCommonHeader [ flow = null , indexLength = 0 , indexOffset = null , keySequence = null , numberOfFlowsPerRead = - 2 , numberOfReads = - 2 ] " , defaultSffCommonHeader0 . toString ( ) )
assertEquals ( "DefaultSFFCommonHeader [ flow = null , indexLength = 147 , indexOffset = null , keySequence = null , numberOfFlowsPerRead = - 642 , numberOfReads = 147 ] " , defaultSffCommonHeader0 . toString ( ) )
assertEquals ( 0 , defaultSffCommonHeader0 . getNumberOfFlowsPerRead ( ) )
assertEquals ( 147L , defaultSffCommonHeader0 . getIndexLength ( ) )
assertEquals ( "DefaultSFFCommonHeader [ flow = null , indexLength = 147 , indexOffset = null , keySequence = null , numberOfFlowsPerRead = - 642 , numberOfReads = 147 ] " , defaultSffCommonHeader0 . toString ( ) )
assertEquals ( 147L , defaultSffCommonHeader0 . getIndexLength ( ) )
assertFalse ( defaultSffCommonHeader1 . equals ( defaultSffCommonHeader0 ) )
assertEquals ( 702 , defaultSffReadHeader0 . getNumberOfBases ( ) )
assertEquals ( 702 , defaultSffReadHeader0 . getNumberOfBases ( ) )
assertEquals ( 85681799 , int0 )
assertEquals ( 1598143 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 702 , defaultSffReadHeader0 . getNumberOfBases ( ) )
assertNotNull ( date0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertEquals ( 0 , int0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotNull ( sff454NameUtil_Location0 )
assertNotSame ( shortArray1 , shortArray0 )
assertNotNull ( encodedShortData0 )
assertNotNull ( encodedShortData0 )
assertNotNull ( encodedShortData0 )
assertNotNull ( encodedShortData0 )
assertNotNull ( encodedShortData0 )
assertNotNull ( encodedShortData0 )
assertEquals ( "EJ$k4iJ - " , abiChromatogramBuilder1 . id ( ) )
assertNotNull ( shortArray0 )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertNotNull ( shortArray0 )
assertEquals ( "j + V7 > 'J [ QV" , abiChromatogramBuilder1 . id ( ) )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertNull ( nucleotideSequence0 )
assertNotNull ( shortArray0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertEquals ( "" , abiChromatogramBuilder1 . id ( ) )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertNull ( map0 )
assertNotNull ( shortArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( "EJ$k4iJ - " , abiChromatogramBuilder1 . id ( ) )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertNull ( nucleotideSequence0 )
assertEquals ( "EJ$k4iJ - " , string0 )
assertNotNull ( byteArray0 )
assertNotNull ( shortArray0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertNotNull ( shortArray0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertNull ( positionSequence0 )
assertNotNull ( shortArray0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertNotNull ( byteArray0 )
assertNull ( map0 )
assertSame ( abiChromatogramBuilder0 , abiChromatogramBuilder1 )
assertSame ( abiChromatogramBuilder1 , abiChromatogramBuilder0 )
assertEquals ( "" , abiChromatogramBuilder1 . id ( ) )
assertEquals ( 0 , ab1LocalDate0 . getDay ( ) )
assertEquals ( TaggedDataType . TYPE_5 , defaultScanRateTaggedDataType0 . getDataType ( ) )
assertEquals ( 0L , defaultFloatTaggedDataRecord0 . getRecordLength ( ) )
assertEquals ( ( - 819L ) , defaultScanRateTaggedDataType0 . getCrypticValue ( ) )
assertEquals ( TaggedDataType . TYPE_19 , defaultTimeTaggedDataRecord0 . getDataType ( ) )
assertEquals ( 1774L , defaultPascalStringTaggedDataRecord0 . getNumberOfElements ( ) )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( 0L , defaultUserDefinedTaggedDataRecord0 . getRecordLength ( ) )
assertNotNull ( chromatogramWriter0 )
assertSame ( ztrChromatogramBuilder0 , ztrChromatogramBuilder1 )
assertNull ( positionSequence0 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNull ( nucleotideSequence0 )
assertSame ( ztrChromatogramBuilder0 , ztrChromatogramBuilder1 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertNotNull ( shortArray0 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertSame ( ztrChromatogramBuilder0 , ztrChromatogramBuilder1 )
assertNotNull ( shortArray0 )
assertNotNull ( shortArray0 )
assertSame ( ztrChromatogramBuilder0 , ztrChromatogramBuilder1 )
assertNull ( map0 )
assertNull ( range0 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertSame ( ztrChromatogramBuilder0 , ztrChromatogramBuilder1 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertSame ( ztrChromatogramBuilder1 , ztrChromatogramBuilder0 )
assertNotNull ( shortArray0 )
assertNotNull ( byteArray0 )
assertNull ( positionSequence0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertNull ( qualitySequence0 )
assertNotNull ( shortArray0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertNotNull ( shortArray0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertNull ( qualitySequence0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertNotNull ( shortArray0 )
assertNotNull ( shortArray0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertNull ( nucleotideSequence0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertNull ( map0 )
assertNull ( qualitySequence0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramBuilder0 , scfChromatogramBuilder1 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertNotSame ( byteArray0 , byteArray1 )
assertNull ( byteArray0 )
assertSame ( scfChromatogramBuilder1 , scfChromatogramBuilder0 )
assertSame ( scfChromatogramWriterBuilder0 , scfChromatogramWriterBuilder1 )
assertNotNull ( chromatogramWriter0 )
assertSame ( fastqRecordWriterBuilder0 , fastqRecordWriterBuilder1 )
assertNotNull ( fastqRecordWriter0 )
assertSame ( fastqRecordWriterBuilder0 , fastqRecordWriterBuilder1 )
assertSame ( fastqRecordWriterBuilder1 , fastqRecordWriterBuilder0 )
assertEquals ( false , largeFastqFileDataStore0 . isClosed ( ) )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertNotNull ( fastqFileParser0 )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertNotNull ( fastqFileParser0 )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertNotNull ( fastqFileParser_OffsetMemento0 )
assertEquals ( "SANGER" , fastqQualityCodec0 . name ( ) )
assertEquals ( "SOLEXA" , fastqQualityCodec0 . toString ( ) )
assertEquals ( 0 , fastqQualityCodec0 . ordinal ( ) )
assertEquals ( false , fastqDataStore0 . isClosed ( ) )
assertNull ( phredQuality0 )
assertNotNull ( phredQuality0 )
assertNotNull ( qualitySequence0 )
assertNotNull ( qualitySequence0 )
assertNotNull ( indexedFastqFileDataStore0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( scaffoldBuilder0 )
assertEquals ( ( - 780 ) , int0 )
assertEquals ( - 1 , openAwareInputStream0 . read ( ) )
assertEquals ( 2 , byteArrayOutputStream0 . size ( ) )
assertEquals ( "seq_name" , string0 )
assertEquals ( "NAME" , tasmReadAttribute0 . toString ( ) )
assertNotNull ( tasmAssembledReadAdapter0 )
assertNotNull ( tasmAssembledReadAdapter0 )
assertNotNull ( tasmAssembledReadAdapter0 )
assertEquals ( 1372731251394L , date0 . getTime ( ) )
assertNotNull ( tasmAssembledReadAdapter0 )
assertEquals ( "01 / 01 / 70 01 : 00 : 01 AM" , string0 )
assertEquals ( false , tasmContigDataStore0 . isClosed ( ) )
assertEquals ( "seq#" , string0 )
assertEquals ( "seq#" , tasmContigAttribute0 . getAssemblyTableColumn ( ) )
assertEquals ( "DefaultCasColorSpaceAlignmentScore [ delegate = null , colorSpaceError = - 1305 ] " , string0 )
assertEquals ( ( - 1346 ) , int0 )
assertEquals ( 0 , defaultCasMatch0 . getScore ( ) )
assertEquals ( true , defaultCasMatch0 . matchReported ( ) )
assertEquals ( 0 , defaultCasMatch0 . getScore ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "DefaultCasMatch [ hasMatch = true , numberOfAlignments = 2 , numberOfMatches = 2 , isPartOfPair = true , alignments = \n ] " , defaultCasMatch0 . toString ( ) )
assertEquals ( "DefaultCasMatch [ hasMatch = false , numberOfAlignments = - 1098 , numberOfMatches = - 1098 , isPartOfPair = false , alignments = \n ] " , defaultCasMatch0 . toString ( ) )
assertEquals ( "DefaultCasMatch [ hasMatch = true , numberOfAlignments = - 6 , numberOfMatches = - 6 , isPartOfPair = true , alignments = \n ] " , defaultCasMatch0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , defaultCasMatch0 . readIsPartOfAPair ( ) )
assertEquals ( true , defaultCasMatch0 . matchReported ( ) )
assertEquals ( 66703382 , int0 )
assertEquals ( 66484580 , int0 )
assertFalse ( defaultCasMatch1 . equals ( defaultCasMatch0 ) )
assertEquals ( - 640 , defaultCasMatch0 . getScore ( ) )
assertEquals ( - 345 , defaultCasMatch0 . getScore ( ) )
assertEquals ( true , defaultCasMatch0 . matchReported ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "DefaultCasMatch [ hasMatch = true , numberOfAlignments = - 6 , numberOfMatches = - 6 , isPartOfPair = true , alignments = \n ] " , defaultCasMatch0 . toString ( ) )
assertEquals ( - 640 , defaultCasMatch0 . getScore ( ) )
assertEquals ( ReadFileType . SANGER , readFileType0 )
assertEquals ( ReadFileType . FASTQ , readFileType0 )
assertEquals ( ReadFileType . FASTQ , readFileType0 )
assertEquals ( ReadFileType . FASTA , readFileType0 )
assertEquals ( "DefaultCasFileInfo [ numberOfSequences = - 1734 , numberOfResidues = 1 , names = [ ] ] " , string0 )
assertEquals ( 399L , long0 )
assertNotNull ( list0 )
assertNotNull ( bigInteger1 )
assertSame ( casAlignmentType0 , casAlignmentType1 )
assertNull ( casAlignmentScore0 )
assertEquals ( "DefaultCasScoringScheme [ scoreType = COLOR_SPACE_SCORE , alignmentScore = null , alignmentType = REVERSE_SEMI_LOCAL ] " , string0 )
assertSame ( casScoreType1 , casScoreType0 )
assertEquals ( ( byte ) 2 , byte0 )
assertEquals ( 450L , long0 )
assertEquals ( "DefaultCasContigDescription [ contigLength = 450 , isCircular = false ] " , string0 )
assertEquals ( "DefaultCasContigDescription [ contigLength = 450 , isCircular = false ] " , defaultCasReferenceDescription0 . toString ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertNotNull ( defaultCasAlignmentRegion0 )
assertEquals ( 30 , int0 )
assertEquals ( - 1 , phaseChangeCasAlignmentRegion0 . getPhaseChange ( ) )
assertEquals ( - 1 , phaseChangeCasAlignmentRegion0 . getPhaseChange ( ) )
assertEquals ( ( byte ) ( - 1 ) , byte0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( - 1 , phaseChangeCasAlignmentRegion1 . getPhaseChange ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( "DefaultCasAlignmentScore [ deletionExtension = 446 , firstDeletion = 446 , firstInsertion = 0 , insertionExtension = 446 , match = 1910 , transition = 446 , transversion = 446 , unknown = 446 ] " , defaultCasAlignmentScore0 . toString ( ) )
assertEquals ( "DefaultCasAlignmentScore [ deletionExtension = - 1 , firstDeletion = - 1 , firstInsertion = - 1 , insertionExtension = - 1 , match = - 1 , transition = 0 , transversion = - 1 , unknown = - 1 ] " , defaultCasAlignmentScore0 . toString ( ) )
assertEquals ( ( - 617 ) , int0 )
assertEquals ( ( - 617 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( "DefaultCasAlignmentScore [ deletionExtension = 1 , firstDeletion = - 8 , firstInsertion = 0 , insertionExtension = - 8 , match = - 1 , transition = - 1556 , transversion = 921 , unknown = 0 ] " , defaultCasAlignmentScore0 . toString ( ) )
assertEquals ( "DefaultCasAlignmentScore [ deletionExtension = - 1 , firstDeletion = - 1 , firstInsertion = - 1 , insertionExtension = - 1 , match = - 1 , transition = 0 , transversion = - 1 , unknown = - 1 ] " , defaultCasAlignmentScore0 . toString ( ) )
assertEquals ( ( - 8 ) , int0 )
assertEquals ( ( - 1531L ) , long0 )
assertEquals ( "" , string0 )
assertNotNull ( casMatchVisitor0 )
assertEquals ( false , casGappedReferenceDataStore0 . isClosed ( ) )
assertEquals ( ( - 1531L ) , casGappedReferenceDataStoreBuilderVisitor_Insertion0 . getSize ( ) )
assertEquals ( 0L , casGappedReferenceDataStoreBuilderVisitor_Insertion0 . getSize ( ) )
assertNotNull ( defaultCasAlignment0 )
assertNotNull ( defaultCasAlignment_Builder1 )
assertNotNull ( defaultCasAlignment_Builder1 )
assertEquals ( 991703 , int0 )
assertNotNull ( defaultCasAlignment0 )
assertEquals ( "DefaultCasAlignment [ contigSequenceId = 0 , startOfMatch = 44 , readIsReversed = false , alignmentRegions = [ ] ] " , defaultCasAlignment0 . toString ( ) )
assertNotNull ( defaultCasAlignment0 )
assertNotNull ( defaultCasAlignment0 )
assertEquals ( false , boolean0 )
assertEquals ( true , defaultCasAlignment1 . readIsReversed ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( defaultCasAlignment_Builder1 )
assertSame ( defaultCasAlignment_Builder1 , defaultCasAlignment_Builder0 )
assertEquals ( 3 , byteArrayInputStream0 . available ( ) )
assertEquals ( 2 , int0 )
assertEquals ( ( byte ) 3 , byte0 )
assertSame ( casAlignmentScoreBuilder0 , casAlignmentScoreBuilder1 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertSame ( casAlignmentScoreBuilder0 , casAlignmentScoreBuilder1 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertNotNull ( casAlignmentScore0 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertSame ( casAlignmentScoreBuilder1 , casAlignmentScoreBuilder0 )
assertNotNull ( casAlignmentScore0 )
assertNotNull ( casFileParser0 )
assertNotNull ( casMatchVisitor0 )
assertSame ( casGappedReferenceDataStoreBuilderVisitor1 , casGappedReferenceDataStoreBuilderVisitor0 )
assertEquals ( 1372729312637L , date0 . getTime ( ) )
assertNotNull ( phredQuality1 )
assertEquals ( "Q05" , phredQuality1 . toString ( ) )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertNotNull ( defaultCoverageRegion_Builder0 )
assertEquals ( 0 , coverageMap1 . getMaxCoverage ( ) )
assertEquals ( 2 , coverageMap0 . getMaxCoverage ( ) )
assertEquals ( 2 . 0 , coverageMap0 . getAverageCoverage ( ) , 0 . 01D )
assertEquals ( false , coverageMap0 . isEmpty ( ) )
assertEquals ( 0 , coverageMap0 . getNumberOfRegions ( ) )
assertEquals ( 0 , coverageMap0 . getNumberOfRegions ( ) )
assertEquals ( 0 , coverageMap0 . getMinCoverage ( ) )
assertNull ( phredQuality0 )
assertEquals ( 0 , consensusResult0 . getConsensusQuality ( ) )
assertNotNull ( map0 )
assertEquals ( 0 , consensusResult0 . getConsensusQuality ( ) )
assertNotNull ( consensusProbabilities0 )
assertNotNull ( consensusProbabilities0 )
assertNotNull ( consensusProbabilities0 )
assertNotNull ( consensusProbabilities0 )
assertNotNull ( consensusProbabilities0 )
assertEquals ( 0 , consensusResult0 . getConsensusQuality ( ) )
assertNotNull ( consensusResult0 )
assertNotNull ( noAmbiguityConsensusCaller0 )
assertEquals ( "Gap" , nucleotide0 . name ( ) )
assertEquals ( "null [ - 1763 ] " , defaultConsensusResult0 . toString ( ) )
assertEquals ( ( - 1763 ) , int0 )
assertNotNull ( string0 )
assertEquals ( 1886707313 , int0 )
assertEquals ( ( - 802 ) , int0 )
assertEquals ( - 1763 , defaultConsensusResult0 . getConsensusQuality ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "N [ - 1 ] " , defaultConsensusResult0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "null [ 72 ] " , defaultConsensusResult1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , consensusResult0 . getConsensusQuality ( ) )
assertEquals ( "INSTANCE" , string0 )
assertNotNull ( file1 )
assertEquals ( "" , string0 )
assertNull ( file1 )
assertEquals ( "DefaultPhdInfo [ traceName = : VYt , phdName = : VYt . phd . 1 , phdDate = - 279 ] " , phdInfo0 . toString ( ) )
assertEquals ( 1372731474502L , date0 . getTime ( ) )
assertEquals ( 0 , sortedMap0 . size ( ) )
assertEquals ( 0 , sortedMap0 . size ( ) )
assertNull ( file0 )
assertNull ( file1 )
assertNull ( file1 )
assertEquals ( ConsedUtil . ClipPointsType . NEGATIVE_VALID_RANGE , consedUtil_ClipPointsType0 )
assertEquals ( ConsedUtil . ClipPointsType . VALID , consedUtil_ClipPointsType0 )
assertEquals ( ConsedUtil . ClipPointsType . ALL_LOW_QUALITY , consedUtil_ClipPointsType0 )
assertEquals ( ConsedUtil . ClipPointsType . NO_HIGH_QUALITY_ALIGNMENT_INTERSECTION , consedUtil_ClipPointsType0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( defaultPhdWholeReadItem0 )
assertNotNull ( defaultPhdWholeReadItem0 )
assertNotNull ( defaultPhdWholeReadItem0 )
assertNotNull ( defaultPhdWholeReadItem0 )
assertNotNull ( defaultPhdWholeReadItem0 )
assertNotNull ( map0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "DefaultPhd [ id = aFnY : d^nHXD ! DYHv ] " , string0 )
assertNull ( qualitySequence0 )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( positionSequence0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertSame ( phdBuilder1 , phdBuilder0 )
assertSame ( phdBuilder1 , phdBuilder0 )
assertFalse ( phdBuilder1 . equals ( phdBuilder0 ) )
assertSame ( phdBuilder1 , phdBuilder0 )
assertSame ( phdBuilder1 , phdBuilder0 )
assertNotNull ( phdBuilder0 )
assertFalse ( phdBuilder1 . equals ( phdBuilder0 ) )
assertSame ( phdBuilder1 , phdBuilder0 )
assertSame ( phdBuilder1 , phdBuilder0 )
assertEquals ( "" , phd0 . getId ( ) )
assertNotNull ( defaultPhdDataStore0 )
assertNotNull ( proxy0 )
assertEquals ( 6 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 1372731255899L , date0 . getTime ( ) )
assertNotNull ( string0 )
assertEquals ( 1372731255986L , date0 . getTime ( ) )
assertEquals ( false , phdDataStore0 . isClosed ( ) )
assertEquals ( 1372728665500L , date0 . getTime ( ) )
assertEquals ( 1372728665698L , date0 . getTime ( ) )
assertEquals ( "li * afU / SPKat~v'k + " , string0 )
assertEquals ( " * " , string0 )
assertNull ( range0 )
assertNull ( date0 )
assertEquals ( ( - 750906561 ) , int0 )
assertEquals ( 1372728666395L , date0 . getTime ( ) )
assertEquals ( "li * afU / SPKat~v'k + " , defaultPhdReadTag1 . getFreeFormData ( ) )
assertEquals ( 1372728666807L , date0 . getTime ( ) )
assertEquals ( 1372728666847L , date0 . getTime ( ) )
assertEquals ( 1372728666893L , date0 . getTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1372728667281L , date0 . getTime ( ) )
assertEquals ( 1372728667389L , date0 . getTime ( ) )
assertEquals ( 1372728667492L , date0 . getTime ( ) )
assertEquals ( 1372728667583L , date0 . getTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1372728667760L , date0 . getTime ( ) )
assertEquals ( false , phdBallVisitorCallback0 . canCreateMemento ( ) )
assertEquals ( true , phdBallVisitorCallback0 . canCreateMemento ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( phdVisitor0 )
assertEquals ( 20 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( phdDirQualityDataStore0 )
assertEquals ( false , phdDirQualityDataStore0 . isClosed ( ) )
assertNull ( streamingIterator0 )
assertNull ( streamingIterator0 )
assertNotNull ( phdDirQualityDataStore0 )
assertNotNull ( phdDirQualityDataStore0 )
assertNotNull ( consedNavigationWriter0 )
assertEquals ( "TITLE : UNPADDED_CONS_POS : %d %d\n\n" , byteArrayOutputStream0 . toString ( ) )
assertNotNull ( consedNavigationWriter0 )
assertEquals ( "Thu Jan 1 00 : 59 : 59 1970" , string0 )
assertEquals ( 28 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 14 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 1372729217008L , date0 . getTime ( ) )
assertEquals ( 629715552 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( 1372729217551L , date0 . getTime ( ) )
assertNotNull ( consedConsensusQualityComputer0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1372733667227L , date0 . getTime ( ) )
assertEquals ( 1840416540 , int0 )
assertEquals ( 1372733667978L , date0 . getTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 1372733669420L , date0 . getTime ( ) )
assertEquals ( 1372733669970L , date0 . getTime ( ) )
assertEquals ( 1372733670385L , date0 . getTime ( ) )
assertEquals ( 1372733670871L , date0 . getTime ( ) )
assertEquals ( 1372733671337L , date0 . getTime ( ) )
assertEquals ( 1372733671513L , date0 . getTime ( ) )
assertEquals ( ( - 1482096920 ) , int0 )
assertEquals ( "DefaultWholeAssemblyAceTag [ creationDate = Thu Jan 01 01 : 00 : 00 GMT 1970 , creator = W~\" ( IIhP%8$ , data = W~\" ( IIhP%8$ , type = W~\" ( IIhP%8$ ] " , string0 )
assertEquals ( 1372729223588L , date0 . getTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1372729223645L , date0 . getTime ( ) )
assertEquals ( "02 - Jul - 2013 03 : 45 : 46" , date0 . toLocaleString ( ) )
assertNull ( aceContig0 )
assertNull ( aceConsensusTagVisitor0 )
assertEquals ( 1372733147001L , date0 . getTime ( ) )
assertEquals ( 1372729202295L , date0 . getTime ( ) )
assertNotNull ( phdInfo0 )
assertEquals ( 1372729202758L , date0 . getTime ( ) )
assertNotNull ( phdInfo0 )
assertEquals ( 1372729202910L , date0 . getTime ( ) )
assertEquals ( 1372729203387L , date0 . getTime ( ) )
assertNotNull ( phdInfo0 )
assertNotNull ( phdInfo0 )
assertEquals ( 1372729203764L , date0 . getTime ( ) )
assertEquals ( 1372729204122L , date0 . getTime ( ) )
assertFalse ( multipleAceContigReadVisitor1 . equals ( multipleAceContigReadVisitor0 ) )
assertFalse ( multipleAceContigReadVisitor1 . equals ( multipleAceContigReadVisitor0 ) )
assertEquals ( 0 , date0 . getSeconds ( ) )
assertFalse ( multipleAceContigReadVisitor1 . equals ( multipleAceContigReadVisitor0 ) )
assertFalse ( multipleAceContigReadVisitor1 . equals ( multipleAceContigReadVisitor0 ) )
assertSame ( consensusAceTagBuilder1 , consensusAceTagBuilder0 )
assertSame ( consensusAceTagBuilder0 , consensusAceTagBuilder1 )
assertNotNull ( consensusAceTag0 )
assertNotNull ( aceContigReadVisitor0 )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( 1372733353464L , date0 . getTime ( ) )
assertEquals ( 1372733353853L , date0 . getTime ( ) )
assertEquals ( 1372733354698L , date0 . getTime ( ) )
assertNotNull ( wholeAssemblyAceTag0 )
assertNotNull ( readAceTag0 )
assertEquals ( 1372733357775L , date0 . getTime ( ) )
assertEquals ( "Tue Jul 02 03 : 49 : 17 BST 2013" , date0 . toString ( ) )
assertEquals ( 1372733358235L , date0 . getTime ( ) )
assertEquals ( 1372733358492L , date0 . getTime ( ) )
assertEquals ( 1372733359168L , date0 . getTime ( ) )
assertNotNull ( wholeAssemblyAceTag0 )
assertNotSame ( multipleAceContigVisitor1 , multipleAceContigVisitor0 )
assertNotSame ( multipleAceContigVisitor1 , multipleAceContigVisitor0 )
assertNotNull ( multipleAceContigReadVisitor0 )
assertNull ( multipleAceContigReadVisitor0 )
assertNotSame ( multipleAceContigVisitor1 , multipleAceContigVisitor0 )
assertNotNull ( string0 )
assertNull ( phdInfo0 )
assertEquals ( 924482 , int0 )
assertEquals ( 1922 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "AcePlacedReadAdapter [ placedRead = null , phdInfo = DefaultPhdInfo [ traceName = : & @ / , phdName = : & @ / , phdDate = 1372728627137 ] ] " , aceAssembledReadAdapter0 . toString ( ) )
assertEquals ( "AcePlacedReadAdapter [ placedRead = AcePlacedReadAdapter [ placedRead = null , phdInfo = DefaultPhdInfo [ traceName = B / , phdName = B / , phdDate = 1372728627655 ] ] , phdInfo = null ] " , aceAssembledReadAdapter1 . toString ( ) )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertNotNull ( alignedReadInfo0 )
assertEquals ( false , aceFileContigDataStore0 . isClosed ( ) )
assertEquals ( false , largeAceFileDataStore0 . isClosed ( ) )
assertNotNull ( aceHandler0 )
assertNotNull ( aceHandler0 )
assertNull ( nucleotideSequenceBuilder0 )
assertEquals ( "UTG" , string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , set0 . size ( ) )
assertNotNull ( defaultAsmContigDataStore2_0 )
assertNotNull ( streamingIterator0 )
assertEquals ( false , indexedAsmFileContigDataStore0 . isClosed ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , indexedAsmFileContigDataStore0 . isClosed ( ) )
assertEquals ( false , indexedAsmFileContigDataStore0 . isClosed ( ) )
assertEquals ( false , indexedAsmFileContigDataStore0 . isClosed ( ) )
assertEquals ( false , pushbackInputStream0 . markSupported ( ) )
assertNull ( string0 )
assertEquals ( 'I' , char0 )
assertEquals ( MateOrientation . UNORIENTED , mateOrientation0 )
assertEquals ( MateOrientation . INNIE , mateOrientation0 )
assertEquals ( MateOrientation . NORMAL , mateOrientation0 )
assertEquals ( MateOrientation . OUTTIE , mateOrientation0 )
assertEquals ( 0L , nucleotideSequence0 . getUngappedLength ( ) )
assertNull ( range0 )
assertEquals ( "" , string0 )
assertEquals ( 16L , qualitySequence0 . getLength ( ) )
assertNotNull ( defaultLibrary0 )
assertEquals ( "l0Nf'" , string0 )
assertEquals ( 2 , mateOrientation1 . ordinal ( ) )
assertSame ( distance0 , distance1 )
assertNotNull ( defaultLibrary0 )
assertNotNull ( defaultLibrary0 )
assertEquals ( - 19 , distance1 . getMin ( ) )
assertEquals ( 953312 , int0 )
assertNotNull ( string0 )
assertEquals ( 6 . 0F , distance0 . getStdDev ( ) , 0 . 01F )
assertEquals ( 941 , distance0 . getMax ( ) )
assertEquals ( - 96 , distance0 . getMax ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( distance0 )
assertNotNull ( defaultFragment0 )
assertNull ( range0 )
assertNull ( library0 )
assertEquals ( "Wmr`IqvxdkF } \"'JB' > " , string0 )
assertNotNull ( defaultFragment0 )
assertNull ( range0 )
assertNotNull ( defaultFragment0 )
