void test0 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; queryCommand0 . setQueryMode ( ' & ' ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test1 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; queryCommand0 . setLastQuery ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test2 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; queryCommand0 . setQueryString ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test3 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; int int0 = queryCommand0 . getMaxSize ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test4 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "7p , { E" ) ; int int0 = queryCommand0 . getStartIndex ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test5 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "7p , { E" ) ; queryCommand0 . setMaxSize ( 1577 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getMaxSize ( ) { return maxSize ; }
void test6 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "7p , { E" ) ; queryCommand0 . getLastQuery ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test7 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; char char0 = queryCommand0 . getQueryMode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test8 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; queryCommand0 . setStartIndex ( ( - 454 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test9 ( ) throws Throwable { QueryCommand queryCommand0 = new QueryCommand ( "" ) ; String string0 = queryCommand0 . getQueryString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" char getQueryMode ( ) { return queryMode ; }
void test0 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; ftrRecord0 . setBrief ( "iVV | KKVR^1 > { s * . " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test1 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 382 . 89743F ) ; ftrRecord0 . setUri ( " : i7 ] bRhllU & QJ | Y" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test2 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; float float0 = ftrRecord0 . getBoost ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test3 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; ftrRecord0 . getCachedDate ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test4 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; ftrRecord0 . setCachedDate ( ( Date ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test5 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; ftrRecord0 . getUri ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test7 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; ftrRecord0 . getBrief ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test8 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 664 . 4035F ) ; float float0 = ftrRecord0 . getScore ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test9 ( ) throws Throwable { Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 0 . 0F ) ; Document document1 = ftrRecord0 . getDocument ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScore ( ) { return score ; }
void test0 ( ) throws Throwable { FtrSearchResult ftrSearchResult0 = new FtrSearchResult ( ) ; ftrSearchResult0 . setTotal ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotal ( ) { return total ; }
void test1 ( ) throws Throwable { FtrSearchResult ftrSearchResult0 = new FtrSearchResult ( ) ; Document document0 = new Document ( ) ; FtrRecord ftrRecord0 = new FtrRecord ( document0 , 1485 . 5139F ) ; ftrSearchResult0 . addFtrRecord ( ftrRecord0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getUri ( ) { return uri ; }
void test2 ( ) throws Throwable { FtrSearchResult ftrSearchResult0 = new FtrSearchResult ( ) ; LinkedList < FtrRecord > linkedList0 = new LinkedList < FtrRecord > ( ) ; ftrSearchResult0 . setFtrRecords ( ( Collection < FtrRecord > ) linkedList0 ) ; ftrSearchResult0 . addFtrRecord ( ( FtrRecord ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotal ( ) { return total ; }
void test3 ( ) throws Throwable { FtrSearchResult ftrSearchResult0 = new FtrSearchResult ( ) ; int int0 = ftrSearchResult0 . getTotal ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotal ( ) { return total ; }
void test0 ( ) throws Throwable { PlainTextStringContent plainTextStringContent0 = new PlainTextStringContent ( "v" ) ; String string0 = plainTextStringContent0 . getContent ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getContent ( ) throws ContentParserException ; }
void test1 ( ) throws Throwable { HtmlContentParser htmlContentParser0 = new HtmlContentParser ( ) ; String string0 = htmlContentParser0 . extractPlainText ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String extractPlainText ( String textContent ) throws ContentParserException ; }
