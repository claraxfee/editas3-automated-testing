assertNotNull ( main0 )
assertEquals ( "StatusPanel . onlinePercent" , string0 )
assertEquals ( 255 , color0 . getAlpha ( ) )
assertEquals ( - 16250752 , color0 . getRGB ( ) )
assertEquals ( "de . outstare . fortbattleplayer . model . CombatantState position = Area - 899 / 0 [ occupied by null ] , healt = - 899 , target = Area - 899 / 0 [ occupied by null ] , online = false" , combatantState0 . toString ( ) )
assertEquals ( "de . outstare . fortbattleplayer . model . CombatantState position = Area - 899 / 0 [ occupied by null ] , healt = 0 , target = Area - 899 / 0 [ occupied by null ] , online = false" , combatantState1 . toString ( ) )
assertEquals ( 1 , combatantState0 . getHealth ( ) )
assertEquals ( "de . outstare . fortbattleplayer . model . CombatantState position = null , healt = 1 , target = null , online = false" , combatantState1 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( "Sectorbonus [ attack = 0 , defense = 13 ] " , string0 )
assertEquals ( 221 , int0 )
assertEquals ( "Sectorbonus [ attack = 278 , defense = - 1988 ] " , sectorBonus1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "Sectorbonus [ attack = 0 , defense = 13 ] " , sectorBonus0 . toString ( ) )
assertFalse ( sectorBonus1 . equals ( sectorBonus0 ) )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 3 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 15 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 3 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1273420336 ) , int0 )
assertEquals ( 51891294 , int0 )
assertEquals ( "WeaponGameData : minDmg = 1674 , maxDmg = 1674 , offBonus = 1674 , deffBonus = 0 , name = successfully read " , jSWeaponData_WeaponGameData0 . toString ( ) )
assertEquals ( "WeaponGameData : minDmg = 15 , maxDmg = 15 , offBonus = 15 , deffBonus = 15 , name = `OkJn" , jSWeaponData_WeaponGameData0 . toString ( ) )
assertEquals ( "WeaponGameData : minDmg = 0 , maxDmg = 0 , offBonus = 0 , deffBonus = 0 , name = atZ_uMl + h7M" , jSWeaponData_WeaponGameData0 . toString ( ) )
assertEquals ( "WeaponGameData : minDmg = - 1273420336 , maxDmg = - 1273420336 , offBonus = - 1273420336 , deffBonus = - 1273420336 , name = DEFENSE" , jSWeaponData_WeaponGameData1 . toString ( ) )
assertEquals ( "WeaponGameData : minDmg = - 1945 , maxDmg = - 7 , offBonus = - 7 , deffBonus = - 1945 , name = , defense = " , jSWeaponData_WeaponGameData1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleWeapon0 )
assertNotNull ( simpleBattleField0 )
assertNotNull ( simpleBattleField0 )
assertNotNull ( simpleBattleField0 )
assertNotNull ( simpleBattleField0 )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleArea0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleArea0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleArea0 . isOccupied ( ) )
assertEquals ( true , simpleArea0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( true , simpleSector0 . isDefenderSpawn ( ) )
assertEquals ( true , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( false , simpleSector0 . isFlag ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , simpleSector0 . isDefenderSpawn ( ) )
assertEquals ( true , simpleSector0 . isAttackerSpawn ( ) )
assertNotNull ( simpleArea0 )
assertEquals ( false , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( 50 , simpleSector0 . getHeight ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , simpleSector0 . isOccupied ( ) )
assertEquals ( false , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( true , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( - 710 , simpleBattleField0 . getHeight ( ) )
assertEquals ( true , simpleSector0 . isDefenderSpawn ( ) )
assertEquals ( true , simpleSector0 . isDefenderSpawn ( ) )
assertEquals ( true , simpleSector0 . isAttackerSpawn ( ) )
assertEquals ( 0 , int0 )
assertNull ( combatant0 )
assertEquals ( false , simpleArea0 . isOccupied ( ) )
assertSame ( point1 , point0 )
assertNotNull ( simpleArea0 )
assertEquals ( 0 , simpleSector1 . getHeight ( ) )
assertNotNull ( simpleArea0 )
assertNotNull ( simpleArea0 )
assertNotNull ( simpleArea0 )
assertNotNull ( simpleArea0 )
assertNotNull ( simpleArea0 )
assertNotNull ( simpleArea0 )
assertEquals ( "FINE" , level0 . toString ( ) )
assertEquals ( false , hashMap0 . isEmpty ( ) )
assertNull ( logger0 . getResourceBundleName ( ) )
assertNotNull ( statusPanel0 )
assertEquals ( true , statusPanel0 . isForegroundSet ( ) )
assertEquals ( true , statusPanel0 . isBackgroundSet ( ) )
assertEquals ( false , statusPanel0 . isValid ( ) )
assertEquals ( 0 . 5F , statusPanel0 . getAlignmentX ( ) , 0 . 01F )
assertEquals ( false , statusPanel0 . isFocusTraversalPolicySet ( ) )
assertEquals ( false , statusPanel0 . isFocusOwner ( ) )
assertEquals ( false , statusPanel0 . isFocusOwner ( ) )
assertEquals ( - 1 , actionEvent0 . getID ( ) )
assertEquals ( "unknown type , permanent , opposite = null" , focusEvent0 . paramString ( ) )
assertEquals ( 0L , actionEvent0 . getWhen ( ) )
assertEquals ( "java . awt . Dimension [ width = 0 , height = 0 ] " , dimension0 . toString ( ) )
assertEquals ( "java . awt . Dimension [ width = 0 , height = 0 ] " , dimension0 . toString ( ) )
assertEquals ( true , jRootPane0 . isFocusable ( ) )
assertEquals ( true , box0 . isEnabled ( ) )
assertEquals ( "has to be non empty , but the tooltip of the cell is used" , moveTarget0 . getToolTipText ( ) )
assertEquals ( "de . outstare . fortbattleplayer . gui . battlefield . AnimTest [ , 0 , 0 , 400x300 , invalid , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 0 , maximumSize = , minimumSize = , preferredSize = ] " , animTest0 . toString ( ) )
assertEquals ( "de . outstare . fortbattleplayer . gui . battlefield . MoveTarget [ , 0 , 0 , 0x0 , invalid , hidden , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 0 , maximumSize = , minimumSize = , preferredSize = ] " , moveTarget0 . toString ( ) )
assertEquals ( - 1785 , jCheckBoxMenuItem0 . getX ( ) )
assertNotNull ( moveAnimation0 )
assertNotNull ( moveAnimation0 )
assertNotNull ( moveAnimation0 )
assertNotNull ( moveAnimation0 )
assertNotNull ( battlefieldDrawing0 )
assertEquals ( 3 , searchPanel0 . countComponents ( ) )
assertEquals ( true , statisticsPanel0 . isFontSet ( ) )
assertEquals ( 23400 , defaultTableColumnModel0 . getTotalColumnWidth ( ) )
assertEquals ( 4 , critTableModel0 . getColumnCount ( ) )
assertEquals ( 4 , critTableModel0 . getColumnCount ( ) )
assertEquals ( "" , string0 )
assertEquals ( 1 , class0 . getModifiers ( ) )
assertNull ( object0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertNotNull ( statisticDiagramm0 )
assertEquals ( false , mouseEvent0 . isConsumed ( ) )
assertNotNull ( swapTableModel0 )
assertNotNull ( swapTableModel0 )
assertNotNull ( swapTableModel0 )
assertNotNull ( swapTableModel0 )
assertNotNull ( swapTableModel0 )
assertNotNull ( swapTableModel0 )
assertEquals ( true , healthDistributionDiagram0 . isFocusable ( ) )
assertNotNull ( dataPanel0 )
assertEquals ( "" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( 2 , turnOrderTableModel0 . getColumnCount ( ) )
assertEquals ( 1 , ( int ) integer0 )
assertEquals ( false , simpleArea0 . isOccupied ( ) )
assertEquals ( "Area 1231 / 760 [ occupied by null ] " , simpleArea0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , battleplan0 . numberOfRounds ( ) )
assertNotNull ( battleplan0 )
assertNotNull ( battleplan0 )
assertNotNull ( battleplan0 )
assertNotNull ( battleplan0 )
assertNotNull ( battleplan0 )
assertEquals ( 3000 , playerConfiguration0 . ROUND_DELAY )
assertEquals ( 300 , playerConfiguration3 . PLAYER_DELAY )
assertEquals ( false , playerConfiguration0 . showMoveTargets ( ) )
assertEquals ( 3000 , playerConfiguration0 . ROUND_DELAY )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( combatant0 )
assertNull ( combatant0 )
assertEquals ( "null aims at null" , string0 )
assertEquals ( "null moves to Area - 1669 / 16716049 [ occupied by null ] " , string0 )
assertEquals ( "null hits with 0" , hitAction0 . toString ( ) )
assertNull ( action0 )
assertNull ( action0 )
assertEquals ( "null moves to null" , targetAction0 . toString ( ) )
assertNull ( action0 )
assertEquals ( "null is offline" , onlineAction0 . toString ( ) )
assertEquals ( "null is online" , onlineAction0 . toString ( ) )
assertEquals ( " { resolver = AttributeSet , } \n { default = AttributeSet , } \n { family = Dialog , name = default , } \n { italic = false , bold = false , size = 12 , name = default , family = Dialog , } \n { size = 12 , name = default , family = Dialog , } \n { bold = false , size = 12 , name = default , family = Dialog , } \n { size = 12 , name = default , bold = false , italic = false , FONT_ATTRIBUTE_KEY = javax . swing . plaf . FontUIResource [ family = Dialog , name = Dialog , style = plain , size = 12 ] , family = Dialog , } \n { name = default , } \n { size = 12 , foreground = sun . swing . PrintColorUIResource [ r = 51 , g = 51 , b = 51 ] , bold = false , name = default , italic = false , FONT_ATTRIBUTE_KEY = javax . swing . plaf . FontUIResource [ family = Dialog , name = Dialog , style = plain , size = 12 ] , family = Dialog , } \n { bidiLevel = 0 , } \n { } \n" , styleContext0 . toString ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertEquals ( CharacterClass . WORKER , simpleCombatant0 . getCharacterClass ( ) )
assertEquals ( "Area - 16 / 1 [ occupied by null ] " , simpleArea0 . toString ( ) )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "R8sF - @c$ ( > / ^B" , simpleCombatant0 . getName ( ) )
assertEquals ( 0 , simpleCombatant0 . _maxHealth ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "DEFENDER R8sF - @c$ ( > / ^B" , simpleCombatant0 . toString ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertEquals ( 0 , int0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertEquals ( CombatantSide . DEFENDER , simpleCombatant0 . getSide ( ) )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertNotNull ( battleStatistics0 )
assertEquals ( 0 , simpleCombatant0 . _maxHealth ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertNotNull ( battleStatistics0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( battleStatistics0 )
assertEquals ( 0 , int0 )
assertNotNull ( allCombatantSidesCounter0 )
assertEquals ( 7 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , hashtable0 . size ( ) )
assertNotNull ( roundStatGenerator0 )
assertNotNull ( roundStatGenerator0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( allStatistics0 )
assertEquals ( "0 shots\n0 hits ( 0% ) \n0 crits ( 0% ) " , areaStatistic0 . toString ( ) )
assertEquals ( "0 shots\n0 hits ( 0% ) \n0 crits ( 0% ) " , areaStatistic0 . toString ( ) )
assertEquals ( 1 , areaStatistic0 . getCrits ( ) )
assertEquals ( "0 shots\n0 hits ( 0% ) \n0 crits ( 0% ) " , areaStatistic0 . toString ( ) )
assertEquals ( 1 , areaStatistic0 . getShots ( ) )
assertEquals ( "0 shots\n0 hits ( 0% ) \n0 crits ( 0% ) " , areaStatistic0 . toString ( ) )
assertEquals ( 1 , areaStatistic0 . getHits ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( - 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNotNull ( sortedMap0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 6 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 14 , sortedMap0 . size ( ) )
assertEquals ( 14 , sortedMap0 . size ( ) )
assertEquals ( "parameters may not be null ! " , string0 )
assertEquals ( "parameters may not be null ! " , string0 )
assertNotNull ( doubleArray0 )
assertNotNull ( doubleArray0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , counter0 . getValue ( ) )
assertEquals ( 1 , counter0 . getValue ( ) )
assertNotNull ( dataSet0 )
assertNotNull ( dataSet0 )
assertNotNull ( dataSet0 )
assertNotNull ( dataSet0 )
assertNotNull ( dataSet0 )
assertEquals ( 0 , onlineCounter0 . sumOfEvents ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , onlineCounter0 . sumOfEvents ( ) )
assertEquals ( 2 , onlineCounter0 . onlineEvents ( ) )
assertEquals ( 1 , onlineCounter0 . sumOfEvents ( ) )
assertEquals ( 0 , onlineCounter0 . sumOfEvents ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1663426158 , int0 )
assertFalse ( positionSwitch0 . equals ( positionSwitch1 ) )
assertEquals ( false , boolean0 )
assertTrue ( positionSwitch1 . equals ( positionSwitch0 ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
