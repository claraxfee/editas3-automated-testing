void test0 ( ) throws Throwable { BufferedImage bufferedImage0 = new BufferedImage ( 11 , 11 , 11 ) ; PngEncoderB pngEncoderB0 = new PngEncoderB ( bufferedImage0 ) ; pngEncoderB0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getEncodeAlpha ( ) { return encodeAlpha ; }
void test1 ( ) throws Throwable { PngEncoderB pngEncoderB0 = new PngEncoderB ( ) ; pngEncoderB0 . setImage ( ( BufferedImage ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getEncodeAlpha ( ) { return encodeAlpha ; }
void test2 ( ) throws Throwable { PngEncoderB pngEncoderB0 = new PngEncoderB ( ( BufferedImage ) null , false ) ; pngEncoderB0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test3 ( ) throws Throwable { PngEncoderB pngEncoderB0 = new PngEncoderB ( ( BufferedImage ) null , true , ( - 1 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test4 ( ) throws Throwable { PngEncoderB pngEncoderB0 = new PngEncoderB ( ( BufferedImage ) null , true , 0 , ( - 694 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test5 ( ) throws Throwable { PngEncoderB pngEncoderB0 = new PngEncoderB ( ( BufferedImage ) null , true , 0 , 948 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getEncodeAlpha ( ) { return encodeAlpha ; }
void test6 ( ) throws Throwable { BufferedImage bufferedImage0 = new BufferedImage ( 13 , 13 , 13 ) ; PngEncoderB pngEncoderB0 = new PngEncoderB ( bufferedImage0 ) ; byte [ ] byteArray0 = pngEncoderB0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean establishStorageInfo ( ) { int dataBytes ; wRaster = image . getRaster ( ) ; dataBytes = wRaster . getNumDataElements ( ) ; tType = wRaster . getTransferType ( ) ; if ( ( ( tType = = DataBuffer . TYPE_BYTE ) & & ( dataBytes = = 4 ) ) | | ( ( tType = = DataBuffer . TYPE_INT ) & & ( dataBytes = = 1 ) ) ) { bytesPerPixel = ( encodeAlpha ) ? 4 : 3 ; } else if ( ( tType = = DataBuffer . TYPE_BYTE ) & & ( dataBytes = = 1 ) ) { bytesPerPixel = 1 ; encodeAlpha = false ; / / one - byte samples } else { return false ; } return true ; }
void test7 ( ) throws Throwable { BufferedImage bufferedImage0 = new BufferedImage ( 7 , 7 , 7 ) ; PngEncoderB pngEncoderB0 = new PngEncoderB ( bufferedImage0 ) ; byte [ ] byteArray0 = pngEncoderB0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test8 ( ) throws Throwable { BufferedImage bufferedImage0 = new BufferedImage ( 4 , 4 , 4 ) ; PngEncoderB pngEncoderB0 = new PngEncoderB ( bufferedImage0 ) ; byte [ ] byteArray0 = pngEncoderB0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean establishStorageInfo ( ) { int dataBytes ; wRaster = image . getRaster ( ) ; dataBytes = wRaster . getNumDataElements ( ) ; tType = wRaster . getTransferType ( ) ; if ( ( ( tType = = DataBuffer . TYPE_BYTE ) & & ( dataBytes = = 4 ) ) | | ( ( tType = = DataBuffer . TYPE_INT ) & & ( dataBytes = = 1 ) ) ) { bytesPerPixel = ( encodeAlpha ) ? 4 : 3 ; } else if ( ( tType = = DataBuffer . TYPE_BYTE ) & & ( dataBytes = = 1 ) ) { bytesPerPixel = 1 ; encodeAlpha = false ; / / one - byte samples } else { return false ; } return true ; }
void test9 ( ) throws Throwable { BufferedImage bufferedImage0 = new BufferedImage ( 7 , 7 , 7 ) ; PngEncoderB pngEncoderB0 = new PngEncoderB ( bufferedImage0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test0 ( ) throws Throwable { SiteRenderer siteRenderer0 = new SiteRenderer ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test1 ( ) throws Throwable { Graphic graphic0 = new Graphic ( ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphicsShapes ( 100 . 0F , 180 . 0F , true , 180 . 0F ) ; JEditorPane jEditorPane0 = new JEditorPane ( ) ; Point point0 = jEditorPane0 . getLocation ( ) ; Site site0 = new Site ( ) ; View view0 = new View ( ) ; SiteRenderer . drawLabel ( ( Graphics2D ) pdfGraphics2D0 , point0 , site0 , 0 , view0 , point0 , false ) ; SiteRenderer . drawLabel ( ( Graphics2D ) pdfGraphics2D0 , point0 , site0 , 0 , view0 , point0 , true ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { Graphic graphic0 = new Graphic ( ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphicsShapes ( 100 . 0F , 180 . 0F , true , 180 . 0F ) ; JEditorPane jEditorPane0 = new JEditorPane ( ) ; Point point0 = jEditorPane0 . getLocation ( ) ; Site site0 = new Site ( ) ; View view0 = new View ( ) ; SiteRenderer . drawLabel ( ( Graphics2D ) pdfGraphics2D0 , point0 , site0 , 0 , view0 , point0 , true ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test3 ( ) throws Throwable { Graphic graphic0 = new Graphic ( ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphicsShapes ( 100 . 0F , 180 . 0F , true , 180 . 0F ) ; JEditorPane jEditorPane0 = new JEditorPane ( ) ; Point point0 = jEditorPane0 . getLocation ( ) ; Site site0 = new Site ( ) ; View view0 = new View ( ) ; SiteRenderer . drawLabel ( ( Graphics2D ) pdfGraphics2D0 , point0 , site0 , 70 , view0 , point0 , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; float float0 = point3D0 . getY ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getY ( ) { return y ; }
void test1 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; point3D0 . setZ ( 0 . 0F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZ ( ) { return z ; }
void test2 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; float float0 = point3D0 . getX ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getX ( ) { return x ; }
void test3 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; float float0 = point3D0 . distanceTo ( point3D0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float distanceTo ( Point3D point ) { / / pythagorean distance - - yet again ! float dx = this . x - point . x ; float dy = this . y - point . y ; float dz = this . z - point . z ; return ( float ) Math . sqrt ( dx * dx + dy * dy + dz * dz ) ; }
void test4 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; point3D0 . setX ( 180 . 0F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getX ( ) { return x ; }
void test5 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; float float0 = point3D0 . getZ ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZ ( ) { return z ; }
void test6 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; Location location0 = new Location ( ) ; point3D0 . setFromLocation ( location0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZ ( ) { return z ; }
void test7 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; point3D0 . scale ( 0 . 0F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZ ( ) { return z ; }
void test8 ( ) throws Throwable { Point3D point3D0 = new Point3D ( ) ; point3D0 . setY ( 797 . 3006F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getY ( ) { return y ; }
void test1 ( ) throws Throwable { Palette palette0 = new Palette ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { View view0 = new View ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZoom ( ) { return zoom ; }
void test1 ( ) throws Throwable { View view0 = new View ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZoom ( ) { return zoom ; }
void test2 ( ) throws Throwable { View view0 = new View ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getZoom ( ) { return zoom ; }
void test0 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( " ; " ) ; unitTests0 . testLatitudeSandwiching ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void testLatitudeSandwiching ( ) { Location l = new Location ( ) ; / / make sure 45 degrees doesn't get touched l . setLatitudeAsSeconds ( 45 * 3600 ) ; assertEquals ( 45 * 3600 , l . getLatitudeAsSeconds ( ) ) ; / / make sure 95 degrees becomes 90 degrees l . setLatitudeAsSeconds ( 95 * 3600 ) ; assertEquals ( 90 * 3600 , l . getLatitudeAsSeconds ( ) ) ; / / make sure - 105 degrees becomes - 90 degrees l . setLatitudeAsSeconds ( ( - 105 ) * 3600 ) ; assertEquals ( ( - 90 ) * 3600 , l . getLatitudeAsSeconds ( ) ) ; }
void test1 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( " ; " ) ; unitTests0 . testISO6709Parsing ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( " ; " ) ; unitTests0 . testStringConstructor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void testStringConstructor ( ) { try { / / make a location Location l = new Location ( "38 * 30'N 33 * 45'E" ) ; / / convert it to a string , and back Location l2 = new Location ( l . toString ( ) ) ; / / equal ? assertEquals ( l , l2 ) ; } catch ( NumberFormatException nfe ) { fail ( ) ; } }
void test3 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( " } f" ) ; unitTests0 . testLongitudeWrapping ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test4 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( "h0" ) ; unitTests0 . testDistanceTo ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void testDistanceTo ( ) { try { / / distance to myself is zero Location l = new Location ( "38 * 30'N 33 * 45'E" ) ; assertEquals ( l . distanceTo ( l ) , 0 ) ; / / distance to somebody else is > 0 Location l2 = new Location ( "48 * 30'N 33 * 45'E" ) ; assertTrue ( l . distanceTo ( l2 ) > 0 ) ; / / functional requirements say it's to be rounded to the / / nearest 10km , too . assertEquals ( l . distanceTo ( l2 ) % 10 , 0 ) ; } catch ( NumberFormatException nfe ) { fail ( ) ; } }
void test0 ( ) throws Throwable { ImageIcon imageIcon0 = new ImageIcon ( "3 < Y\"C [ , qoqCw" ) ; Image image0 = imageIcon0 . getImage ( ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 , true , ( - 16 ) ) ; byte [ ] byteArray0 = pngEncoder0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int writeBytes ( byte [ ] data , int offset ) { maxPos = Math . max ( maxPos , offset + data . length ) ; if ( data . length + offset > pngBytes . length ) { pngBytes = resizeByteArray ( pngBytes , pngBytes . length + Math . max ( 1000 , data . length ) ) ; } System . arraycopy ( data , 0 , pngBytes , offset , data . length ) ; return offset + data . length ; }
void test1 ( ) throws Throwable { JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( " > GsJW9 = & hM'" , ( Icon ) null , false ) ; DirectColorModel directColorModel0 = ( DirectColorModel ) ColorModel . getRGBdefault ( ) ; int [ ] intArray0 = new int [ 2 ] ; Hashtable < Object , String > hashtable0 = new Hashtable < Object , String > ( ) ; MemoryImageSource memoryImageSource0 = new MemoryImageSource ( 1 , 1 , ( ColorModel ) directColorModel0 , intArray0 , 0 , 1 , ( Hashtable < ? , ? > ) hashtable0 ) ; Image image0 = jRadioButtonMenuItem0 . createImage ( ( ImageProducer ) memoryImageSource0 ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test3 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ( Image ) null ) ; boolean boolean0 = pngEncoder0 . getEncodeAlpha ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test4 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ) ; int int0 = pngEncoder0 . getCompressionLevel ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test5 ( ) throws Throwable { JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( " > GsJW9 = & hM'" , ( Icon ) null , false ) ; DirectColorModel directColorModel0 = ( DirectColorModel ) ColorModel . getRGBdefault ( ) ; int [ ] intArray0 = new int [ 2 ] ; Hashtable < Object , String > hashtable0 = new Hashtable < Object , String > ( ) ; MemoryImageSource memoryImageSource0 = new MemoryImageSource ( 1 , 1 , ( ColorModel ) directColorModel0 , intArray0 , 0 , 1 , ( Hashtable < ? , ? > ) hashtable0 ) ; Image image0 = jRadioButtonMenuItem0 . createImage ( ( ImageProducer ) memoryImageSource0 ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 ) ; pngEncoder0 . setEncodeAlpha ( true ) ; byte [ ] byteArray0 = pngEncoder0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test6 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ) ; int int0 = pngEncoder0 . getFilter ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test7 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ) ; pngEncoder0 . setImage ( ( Image ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test8 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ( Image ) null , true , ( - 1093 ) , ( - 1093 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test9 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ( Image ) null , true , 1014 , 1014 ) ; pngEncoder0 . setCompressionLevel ( ( - 1619 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test10 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ) ; pngEncoder0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test11 ( ) throws Throwable { JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( " > GsJW9 = & hM'" , ( Icon ) null , false ) ; DirectColorModel directColorModel0 = ( DirectColorModel ) ColorModel . getRGBdefault ( ) ; int [ ] intArray0 = new int [ 8 ] ; Hashtable < Object , String > hashtable0 = new Hashtable < Object , String > ( ) ; MemoryImageSource memoryImageSource0 = new MemoryImageSource ( 26 , 26 , ( ColorModel ) directColorModel0 , intArray0 , 26 , 26 , ( Hashtable < ? , ? > ) hashtable0 ) ; Image image0 = jRadioButtonMenuItem0 . createImage ( ( ImageProducer ) memoryImageSource0 ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 ) ; byte [ ] byteArray0 = pngEncoder0 . pngEncode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test12 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ( Image ) null ) ; pngEncoder0 . setCompressionLevel ( 656 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCompressionLevel ( ) { return compressionLevel ; }
void test13 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ) ; pngEncoder0 . setCompressionLevel ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test14 ( ) throws Throwable { PngEncoder pngEncoder0 = new PngEncoder ( ( Image ) null ) ; byte [ ] byteArray0 = new byte [ 7 ] ; pngEncoder0 . filterUp ( byteArray0 , ( int ) ( byte ) 0 , ( int ) ( byte ) 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getEncodeAlpha ( ) { return encodeAlpha ; }
void test15 ( ) throws Throwable { JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( " > GsJW9 = & hM'" , ( Icon ) null , false ) ; DirectColorModel directColorModel0 = ( DirectColorModel ) ColorModel . getRGBdefault ( ) ; int [ ] intArray0 = new int [ 2 ] ; Hashtable < Object , String > hashtable0 = new Hashtable < Object , String > ( ) ; MemoryImageSource memoryImageSource0 = new MemoryImageSource ( 1 , 1 , ( ColorModel ) directColorModel0 , intArray0 , 0 , 1 , ( Hashtable < ? , ? > ) hashtable0 ) ; Image image0 = jRadioButtonMenuItem0 . createImage ( ( ImageProducer ) memoryImageSource0 ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 ) ; pngEncoder0 . pngEncode ( ) ; pngEncoder0 . setFilter ( 1 ) ; boolean boolean0 = pngEncoder0 . writeImageData ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test16 ( ) throws Throwable { JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( " > GsJW9 = & hM'" , ( Icon ) null , false ) ; DirectColorModel directColorModel0 = ( DirectColorModel ) ColorModel . getRGBdefault ( ) ; int [ ] intArray0 = new int [ 2 ] ; Hashtable < Object , String > hashtable0 = new Hashtable < Object , String > ( ) ; MemoryImageSource memoryImageSource0 = new MemoryImageSource ( 1 , 1 , ( ColorModel ) directColorModel0 , intArray0 , 0 , 1 , ( Hashtable < ? , ? > ) hashtable0 ) ; Image image0 = jRadioButtonMenuItem0 . createImage ( ( ImageProducer ) memoryImageSource0 ) ; PngEncoder pngEncoder0 = new PngEncoder ( image0 ) ; pngEncoder0 . pngEncode ( ) ; pngEncoder0 . setFilter ( ( - 371 ) ) ; pngEncoder0 . writeImageData ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getFilter ( ) { return filter ; }
void test0 ( ) throws Throwable { double [ ] [ ] doubleArray0 = Matrix . makeRotateZ ( 1 . 0F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" double [ ] [ ] makeRotateZ ( float deg ) { double rad = Math . toRadians ( deg ) ; double c = Math . cos ( rad ) ; double s = Math . sin ( rad ) ; return new double [ ] [ ] { { c , s , 0 } , { - s , c , 0 } , { 0 , 0 , 1 } } ; }
void test1 ( ) throws Throwable { double [ ] [ ] doubleArray0 = Matrix . makeRotateY ( ( - 326 . 15094F ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" double [ ] [ ] makeRotateY ( float deg ) { double rad = Math . toRadians ( deg ) ; double c = Math . cos ( rad ) ; double s = Math . sin ( rad ) ; return new double [ ] [ ] { { c , 0 , s } , { 0 , 1 , 0 } , { - s , 0 , c } } ; }
void test2 ( ) throws Throwable { double [ ] [ ] doubleArray0 = Matrix . makeRotateX ( 1365 . 9625F ) ; double [ ] [ ] doubleArray1 = Matrix . multiply ( doubleArray0 , doubleArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test0 ( ) throws Throwable { View view0 = new View ( ) ; RectangularProjection rectangularProjection0 = ( RectangularProjection ) Projection . makeProjection ( view0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Projection makeProjection ( View view ) { return new RectangularProjection ( view ) ; }
void test0 ( ) throws Throwable { Vector < Object > vector0 = new Vector < Object > ( 0 , 0 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) vector0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test1 ( ) throws Throwable { Vector < Object > vector0 = new Vector < Object > ( 0 , 0 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) vector0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { Vector < Object > vector0 = new Vector < Object > ( 0 , 0 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) vector0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test3 ( ) throws Throwable { Vector < Object > vector0 = new Vector < Object > ( 0 , 0 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) vector0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test0 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test1 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test3 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test4 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test5 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mouseDragged ( MouseEvent e ) { if ( site ! = null ) { / / no drag - > do nothing if ( e . getPoint ( ) . equals ( down ) ) return ; / / record this place Location loc = new Location ( ) ; r . unproject ( e . getPoint ( ) , loc ) ; / / TODO : esc cancels now / / System . out . println ( "setting location of " + site . getCode ( ) + " to " + site . getLocation ( ) ) ; site . setLocation ( loc ) ; / / BUG : this violates all sorts of Site invariants , at least as far as MapPanel is concerned . / / need an event structure , like for samples ? ( it's on the way ! ) / / REFACTORing idea : rewrite tools with the interface i / / WISH i had , then write the classes to make those / / interfaces possible . / / TODO : when it's been dragged from down2 to down2' , the selection changes , / / but i only need to check a few points : / * - - break it down into orthogonal movements , down2 to down2' , and down2' to down2'' - - if slice is getting smaller , - - - - all sites that are part of that slice , but not the result , get removed - - if slice is getting bigger , - - - - all sites that are part of that slice , but not the initial , get added so i'll basically want a set of ( position , selected - p , site ) tuples . * / / / p . updateBufferLabelsOnly ( ) ; / / bad ! causes too many redraws . p . repaint ( ) ; } else { down2 = e . getPoint ( ) ; / / TODO : select sites inside of ( down . . down2 ) Rectangle selectionBox = new Rectangle ( ) ; selectionBox . x = Math . min ( down . x , down2 . x ) ; selectionBox . y = Math . min ( down . y , down2 . y ) ; selectionBox . width = Math . abs ( down . x - down2 . x ) ; selectionBox . height = Math . abs ( down . y - down2 . y ) ; / / project all sites , and see who's in ( down . . down2 ) / * TODO : only consider visible sites ( perf ) - - this changes the loop TODO : lazily / only once make r / p3 objects TODO : deselect other sites TODO : memoize projections , so as you drag , this doesn't change * / java . util . List sites = SiteDB . getSiteDB ( ) . sites ; for ( int i = 0 ; i < sites . size ( ) ; i + + ) { Site s = ( Site ) sites . get ( i ) ; Location l = s . getLocation ( ) ; if ( l = = null ) continue ; Projection r = Projection . makeProjection ( v ) ; Point3D p3 = new Point3D ( ) ; r . project ( l , p3 ) ; boolean insideBox = selectionBox . contains ( p3 . getX ( ) , p3 . getY ( ) ) ; corina . map . LabelSet ls = p . labels ; / / HACK ! ls . setSelected ( s , insideBox ) ; } corina . map . LabelSet ls = p . labels ; / / HACK ! System . out . println ( ls . countSelectedSites ( ) + " sites selected" ) ; p . repaint ( ) ; / / only if changed ? only relevant area ? } }
void test6 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = mapPanel0 . getView ( ) ; HandTool handTool0 = new HandTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test1 ( ) throws Throwable { View view0 = new View ( ) ; RulerTool rulerTool0 = new RulerTool ( ( MapPanel ) null , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { View view0 = new View ( ) ; RulerTool rulerTool0 = new RulerTool ( ( MapPanel ) null , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Cursor getCursor ( ) { return new Cursor ( Cursor . DEFAULT_CURSOR ) ; }
void test3 ( ) throws Throwable { ListItem listItem0 = new ListItem ( ) ; Chapter chapter0 = new Chapter ( ( Paragraph ) listItem0 , 284 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) chapter0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = new View ( ) ; RulerTool rulerTool0 = new RulerTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mousePressed ( MouseEvent e ) { / / if there is a site here , record that try { r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; } catch ( SiteNotFoundException snfe ) { site = null ; / / clicked on empty space = > ignore } down = e . getPoint ( ) ; / / REFACTOR : i need a way to attach the popup to any / all tools / / from Tool . java , without regard for all the trivial crap in the actual / / tool code - - ( how ) can i do that ? / / popup ( mac version ) maybeShowPopup ( e , v ) ; }
void test4 ( ) throws Throwable { ListItem listItem0 = new ListItem ( ) ; Chapter chapter0 = new Chapter ( ( Paragraph ) listItem0 , 284 ) ; LabelSet labelSet0 = new LabelSet ( ( List ) chapter0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = new View ( ) ; RulerTool rulerTool0 = new RulerTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test5 ( ) throws Throwable { LabelSet labelSet0 = new LabelSet ( ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = new View ( ) ; RulerTool rulerTool0 = new RulerTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test0 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test1 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test3 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mouseClicked ( MouseEvent e ) { / / what site am i looking at ? / / if control , add this to the selected - set / / if no control , this becomes the selected - set / / if double - click , show the properties for this site if ( e . getClickCount ( ) = = 2 ) { try { Projection r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; Site site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; / / from popup trigger , below new SiteInfoDialog ( site , p . getFrame ( ) ) ; p . notifyLabelsChanged ( ) ; p . updateBufferLabelsOnly ( ) ; p . repaint ( ) ; / / FIXME : null = center on screen ; would be better to / / center on the Atlas window which i'm in } catch ( SiteNotFoundException snfe ) { / / double - click on nothing - > do nothing } } else { / / single - click / / WRITEME : select ; if command ( win32 : control ) held down , add this to selection . / / rerender this site only ( not clip ) , and repaint . / / ( WHAT I WANT FIRST : one updateBuffers ( * ) method , SiteRenderer knows clipping , drawing with selected = true try { Projection r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; / / from popup trigger , below p . setSelection ( site ) ; / / the decorator hilites it now - - ( though it shouldn't ) p . repaint ( ) ; } catch ( SiteNotFoundException snfe ) { p . setSelection ( null ) ; site = null ; / / OOPS : need to know old selection , so i can un - hilite it ( efficiently ) now . / / p . updateBufferLabelsOnly ( ) ; / / ugly ! - - and a hack ! - - and ugly ! - - and slow ! p . repaint ( ) ; } } }
void test4 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test5 ( ) throws Throwable { MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , ( LabelSet ) null ) ; View view0 = new View ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test0 ( ) throws Throwable { Anchor anchor0 = new Anchor ( ( - 1104 . 8943F ) , "" ) ; LabelSet labelSet0 = new LabelSet ( ( List ) anchor0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; MouseEvent mouseEvent0 = new MouseEvent ( ( Component ) arrowTool0 . button , ( - 285 ) , ( long ) ( - 285 ) , 0 , 0 , ( - 1 ) , 0 , 10211 , ( - 1 ) , false , 0 ) ; RulerTool rulerTool0 = new RulerTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; rulerTool0 . mouseClicked ( mouseEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTooltip ( ) { return "Selection Tool" ; }
void test2 ( ) throws Throwable { Anchor anchor0 = new Anchor ( ( - 1104 . 8943F ) , "" ) ; LabelSet labelSet0 = new LabelSet ( ( List ) anchor0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; MouseEvent mouseEvent0 = new MouseEvent ( ( Component ) arrowTool0 . button , ( - 285 ) , ( long ) ( - 285 ) , 0 , 0 , ( - 1 ) , 0 , 10211 , ( - 1 ) , false , 0 ) ; RulerTool rulerTool0 = new RulerTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; rulerTool0 . mouseMoved ( mouseEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mouseMoved ( MouseEvent e ) { }
void test3 ( ) throws Throwable { Anchor anchor0 = new Anchor ( ( - 1104 . 8943F ) , "" ) ; LabelSet labelSet0 = new LabelSet ( ( List ) anchor0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; MouseEvent mouseEvent0 = new MouseEvent ( ( Component ) arrowTool0 . button , ( - 285 ) , ( long ) ( - 285 ) , 0 , 0 , ( - 1 ) , 0 , 10211 , ( - 1 ) , false , 0 ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; zoomInTool0 . mouseEntered ( mouseEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mouseEntered ( MouseEvent e ) { }
void test4 ( ) throws Throwable { ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , ( View ) null , ( ToolBox ) null ) ; KeyEvent keyEvent0 = new KeyEvent ( ( Component ) zoomOutTool0 . button , ( - 1419 ) , ( long ) ( - 1419 ) , 0 , ( - 1419 ) , 'K' ) ; zoomOutTool0 . keyPressed ( keyEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void keyPressed ( KeyEvent e ) { System . out . println ( "key pressed , zoom - in tool sees it" ) ; if ( e . getKeyCode ( ) = = KeyEvent . VK_ESCAPE ) { aborted = true ; System . out . println ( "it's escape ! " ) ; } else { System . out . println ( "it's not escape . . . " ) ; } }
void test5 ( ) throws Throwable { Anchor anchor0 = new Anchor ( ( - 1104 . 8943F ) , "" ) ; LabelSet labelSet0 = new LabelSet ( ( List ) anchor0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ZoomInTool zoomInTool0 = new ZoomInTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; KeyEvent keyEvent0 = new KeyEvent ( ( Component ) zoomInTool0 . button , 0 , ( long ) 0 , 0 , 0 , 'U' , 0 ) ; zoomInTool0 . keyTyped ( keyEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTooltip ( ) { return "Selection Tool" ; }
void test6 ( ) throws Throwable { Anchor anchor0 = new Anchor ( ( - 1104 . 8943F ) , "" ) ; LabelSet labelSet0 = new LabelSet ( ( List ) anchor0 ) ; MapPanel mapPanel0 = new MapPanel ( ( MapFrame ) null , labelSet0 ) ; View view0 = mapPanel0 . getView ( ) ; ArrowTool arrowTool0 = new ArrowTool ( mapPanel0 , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean maybeShowPopup ( MouseEvent e , View v ) { / / popup trigger : right - click brings up a list of sites at this location if ( e . isPopupTrigger ( ) ) { try { / / get site , and look up all sites at that location Projection r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; Site site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; / / what's 20 * . . . ? List sites = p . sitesForPoint ( site ) ; / / sort by "code : name" Collections . sort ( sites , new Comparator ( ) { int compare ( Object o1 , Object o2 ) { Site s1 = ( Site ) o1 ; Site s2 = ( Site ) o2 ; String name1 = s1 . getCode ( ) + ( s1 . getName ( ) = = null ? "" : ( " : " + s1 . getName ( ) ) ) ; / / REFACTOR ! String name2 = s2 . getCode ( ) + ( s2 . getName ( ) = = null ? "" : ( " : " + s2 . getName ( ) ) ) ; return name1 . compareTo ( name2 ) ; } } ) ; / / make a popup menu with all the sites , and show it JPopupMenu popup = new JPopupMenu ( ) ; for ( int i = 0 ; i < sites . size ( ) ; i + + ) { Site s = ( Site ) sites . get ( i ) ; JMenuItem menuitem = popup . add ( s . getCode ( ) + ( s . getName ( ) = = null ? "" : ( " : " + s . getName ( ) ) ) ) ; / / " menuitem . addActionListener ( new AbstractAction ( ) { void actionPerformed ( ActionEvent e ) { p . toFront ( s ) ; } } ) ; } popup . show ( p , pt . x , pt . y ) ; / / ( REFACTOR : site . tostring should be "code : name" routine ? ) } catch ( SiteNotFoundException snfe ) { / / ignore } return true ; } else { return false ; } }
void test0 ( ) throws Throwable { ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , ( View ) null , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Cursor getCursor ( ) { return new Cursor ( Cursor . DEFAULT_CURSOR ) ; }
void test1 ( ) throws Throwable { View view0 = new View ( ) ; ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , view0 , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , ( View ) null , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test3 ( ) throws Throwable { ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , ( View ) null , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mouseClicked ( MouseEvent e ) { / / what site am i looking at ? / / if control , add this to the selected - set / / if no control , this becomes the selected - set / / if double - click , show the properties for this site if ( e . getClickCount ( ) = = 2 ) { try { Projection r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; Site site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; / / from popup trigger , below new SiteInfoDialog ( site , p . getFrame ( ) ) ; p . notifyLabelsChanged ( ) ; p . updateBufferLabelsOnly ( ) ; p . repaint ( ) ; / / FIXME : null = center on screen ; would be better to / / center on the Atlas window which i'm in } catch ( SiteNotFoundException snfe ) { / / double - click on nothing - > do nothing } } else { / / single - click / / WRITEME : select ; if command ( win32 : control ) held down , add this to selection . / / rerender this site only ( not clip ) , and repaint . / / ( WHAT I WANT FIRST : one updateBuffers ( * ) method , SiteRenderer knows clipping , drawing with selected = true try { Projection r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; / / from popup trigger , below p . setSelection ( site ) ; / / the decorator hilites it now - - ( though it shouldn't ) p . repaint ( ) ; } catch ( SiteNotFoundException snfe ) { p . setSelection ( null ) ; site = null ; / / OOPS : need to know old selection , so i can un - hilite it ( efficiently ) now . / / p . updateBufferLabelsOnly ( ) ; / / ugly ! - - and a hack ! - - and ugly ! - - and slow ! p . repaint ( ) ; } } }
void test4 ( ) throws Throwable { ZoomOutTool zoomOutTool0 = new ZoomOutTool ( ( MapPanel ) null , ( View ) null , ( ToolBox ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test1 ( ) throws Throwable { Graphic graphic0 = new Graphic ( ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphics ( ( - 1932 . 5066F ) , ( - 1932 . 5066F ) , true , ( - 1932 . 5066F ) ) ; View view0 = new View ( ) ; LabelSet labelSet0 = new LabelSet ( ) ; SitesLayer sitesLayer0 = new SitesLayer ( labelSet0 ) ; SphericalProjection sphericalProjection0 = new SphericalProjection ( view0 ) ; sitesLayer0 . draw ( ( Graphics2D ) pdfGraphics2D0 , ( Projection ) sphericalProjection0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { Graphic graphic0 = new Graphic ( ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphics ( ( - 1932 . 5066F ) , ( - 1932 . 5066F ) , true , ( - 1932 . 5066F ) ) ; View view0 = new View ( ) ; view0 . setZoom ( 352 . 62567F ) ; LabelSet labelSet0 = new LabelSet ( ) ; SitesLayer sitesLayer0 = new SitesLayer ( labelSet0 ) ; SphericalProjection sphericalProjection0 = new SphericalProjection ( view0 ) ; sitesLayer0 . draw ( ( Graphics2D ) pdfGraphics2D0 , ( Projection ) sphericalProjection0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { LegendLayer legendLayer0 = new LegendLayer ( ) ; View view0 = new View ( ) ; view0 . setZoom ( ( - 1 . 0F ) ) ; RectangularProjection rectangularProjection0 = new RectangularProjection ( view0 ) ; legendLayer0 . update ( ( Projection ) rectangularProjection0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean noDraw ( ) { return dirty & & nodraw ; }
void test0 ( ) throws Throwable { GridlinesLayer gridlinesLayer0 = new GridlinesLayer ( ) ; Graphic graphic0 = new Graphic ( ) ; AsianFontMapper asianFontMapper0 = new AsianFontMapper ( "uNGZ / o_" , "uNGZ / o_" ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphics ( ( - 27 . 494904F ) , ( - 27 . 494904F ) , ( FontMapper ) asianFontMapper0 , true , ( - 27 . 494904F ) ) ; View view0 = new View ( ) ; SphericalProjection sphericalProjection0 = new SphericalProjection ( view0 ) ; gridlinesLayer0 . draw ( ( Graphics2D ) pdfGraphics2D0 , ( Projection ) sphericalProjection0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { GridlinesLayer gridlinesLayer0 = new GridlinesLayer ( ) ; gridlinesLayer0 . stop ( ) ; Graphic graphic0 = new Graphic ( ) ; AsianFontMapper asianFontMapper0 = new AsianFontMapper ( "uNGZ / o_" , "uNGZ / o_" ) ; PdfGraphics2D pdfGraphics2D0 = ( PdfGraphics2D ) graphic0 . createGraphics ( ( - 27 . 494904F ) , ( - 27 . 494904F ) , ( FontMapper ) asianFontMapper0 , true , ( - 27 . 494904F ) ) ; View view0 = new View ( ) ; SphericalProjection sphericalProjection0 = new SphericalProjection ( view0 ) ; gridlinesLayer0 . draw ( ( Graphics2D ) pdfGraphics2D0 , ( Projection ) sphericalProjection0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { Macintosh macintosh0 = new Macintosh ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; boolean boolean0 = platform0 . isWindows ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isWindows ( ) { return isWindows ; }
void test2 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; boolean boolean0 = platform0 . isUnix ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isUnix ( ) { return isUnix ; }
void test3 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; boolean boolean0 = platform0 . isMac ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isMac ( ) { return isMac ; }
void test6 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; String string0 = platform0 . getTrash ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTrash ( ) { if ( isWindows ) return "C : \\recycled\\" ; / / do they still not have a per - user trash ? just use the trash on C : \ . if ( isMac ) return System . getProperty ( "user . home" ) + " / . Trash / " ; return null ; / / what to do on unix ? }
void test7 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; platform0 . setModified ( ( JFrame ) null , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test8 ( ) throws Throwable { Platform platform0 = new Platform ( ) ; String string0 = platform0 . getCopyModifier ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCopyModifier ( ) { if ( isMac ) return "alt" ; / / option , really else return "control" ; / / i have no idea what it is on generic unix . does motif specify ? }
void test0 ( ) throws Throwable { Netware netware0 = new Netware ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { PrefsEvent prefsEvent0 = new PrefsEvent ( ( Object ) "" , "" ) ; String string0 = prefsEvent0 . getPref ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPref ( String pref ) { return prefs . getProperty ( pref ) ; }
void test1 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; prefs0 . removePrefsListener ( ( PrefsListener ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCorinaDir ( ) { return CORINADIR ; }
void test2 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; String string0 = prefs0 . getCorinaDir ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCorinaDir ( ) { return CORINADIR ; }
void test5 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; Hashtable < Object , Object > hashtable0 = prefs0 . getUIDefaults ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int size ( ) { return num ; }
void test6 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; Properties properties0 = prefs0 . getPrefs ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Properties getPrefs ( ) { return prefs ; }
void test8 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; String string0 = prefs0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test12 ( ) throws Throwable { Prefs prefs0 = new Prefs ( ) ; prefs0 . firePrefChanged ( "Preferences" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test1 ( ) throws Throwable { Geometry geometry0 = new Geometry ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test1 ( ) throws Throwable { TucsonSimple tucsonSimple0 = new TucsonSimple ( ) ; String string0 = tucsonSimple0 . getDefaultExtension ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDefaultExtension ( ) { return " . RAW" ; }
void test2 ( ) throws Throwable { TucsonSimple tucsonSimple0 = new TucsonSimple ( ) ; Sample sample0 = new Sample ( ) ; CharArrayWriter charArrayWriter0 = new CharArrayWriter ( ) ; BufferedWriter bufferedWriter0 = new BufferedWriter ( ( Writer ) charArrayWriter0 , 33 ) ; tucsonSimple0 . save ( sample0 , bufferedWriter0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int size ( ) { return num ; }
void test3 ( ) throws Throwable { TucsonSimple tucsonSimple0 = new TucsonSimple ( ) ; String string0 = tucsonSimple0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { TwoColumn twoColumn0 = new TwoColumn ( ) ; String string0 = twoColumn0 . getDefaultExtension ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDefaultExtension ( ) { return " . RAW" ; }
void test1 ( ) throws Throwable { TwoColumn twoColumn0 = new TwoColumn ( ) ; String string0 = twoColumn0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test5 ( ) throws Throwable { TwoColumn twoColumn0 = new TwoColumn ( ) ; Sample sample0 = new Sample ( ) ; twoColumn0 . save ( sample0 , ( BufferedWriter ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int computeRadius ( ) { / / ( apply ' + data ) int n = data . size ( ) ; int sum = 0 ; for ( int i = 0 ; i < n ; i + + ) sum + = ( ( Number ) data . get ( i ) ) . intValue ( ) ; return sum ; }
void test6 ( ) throws Throwable { TwoColumn twoColumn0 = new TwoColumn ( ) ; Sample sample0 = new Sample ( ) ; LinkedList < String > linkedList0 = new LinkedList < String > ( ) ; sample0 . count = ( List < ? > ) linkedList0 ; twoColumn0 . save ( sample0 , ( BufferedWriter ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDefaultExtension ( ) { return " . RAW" ; }
void test0 ( ) throws Throwable { TabbedLineFactory tabbedLineFactory0 = new TabbedLineFactory ( "" ) ; Line line0 = tabbedLineFactory0 . makeLine ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Line makeLine ( String values ) { List val = new ArrayList ( ) ; / / ( why not use a string tokenizer ? it has issues with tabs , especially / / multiple tabs - in - a - row , or starts - with - or ends - with - a - tab . ) String vals [ ] = StringUtils . splitBy ( values , '\t' ) ; for ( int i = 0 ; i < vals . length ; i + + ) { vals [ i ] = vals [ i ] . trim ( ) ; / / java bug : g . drawString ( "" , x , y ) throws illegal argument . if ( vals [ i ] . equals ( "" ) ) vals [ i ] = " " ; } / / array - > list for ( int i = 0 ; i < vals . length ; i + + ) val . add ( vals [ i ] ) ; / / if there are fewer args than i'm expecting , add some blanks . int need = expecting - val . size ( ) ; for ( int i = 0 ; i < need ; i + + ) val . add ( " " ) ; return new TabbedLine ( val ) ; }
void test1 ( ) throws Throwable { TabbedLineFactory tabbedLineFactory0 = new TabbedLineFactory ( "9%" ) ; Font font0 = Font . decode ( "9%" ) ; tabbedLineFactory0 . setFont ( font0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setFont ( Font f ) { currentFont = f ; }
void test2 ( ) throws Throwable { TabbedLineFactory tabbedLineFactory0 = new TabbedLineFactory ( " > < > ^ | " ) ; Line line0 = tabbedLineFactory0 . makeLine ( " > < > ^ | " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Line makeLine ( String values ) { List val = new ArrayList ( ) ; / / ( why not use a string tokenizer ? it has issues with tabs , especially / / multiple tabs - in - a - row , or starts - with - or ends - with - a - tab . ) String vals [ ] = StringUtils . splitBy ( values , '\t' ) ; for ( int i = 0 ; i < vals . length ; i + + ) { vals [ i ] = vals [ i ] . trim ( ) ; / / java bug : g . drawString ( "" , x , y ) throws illegal argument . if ( vals [ i ] . equals ( "" ) ) vals [ i ] = " " ; } / / array - > list for ( int i = 0 ; i < vals . length ; i + + ) val . add ( vals [ i ] ) ; / / if there are fewer args than i'm expecting , add some blanks . int need = expecting - val . size ( ) ; for ( int i = 0 ; i < need ; i + + ) val . add ( " " ) ; return new TabbedLine ( val ) ; }
void test1 ( ) throws Throwable { TextLine textLine0 = new TextLine ( "HGqAR & = KfQ" , 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" TextLine ( String text ) { this . text = text ; this . font = new Font ( "serif" , Font . PLAIN , size ) ; }
void test1 ( ) throws Throwable { ThinLine thinLine0 = new ThinLine ( ( - 50 . 0F ) , 1855 . 8066F ) ; int int0 = thinLine0 . height ( ( Graphics ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int height ( Graphics g ) { return 2 ; }
void test0 ( ) throws Throwable { EmptyLine emptyLine0 = new EmptyLine ( ) ; int int0 = emptyLine0 . height ( ( Graphics ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int height ( Graphics g ) { return 2 ; }
void test1 ( ) throws Throwable { EmptyLine emptyLine0 = new EmptyLine ( ) ; PageFormat pageFormat0 = new PageFormat ( ) ; emptyLine0 . print ( ( Graphics ) null , pageFormat0 , ( - 328 . 37357F ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int print ( Graphics g , PageFormat format , int pageNr ) throws PrinterException { / / a map is always exactly one page if ( pageNr > 0 ) return Printable . NO_SUCH_PAGE ; / / create my own view : zoom View detailedView = ( View ) view . clone ( ) ; detailedView . setZoom ( detailedView . getZoom ( ) * detail ) ; / / then set the size - - scale up by | detail | to get | DPI | . / / ( if you want a square map , say : h = w = Math . min ( h , w ) ; ) int w = ( int ) format . getImageableWidth ( ) ; int h = ( int ) format . getImageableHeight ( ) ; detailedView . size = new Dimension ( ( int ) ( w * detail ) , ( int ) ( h * detail ) ) ; / / create my own projection Projection r = Projection . makeProjection ( detailedView ) ; / / use a small brush Graphics2D g2 = ( Graphics2D ) g ; g2 . setStroke ( new BasicStroke ( 0 . 5f ) ) ; / / offset so it's entirely on the page , and scale down to / / make it look detailed but normal - sized float dx = ( float ) format . getImageableX ( ) ; float dy = ( float ) format . getImageableY ( ) ; g2 . translate ( dx , dy ) ; g2 . scale ( 1 / detail , 1 / detail ) ; / / print the layers to it printAllLayers ( g2 , r ) ; return Printable . PAGE_EXISTS ; }
void test0 ( ) throws Throwable { ByLine byLine0 = new ByLine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ByLine ( ) { super ( makeByLine ( ) , 10 ) ; }
void test0 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( ) ; buttonLayout0 . addLayoutComponent ( "mousO = ele_ . ased" , ( Component ) jInternalFrame0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void addLayoutComponent ( String name , Component comp ) { / / it's a header . . . addLayoutComponent ( comp , null ) ; }
void test1 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( ) ; JInternalFrame . JDesktopIcon jInternalFrame_JDesktopIcon0 = jInternalFrame0 . getDesktopIcon ( ) ; Dimension dimension0 = buttonLayout0 . minimumLayoutSize ( ( Container ) jInternalFrame_JDesktopIcon0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( ) ; JInternalFrame . JDesktopIcon jInternalFrame_JDesktopIcon0 = jInternalFrame0 . getDesktopIcon ( ) ; Dimension dimension0 = buttonLayout0 . preferredLayoutSize ( ( Container ) jInternalFrame_JDesktopIcon0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test3 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( ) ; JInternalFrame . JDesktopIcon jInternalFrame_JDesktopIcon0 = jInternalFrame0 . getDesktopIcon ( ) ; buttonLayout0 . removeLayoutComponent ( ( Component ) jInternalFrame_JDesktopIcon0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void removeLayoutComponent ( Component comp ) { / / remove the row containing | comp | int n = rows . size ( ) ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow & & ( ( HeaderRow ) r ) . h . equals ( comp ) ) { rows . remove ( r ) ; return ; } else if ( r instanceof NormalRow & & ( ( NormalRow ) r ) . c . equals ( comp ) ) { rows . remove ( r ) ; return ; } } }
void test4 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( ) ; JInternalFrame . JDesktopIcon jInternalFrame_JDesktopIcon0 = jInternalFrame0 . getDesktopIcon ( ) ; buttonLayout0 . layoutContainer ( ( Container ) jInternalFrame_JDesktopIcon0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void layoutContainer ( Container parent ) { int n = rows . size ( ) ; Insets border = parent . getInsets ( ) ; int lastY = border . top ; / / figure out where the second column should start int secondColumn = 0 ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof NormalRow ) { NormalRow nr = ( NormalRow ) r ; secondColumn = Math . max ( secondColumn , / / nr . l . getMinimumSize ( ) . width ) ; nr . getLabelWidth ( false ) ) ; } } secondColumn + = border . left + EXTRA ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow ) { / / header Component header = ( ( HeaderRow ) r ) . h ; int w = parent . getWidth ( ) - ( border . left + border . right ) ; int h = header . getMinimumSize ( ) . height ; int x = border . left ; int y = lastY ; header . setBounds ( x , y , w , h ) ; lastY + = h ; } else if ( r instanceof NormalRow ) { / / label JLabel l = ( JLabel ) ( ( NormalRow ) r ) . l ; int w1 = l . getMinimumSize ( ) . width ; / / int h1 = l . getPreferredSize ( ) . height ; int h1 = l . getMinimumSize ( ) . height ; int x1 = secondColumn - w1 ; int y1 = lastY ; l . setBounds ( x1 , y1 , w1 , h1 ) ; / / control Component c = ( ( NormalRow ) r ) . c ; / / WAS : int w2 = c . getPreferredSize ( ) . width ; int w2 = c . getMaximumSize ( ) . width ; / / NEW ! w2 = Math . min ( w2 , parent . getWidth ( ) - ( border . right + PADDING + secondColumn ) ) ; int h2 = c . getPreferredSize ( ) . height ; int x2 = secondColumn + PADDING ; / / buffer between 'em int y2 = lastY ; c . setBounds ( x2 , y2 , w2 , h2 ) ; lastY + = Math . max ( h1 , h2 ) ; } } / / focus on the first one ? ( is that my job ? ) ( is it even possible ? ) }
void test5 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JRootPane jRootPane0 = new JRootPane ( ) ; buttonLayout0 . layoutContainer ( ( Container ) jRootPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void layoutContainer ( Container parent ) { int n = rows . size ( ) ; Insets border = parent . getInsets ( ) ; int lastY = border . top ; / / figure out where the second column should start int secondColumn = 0 ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof NormalRow ) { NormalRow nr = ( NormalRow ) r ; secondColumn = Math . max ( secondColumn , / / nr . l . getMinimumSize ( ) . width ) ; nr . getLabelWidth ( false ) ) ; } } secondColumn + = border . left + EXTRA ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow ) { / / header Component header = ( ( HeaderRow ) r ) . h ; int w = parent . getWidth ( ) - ( border . left + border . right ) ; int h = header . getMinimumSize ( ) . height ; int x = border . left ; int y = lastY ; header . setBounds ( x , y , w , h ) ; lastY + = h ; } else if ( r instanceof NormalRow ) { / / label JLabel l = ( JLabel ) ( ( NormalRow ) r ) . l ; int w1 = l . getMinimumSize ( ) . width ; / / int h1 = l . getPreferredSize ( ) . height ; int h1 = l . getMinimumSize ( ) . height ; int x1 = secondColumn - w1 ; int y1 = lastY ; l . setBounds ( x1 , y1 , w1 , h1 ) ; / / control Component c = ( ( NormalRow ) r ) . c ; / / WAS : int w2 = c . getPreferredSize ( ) . width ; int w2 = c . getMaximumSize ( ) . width ; / / NEW ! w2 = Math . min ( w2 , parent . getWidth ( ) - ( border . right + PADDING + secondColumn ) ) ; int h2 = c . getPreferredSize ( ) . height ; int x2 = secondColumn + PADDING ; / / buffer between 'em int y2 = lastY ; c . setBounds ( x2 , y2 , w2 , h2 ) ; lastY + = Math . max ( h1 , h2 ) ; } } / / focus on the first one ? ( is that my job ? ) ( is it even possible ? ) }
void test6 ( ) throws Throwable { ButtonLayout buttonLayout0 = new ButtonLayout ( ) ; JScrollPane jScrollPane0 = new JScrollPane ( ) ; buttonLayout0 . layoutContainer ( ( Container ) jScrollPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void layoutContainer ( Container parent ) { int n = rows . size ( ) ; Insets border = parent . getInsets ( ) ; int lastY = border . top ; / / figure out where the second column should start int secondColumn = 0 ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof NormalRow ) { NormalRow nr = ( NormalRow ) r ; secondColumn = Math . max ( secondColumn , / / nr . l . getMinimumSize ( ) . width ) ; nr . getLabelWidth ( false ) ) ; } } secondColumn + = border . left + EXTRA ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow ) { / / header Component header = ( ( HeaderRow ) r ) . h ; int w = parent . getWidth ( ) - ( border . left + border . right ) ; int h = header . getMinimumSize ( ) . height ; int x = border . left ; int y = lastY ; header . setBounds ( x , y , w , h ) ; lastY + = h ; } else if ( r instanceof NormalRow ) { / / label JLabel l = ( JLabel ) ( ( NormalRow ) r ) . l ; int w1 = l . getMinimumSize ( ) . width ; / / int h1 = l . getPreferredSize ( ) . height ; int h1 = l . getMinimumSize ( ) . height ; int x1 = secondColumn - w1 ; int y1 = lastY ; l . setBounds ( x1 , y1 , w1 , h1 ) ; / / control Component c = ( ( NormalRow ) r ) . c ; / / WAS : int w2 = c . getPreferredSize ( ) . width ; int w2 = c . getMaximumSize ( ) . width ; / / NEW ! w2 = Math . min ( w2 , parent . getWidth ( ) - ( border . right + PADDING + secondColumn ) ) ; int h2 = c . getPreferredSize ( ) . height ; int x2 = secondColumn + PADDING ; / / buffer between 'em int y2 = lastY ; c . setBounds ( x2 , y2 , w2 , h2 ) ; lastY + = Math . max ( h1 , h2 ) ; } } / / focus on the first one ? ( is that my job ? ) ( is it even possible ? ) }
void test0 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; dialogLayout0 . addLayoutComponent ( "not a true list" , ( Component ) defaultListCellRenderer0 ) ; dialogLayout0 . layoutContainer ( ( Container ) defaultListCellRenderer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getY ( ) { return y ; }
void test1 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( "not a true list" , true ) ; JRadioButtonMenuItem jRadioButtonMenuItem1 = ( JRadioButtonMenuItem ) defaultListCellRenderer0 . add ( ( Component ) jRadioButtonMenuItem0 ) ; dialogLayout0 . addLayoutComponent ( ( Component ) jRadioButtonMenuItem1 , ( Object ) "ToolTipText" ) ; dialogLayout0 . layoutContainer ( ( Container ) defaultListCellRenderer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void layoutContainer ( Container parent ) { int n = rows . size ( ) ; Insets border = parent . getInsets ( ) ; int lastY = border . top ; / / figure out where the second column should start int secondColumn = 0 ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof NormalRow ) { NormalRow nr = ( NormalRow ) r ; secondColumn = Math . max ( secondColumn , / / nr . l . getMinimumSize ( ) . width ) ; nr . getLabelWidth ( false ) ) ; } } secondColumn + = border . left + EXTRA ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow ) { / / header Component header = ( ( HeaderRow ) r ) . h ; int w = parent . getWidth ( ) - ( border . left + border . right ) ; int h = header . getMinimumSize ( ) . height ; int x = border . left ; int y = lastY ; header . setBounds ( x , y , w , h ) ; lastY + = h ; } else if ( r instanceof NormalRow ) { / / label JLabel l = ( JLabel ) ( ( NormalRow ) r ) . l ; int w1 = l . getMinimumSize ( ) . width ; / / int h1 = l . getPreferredSize ( ) . height ; int h1 = l . getMinimumSize ( ) . height ; int x1 = secondColumn - w1 ; int y1 = lastY ; l . setBounds ( x1 , y1 , w1 , h1 ) ; / / control Component c = ( ( NormalRow ) r ) . c ; / / WAS : int w2 = c . getPreferredSize ( ) . width ; int w2 = c . getMaximumSize ( ) . width ; / / NEW ! w2 = Math . min ( w2 , parent . getWidth ( ) - ( border . right + PADDING + secondColumn ) ) ; int h2 = c . getPreferredSize ( ) . height ; int x2 = secondColumn + PADDING ; / / buffer between 'em int y2 = lastY ; c . setBounds ( x2 , y2 , w2 , h2 ) ; lastY + = Math . max ( h1 , h2 ) ; } } / / focus on the first one ? ( is that my job ? ) ( is it even possible ? ) }
void test2 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; JTextPane jTextPane0 = new JTextPane ( ) ; float float0 = dialogLayout0 . getLayoutAlignmentX ( ( Container ) jTextPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLayoutAlignmentX ( Container target ) { return 0 . 5f ; }
void test3 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; JTextPane jTextPane0 = new JTextPane ( ) ; dialogLayout0 . invalidateLayout ( ( Container ) jTextPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void invalidateLayout ( Container target ) { / / don't think i have to do anything here }
void test4 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( "not a true list" , true ) ; float float0 = dialogLayout0 . getLayoutAlignmentY ( ( Container ) jRadioButtonMenuItem0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLayoutAlignmentY ( Container target ) { return 0 . 0f ; }
void test5 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; JTextPane jTextPane0 = new JTextPane ( ) ; Dimension dimension0 = dialogLayout0 . maximumLayoutSize ( ( Container ) jTextPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test6 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; dialogLayout0 . layoutContainer ( ( Container ) defaultListCellRenderer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void layoutContainer ( Container parent ) { int n = rows . size ( ) ; Insets border = parent . getInsets ( ) ; int lastY = border . top ; / / figure out where the second column should start int secondColumn = 0 ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof NormalRow ) { NormalRow nr = ( NormalRow ) r ; secondColumn = Math . max ( secondColumn , / / nr . l . getMinimumSize ( ) . width ) ; nr . getLabelWidth ( false ) ) ; } } secondColumn + = border . left + EXTRA ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow ) { / / header Component header = ( ( HeaderRow ) r ) . h ; int w = parent . getWidth ( ) - ( border . left + border . right ) ; int h = header . getMinimumSize ( ) . height ; int x = border . left ; int y = lastY ; header . setBounds ( x , y , w , h ) ; lastY + = h ; } else if ( r instanceof NormalRow ) { / / label JLabel l = ( JLabel ) ( ( NormalRow ) r ) . l ; int w1 = l . getMinimumSize ( ) . width ; / / int h1 = l . getPreferredSize ( ) . height ; int h1 = l . getMinimumSize ( ) . height ; int x1 = secondColumn - w1 ; int y1 = lastY ; l . setBounds ( x1 , y1 , w1 , h1 ) ; / / control Component c = ( ( NormalRow ) r ) . c ; / / WAS : int w2 = c . getPreferredSize ( ) . width ; int w2 = c . getMaximumSize ( ) . width ; / / NEW ! w2 = Math . min ( w2 , parent . getWidth ( ) - ( border . right + PADDING + secondColumn ) ) ; int h2 = c . getPreferredSize ( ) . height ; int x2 = secondColumn + PADDING ; / / buffer between 'em int y2 = lastY ; c . setBounds ( x2 , y2 , w2 , h2 ) ; lastY + = Math . max ( h1 , h2 ) ; } } / / focus on the first one ? ( is that my job ? ) ( is it even possible ? ) }
void test8 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( "not true list" , false ) ; defaultListCellRenderer0 . add ( ( Component ) jRadioButtonMenuItem0 ) ; dialogLayout0 . addLayoutComponent ( "not true list" , ( Component ) defaultListCellRenderer0 ) ; Dimension dimension0 = dialogLayout0 . minimumLayoutSize ( ( Container ) defaultListCellRenderer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test11 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; JTextPane jTextPane0 = new JTextPane ( ) ; dialogLayout0 . addLayoutComponent ( ( String ) null , ( Component ) jTextPane0 ) ; dialogLayout0 . removeLayoutComponent ( ( Component ) jTextPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void removeLayoutComponent ( Component comp ) { / / remove the row containing | comp | int n = rows . size ( ) ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow & & ( ( HeaderRow ) r ) . h . equals ( comp ) ) { rows . remove ( r ) ; return ; } else if ( r instanceof NormalRow & & ( ( NormalRow ) r ) . c . equals ( comp ) ) { rows . remove ( r ) ; return ; } } }
void test12 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( "not a true list" , true ) ; JRadioButtonMenuItem jRadioButtonMenuItem1 = ( JRadioButtonMenuItem ) defaultListCellRenderer0 . add ( ( Component ) jRadioButtonMenuItem0 ) ; dialogLayout0 . addLayoutComponent ( ( Component ) jRadioButtonMenuItem1 , ( Object ) "ToolTipText" ) ; dialogLayout0 . removeLayoutComponent ( ( Component ) jRadioButtonMenuItem1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void removeLayoutComponent ( Component comp ) { / / remove the row containing | comp | int n = rows . size ( ) ; for ( int i = 0 ; i < n ; i + + ) { Row r = ( Row ) rows . get ( i ) ; if ( r instanceof HeaderRow & & ( ( HeaderRow ) r ) . h . equals ( comp ) ) { rows . remove ( r ) ; return ; } else if ( r instanceof NormalRow & & ( ( NormalRow ) r ) . c . equals ( comp ) ) { rows . remove ( r ) ; return ; } } }
void test13 ( ) throws Throwable { DialogLayout dialogLayout0 = new DialogLayout ( ) ; DefaultListCellRenderer defaultListCellRenderer0 = new DefaultListCellRenderer ( ) ; JRadioButtonMenuItem jRadioButtonMenuItem0 = new JRadioButtonMenuItem ( "not true list" , false ) ; defaultListCellRenderer0 . add ( ( Component ) jRadioButtonMenuItem0 ) ; dialogLayout0 . addLayoutComponent ( "not true list" , ( Component ) defaultListCellRenderer0 ) ; Dimension dimension0 = dialogLayout0 . preferredLayoutSize ( ( Container ) defaultListCellRenderer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Logging logging0 = new Logging ( ) ; boolean boolean0 = logging0 . isInitialized ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test2 ( ) throws Throwable { Logging logging0 = new Logging ( ) ; logging0 . init ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test0 ( ) throws Throwable { App app0 = new App ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test1 ( ) throws Throwable { boolean boolean0 = App . isInitialized ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isInitialized ( ) ; void init ( ) ; void destroy ( ) ; }
void test0 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 3 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test1 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 2 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test2 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test3 ( ) throws Throwable { Object [ ] objectArray0 = new Object [ 12 ] ; Component component0 = DataComponent . makePopupComponent ( objectArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test4 ( ) throws Throwable { Component component0 = DataComponent . makeMetaComponent ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getX ( ) { return x ; }
void test5 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 4 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test6 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test7 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( 6 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test8 ( ) throws Throwable { DataComponent dataComponent0 = new DataComponent ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test9 ( ) throws Throwable { Component component0 = DataComponent . makeComponent ( ( - 2009 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component makeComponent ( int type ) { switch ( type ) { case SearchDialog . NONE : return new NoneComponent ( ) ; case SearchDialog . YEAR : return new YearComponent ( ) ; case SearchDialog . NUMBER : return new NumberComponent ( ) ; case SearchDialog . LENGTH : return new LengthComponent ( ) ; case SearchDialog . DATE : return new DateComponent ( ) ; / / case SearchDialog . POPUP : / / return new PopupComponent ( ) default : return new StringComponent ( ) ; } }
void test10 ( ) throws Throwable { Component component0 = DataComponent . makeMetaComponent ( "Dating" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Criterion . StringEndsWith criterion_StringEndsWith0 = new Criterion . StringEndsWith ( ) ; String string0 = criterion_StringEndsWith0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { Object [ ] objectArray0 = Criterion . getRHSValues ( 3 , "7a4ZLbMorwD" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test2 ( ) throws Throwable { int int0 = Criterion . getRHSType ( 1 , "ends with" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getRHSType ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { return criteria [ i ] . getRHSType ( ) ; } return SearchDialog . NONE ; / / not found - - can't happen ! }
void test4 ( ) throws Throwable { Criterion . StringEndsWith criterion_StringEndsWith0 = new Criterion . StringEndsWith ( ) ; String string0 = criterion_StringEndsWith0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test5 ( ) throws Throwable { Object [ ] objectArray0 = Criterion . getRHSValues ( 2 , "is greater than" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test6 ( ) throws Throwable { Criterion . YearIsBefore criterion_YearIsBefore0 = new Criterion . YearIsBefore ( ) ; String string0 = criterion_YearIsBefore0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test7 ( ) throws Throwable { Criterion . YearIsExactly criterion_YearIsExactly0 = ( Criterion . YearIsExactly ) Criterion . getCriterion ( 4 , "is exactly" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test8 ( ) throws Throwable { Criterion . YearIsBefore criterion_YearIsBefore0 = new Criterion . YearIsBefore ( ) ; String string0 = criterion_YearIsBefore0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test9 ( ) throws Throwable { Criterion . DateIsBefore criterion_DateIsBefore0 = new Criterion . DateIsBefore ( ) ; String string0 = criterion_DateIsBefore0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test11 ( ) throws Throwable { Criterion . DateIsBefore criterion_DateIsBefore0 = new Criterion . DateIsBefore ( ) ; String string0 = criterion_DateIsBefore0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test12 ( ) throws Throwable { Criterion . NumberIsGreaterThan criterion_NumberIsGreaterThan0 = new Criterion . NumberIsGreaterThan ( ) ; String string0 = criterion_NumberIsGreaterThan0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test13 ( ) throws Throwable { Criterion . NumberIsGreaterThan criterion_NumberIsGreaterThan0 = new Criterion . NumberIsGreaterThan ( ) ; String string0 = criterion_NumberIsGreaterThan0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test14 ( ) throws Throwable { Criterion . OneOfIs criterion_OneOfIs0 = new Criterion . OneOfIs ( ) ; String string0 = criterion_OneOfIs0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test15 ( ) throws Throwable { Criterion . OneOfIs criterion_OneOfIs0 = new Criterion . OneOfIs ( ) ; boolean boolean0 = criterion_OneOfIs0 . test ( ( Object ) "null > null" , ( Object ) " ? ? ? " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test16 ( ) throws Throwable { Criterion . OneOfIs criterion_OneOfIs0 = new Criterion . OneOfIs ( ) ; String [ ] stringArray0 = criterion_OneOfIs0 . getRHSValues ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test17 ( ) throws Throwable { Criterion . OneOfIs criterion_OneOfIs0 = new Criterion . OneOfIs ( ) ; String string0 = criterion_OneOfIs0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test18 ( ) throws Throwable { Criterion . OneOfIs criterion_OneOfIs0 = ( Criterion . OneOfIs ) Criterion . getCriterion ( 5 , "r . null > null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Criterion getCriterion ( int type , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = type & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] ; return null ; / / not found - - can't happen ! }
void test19 ( ) throws Throwable { String [ ] stringArray0 = Criterion . getComparisonsForType ( 2 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String [ ] getComparisonsForType ( int type ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = type ) n + + ; String result [ ] = new String [ n ] ; int j = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = type ) result [ j + + ] = criteria [ i ] . getComparison ( ) ; return result ; }
void test20 ( ) throws Throwable { Criterion . NumberIsNotEqualTo criterion_NumberIsNotEqualTo0 = new Criterion . NumberIsNotEqualTo ( ) ; String string0 = criterion_NumberIsNotEqualTo0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test21 ( ) throws Throwable { Criterion . NumberIsNotEqualTo criterion_NumberIsNotEqualTo0 = new Criterion . NumberIsNotEqualTo ( ) ; String string0 = criterion_NumberIsNotEqualTo0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test22 ( ) throws Throwable { Criterion . NumberIsEqualTo criterion_NumberIsEqualTo0 = new Criterion . NumberIsEqualTo ( ) ; String string0 = criterion_NumberIsEqualTo0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test24 ( ) throws Throwable { Criterion . NumberIsEqualTo criterion_NumberIsEqualTo0 = new Criterion . NumberIsEqualTo ( ) ; String string0 = criterion_NumberIsEqualTo0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test25 ( ) throws Throwable { Criterion . DateIsWithin criterion_DateIsWithin0 = new Criterion . DateIsWithin ( ) ; int int0 = criterion_DateIsWithin0 . getRHSType ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getRHSType ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { return criteria [ i ] . getRHSType ( ) ; } return SearchDialog . NONE ; / / not found - - can't happen ! }
void test26 ( ) throws Throwable { Criterion . DateIsWithin criterion_DateIsWithin0 = new Criterion . DateIsWithin ( ) ; String string0 = criterion_DateIsWithin0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test27 ( ) throws Throwable { Criterion . DateIsWithin criterion_DateIsWithin0 = new Criterion . DateIsWithin ( ) ; String string0 = criterion_DateIsWithin0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test28 ( ) throws Throwable { Criterion . DateIsWithin criterion_DateIsWithin0 = new Criterion . DateIsWithin ( ) ; String [ ] stringArray0 = criterion_DateIsWithin0 . getRHSValues ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test29 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; String [ ] stringArray0 = criterion_OneOfNotSet0 . getRHSValues ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test30 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; String string0 = criterion_OneOfNotSet0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test31 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; String string0 = criterion_OneOfNotSet0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test32 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; boolean boolean0 = criterion_OneOfNotSet0 . test ( ( Object ) "not set" , ( Object ) "not set" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test33 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; int int0 = criterion_OneOfNotSet0 . getLHSType ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getLHSType ( ) ; / / it'll need to know a bunch of stuff about the Criteria : / / - - what the possible values for the second field are String getComparison ( ) ; / / e . g . , = > "is" / / ! ! ! String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test34 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; int int0 = criterion_OneOfNotSet0 . getRHSType ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getRHSType ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { return criteria [ i ] . getRHSType ( ) ; } return SearchDialog . NONE ; / / not found - - can't happen ! }
void test35 ( ) throws Throwable { Criterion . OneOfNotSet criterion_OneOfNotSet0 = new Criterion . OneOfNotSet ( ) ; String string0 = criterion_OneOfNotSet0 . getComparison ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getComparison ( ) ; / / e . g . , = > "is" / / ! ! ! String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test36 ( ) throws Throwable { Criterion . OneOfIsNot criterion_OneOfIsNot0 = new Criterion . OneOfIsNot ( ) ; String [ ] stringArray0 = criterion_OneOfIsNot0 . getRHSValues ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object [ ] getRHSValues ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; / / find the Criterion with matching lhsType and comparator , and return its rhsValues int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] . getRHSValues ( ) ; / / not present ? must be a metadata field . return null ; / / not found - - can't happen ! }
void test37 ( ) throws Throwable { Criterion . OneOfIsNot criterion_OneOfIsNot0 = new Criterion . OneOfIsNot ( ) ; String string0 = criterion_OneOfIsNot0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test38 ( ) throws Throwable { Criterion . OneOfIsNot criterion_OneOfIsNot0 = new Criterion . OneOfIsNot ( ) ; String string0 = criterion_OneOfIsNot0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test39 ( ) throws Throwable { Criterion . DateIsToday criterion_DateIsToday0 = new Criterion . DateIsToday ( ) ; String string0 = criterion_DateIsToday0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test40 ( ) throws Throwable { Criterion . DateIsToday criterion_DateIsToday0 = new Criterion . DateIsToday ( ) ; String string0 = criterion_DateIsToday0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test41 ( ) throws Throwable { Criterion . DateIsToday criterion_DateIsToday0 = new Criterion . DateIsToday ( ) ; int int0 = criterion_DateIsToday0 . getRHSType ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getRHSType ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { return criteria [ i ] . getRHSType ( ) ; } return SearchDialog . NONE ; / / not found - - can't happen ! }
void test44 ( ) throws Throwable { Criterion . DateIsExactly criterion_DateIsExactly0 = new Criterion . DateIsExactly ( ) ; String string0 = criterion_DateIsExactly0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test45 ( ) throws Throwable { Criterion . DateIsExactly criterion_DateIsExactly0 = new Criterion . DateIsExactly ( ) ; String string0 = criterion_DateIsExactly0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test46 ( ) throws Throwable { Criterion . LengthIsGreaterThan criterion_LengthIsGreaterThan0 = new Criterion . LengthIsGreaterThan ( ) ; String string0 = criterion_LengthIsGreaterThan0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test47 ( ) throws Throwable { Criterion . LengthIsGreaterThan criterion_LengthIsGreaterThan0 = new Criterion . LengthIsGreaterThan ( ) ; String string0 = criterion_LengthIsGreaterThan0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test49 ( ) throws Throwable { Criterion . StringContains criterion_StringContains0 = ( Criterion . StringContains ) Criterion . getCriterion ( 1 , "C" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Criterion getCriterion ( int type , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = type & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) return criteria [ i ] ; return null ; / / not found - - can't happen ! }
void test50 ( ) throws Throwable { Criterion . StringIs criterion_StringIs0 = new Criterion . StringIs ( ) ; String string0 = criterion_StringIs0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test51 ( ) throws Throwable { Criterion . StringIs criterion_StringIs0 = new Criterion . StringIs ( ) ; String string0 = criterion_StringIs0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test52 ( ) throws Throwable { Criterion . StringStartsWith criterion_StringStartsWith0 = new Criterion . StringStartsWith ( ) ; String string0 = criterion_StringStartsWith0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test53 ( ) throws Throwable { Criterion . StringStartsWith criterion_StringStartsWith0 = new Criterion . StringStartsWith ( ) ; boolean boolean0 = criterion_StringStartsWith0 . test ( ( Object ) "m . null < null" , ( Object ) "m . null < null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test54 ( ) throws Throwable { Criterion . StringStartsWith criterion_StringStartsWith0 = new Criterion . StringStartsWith ( ) ; String string0 = criterion_StringStartsWith0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test56 ( ) throws Throwable { Criterion . YearIsExactly criterion_YearIsExactly0 = new Criterion . YearIsExactly ( ) ; String string0 = criterion_YearIsExactly0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test57 ( ) throws Throwable { Criterion . YearIsExactly criterion_YearIsExactly0 = new Criterion . YearIsExactly ( ) ; String string0 = criterion_YearIsExactly0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test58 ( ) throws Throwable { Criterion . YearIsAfter criterion_YearIsAfter0 = new Criterion . YearIsAfter ( ) ; String string0 = criterion_YearIsAfter0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test59 ( ) throws Throwable { Criterion . YearIsAfter criterion_YearIsAfter0 = new Criterion . YearIsAfter ( ) ; String string0 = criterion_YearIsAfter0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test60 ( ) throws Throwable { Criterion . LengthIsLessThan criterion_LengthIsLessThan0 = new Criterion . LengthIsLessThan ( ) ; String string0 = criterion_LengthIsLessThan0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test61 ( ) throws Throwable { int int0 = Criterion . getRHSType ( 6 , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getRHSType ( int lhsType , String comparator ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = lhsType & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { return criteria [ i ] . getRHSType ( ) ; } return SearchDialog . NONE ; / / not found - - can't happen ! }
void test62 ( ) throws Throwable { Criterion . LengthIsLessThan criterion_LengthIsLessThan0 = new Criterion . LengthIsLessThan ( ) ; String string0 = criterion_LengthIsLessThan0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test63 ( ) throws Throwable { Criterion . StringContains criterion_StringContains0 = new Criterion . StringContains ( ) ; String string0 = criterion_StringContains0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test64 ( ) throws Throwable { Criterion . StringContains criterion_StringContains0 = new Criterion . StringContains ( ) ; String string0 = criterion_StringContains0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test66 ( ) throws Throwable { Criterion . DateIsAfter criterion_DateIsAfter0 = new Criterion . DateIsAfter ( ) ; String string0 = criterion_DateIsAfter0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test67 ( ) throws Throwable { Criterion . DateIsAfter criterion_DateIsAfter0 = new Criterion . DateIsAfter ( ) ; String string0 = criterion_DateIsAfter0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test68 ( ) throws Throwable { Criterion . NumberIsLessThan criterion_NumberIsLessThan0 = new Criterion . NumberIsLessThan ( ) ; String string0 = criterion_NumberIsLessThan0 . toSQL ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test69 ( ) throws Throwable { Criterion . NumberIsLessThan criterion_NumberIsLessThan0 = new Criterion . NumberIsLessThan ( ) ; String string0 = criterion_NumberIsLessThan0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test70 ( ) throws Throwable { Criterion . StringEndsWith criterion_StringEndsWith0 = ( Criterion . StringEndsWith ) Criterion . makeCriterion ( 1 , "ends with" , "ends with" , ( Object ) "null > null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test71 ( ) throws Throwable { Criterion criterion0 = Criterion . makeCriterion ( ( - 154 ) , " ? ? ? " , " ? ? ? " , ( Object ) "null modified before null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Criterion makeCriterion ( int type , String field , String comparator , Object rhs ) { if ( criteria = = null ) initCriteria ( ) ; int n = 0 ; for ( int i = 0 ; i < criteria . length ; i + + ) if ( criteria [ i ] . getLHSType ( ) = = type & & criteria [ i ] . getComparison ( ) . equals ( comparator ) ) { / / make a new criterion , of proper type - - call constructor for given class ? / / Criterion c = ( Criterion ) criteria [ i ] . clone ( ) ; - - but it's not cloneable try { / / basically , clone and set fields - - ick ! Criterion c = ( Criterion ) criteria [ i ] . getClass ( ) . newInstance ( ) ; c . lhsField = field ; c . rhs = rhs ; return c ; } catch ( InstantiationException ie ) { / / can't happen System . out . println ( "can't happen error #1" ) ; return null ; } catch ( IllegalAccessException iae ) { / / can't happen System . out . println ( "can't happen error #2" ) ; return null ; } } return null ; / / not found - - can't happen ! }
void test72 ( ) throws Throwable { Criterion . StringContains criterion_StringContains0 = new Criterion . StringContains ( ) ; boolean boolean0 = criterion_StringContains0 . test ( ( Object ) "is before" , ( Object ) "is less than" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test73 ( ) throws Throwable { Criterion . StringContains criterion_StringContains0 = new Criterion . StringContains ( ) ; boolean boolean0 = criterion_StringContains0 . test ( ( Object ) "null > null" , ( Object ) "null > null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test74 ( ) throws Throwable { Criterion . OneOfIsNot criterion_OneOfIsNot0 = new Criterion . OneOfIsNot ( ) ; boolean boolean0 = criterion_OneOfIsNot0 . test ( ( Object ) criterion_OneOfIsNot0 , ( Object ) criterion_OneOfIsNot0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test75 ( ) throws Throwable { Criterion . OneOfIsNot criterion_OneOfIsNot0 = new Criterion . OneOfIsNot ( ) ; Criterion . DateIsAfter criterion_DateIsAfter0 = new Criterion . DateIsAfter ( ) ; boolean boolean0 = criterion_OneOfIsNot0 . test ( ( Object ) " ? ? " , ( Object ) criterion_DateIsAfter0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean test ( Element e ) { / / get the LHS Object lhs = getLHS ( e ) ; / / if anything is null , don't bother checking - - DESIGN : is this correct ? if ( lhs = = null ) / / | | rhs = = null ) return false ; / / rhs can be null ( e . g . , moddate is - today ) , and that's ok . it's never / / null when it shouldn't be . so just check lhs . / / run subclass test return test ( lhs , rhs ) ; }
void test0 ( ) throws Throwable { Search search0 = new Search ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object run ( ) { Subject subject = Subject . getSubject ( AccessController . getContext ( ) ) ; if ( subject ! = null ) { / / replace the event queue with one that has the Subject stored Toolkit . getDefaultToolkit ( ) . getSystemEventQueue ( ) . push ( new AccessControlContextEventQueue ( ) ) ; } / * * Font f = new Font ( "courier" , java . awt . Font . PLAIN , 24 ) ; * UIManager . put ( "Menu . font" , f ) ; UIManager . put ( "MenuItem . font" , f ) ; * / try { / / TODO : implement progress listeners and splash screen for real ClassLoader cl = this . getClass ( ) . getClassLoader ( ) ; URL url = cl . getResource ( "Images / Tree . png" ) ; ImageIcon ii = null ; if ( url ! = null ) { ii = new ImageIcon ( url ) ; } Splash splash = new Splash ( "Starting Corina" , ii ) ; ProgressMeter pm = new ProgressMeter ( ) ; pm . addProgressListener ( splash ) ; App . init ( pm ) ; / / monitor . close ( ) ; / / let's go . . . XCorina . showCorinaWindow ( ) ; } catch ( Throwable t ) { new Bug ( t ) ; } return null ; }
void test1 ( ) throws Throwable { Search search0 = new Search ( ) ; search0 . setFolder ( "DgzNoS . _lX & " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test2 ( ) throws Throwable { Search search0 = new Search ( ) ; search0 . setType ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test4 ( ) throws Throwable { Search search0 = new Search ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toSQL ( ) ; / / - - given a choice in the second field , what the third field is . / / ( it's usually the same as the LHS field , so we'll return that by default . ) / / must be at least : if it's , it can't be overridden , / / probably because the inheritance rules were written before inner classes , / / so there's a bit of weirdness . ( it still lets you write it as "" , / / with subclasses having same - named methods , with no warnings , but / / it never calls the subclass method . ) int getRHSType ( ) { return getLHSType ( ) ; }
void test2 ( ) throws Throwable { JPasswordField jPasswordField0 = new JPasswordField ( "ujb { H" ) ; ColorUIResource colorUIResource0 = ( ColorUIResource ) jPasswordField0 . getDisabledTextColor ( ) ; GraphInfo . colorPair graphInfo_colorPair0 = new GraphInfo . colorPair ( "ujb { H" , ( Color ) colorUIResource0 ) ; ColorUIResource colorUIResource1 = ( ColorUIResource ) graphInfo_colorPair0 . getColor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test3 ( ) throws Throwable { JPasswordField jPasswordField0 = new JPasswordField ( "ujb { H" ) ; ColorUIResource colorUIResource0 = ( ColorUIResource ) jPasswordField0 . getDisabledTextColor ( ) ; GraphInfo . colorPair graphInfo_colorPair0 = new GraphInfo . colorPair ( "ujb { H" , ( Color ) colorUIResource0 ) ; graphInfo_colorPair0 . setColor ( ( Color ) colorUIResource0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setColor ( Color c ) { currentColor = c ; }
void test4 ( ) throws Throwable { JPasswordField jPasswordField0 = new JPasswordField ( "ujb { H" ) ; ColorUIResource colorUIResource0 = ( ColorUIResource ) jPasswordField0 . getDisabledTextColor ( ) ; GraphInfo . colorPair graphInfo_colorPair0 = new GraphInfo . colorPair ( "ujb { H" , ( Color ) colorUIResource0 ) ; String string0 = graphInfo_colorPair0 . getColorName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" GraphInfo ( boolean forprinting ) { giInit ( forprinting ) ; }
void test0 ( ) throws Throwable { ColorComboBox colorComboBox0 = new ColorComboBox ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getSelectedIndex ( ) { return list . getSelectedIndex ( ) ; }
void test1 ( ) throws Throwable { ColorComboBox colorComboBox0 = new ColorComboBox ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getSelectedIndex ( ) { return list . getSelectedIndex ( ) ; }
void test0 ( ) throws Throwable { Font font0 = new Font ( ) ; Paragraph paragraph0 = new Paragraph ( 0 . 82F , "" , font0 ) ; GraphElementsPanel graphElementsPanel0 = new GraphElementsPanel ( ( List ) paragraph0 , ( GraphWindow ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getSelectedIndex ( ) { return list . getSelectedIndex ( ) ; }
void test0 ( ) throws Throwable { Phrase phrase0 = new Phrase ( ( - 1 . 1658175F ) ) ; ElemColorTable elemColorTable0 = new ElemColorTable ( ( List ) phrase0 , true ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ElemColorTable ( List graphs , boolean isPrinting ) { super ( ) ; this . isPrinting = isPrinting ; this . graphs = graphs ; graphColors = new ColorPair [ graphs . size ( ) ] ; int i ; for ( i = 0 ; i < graphs . size ( ) ; i + + ) { int j ; ColorPair gcolor = null ; Color mcolor = ( ( Graph ) graphs . get ( i ) ) . getColor ( true ) ; for ( j = 0 ; j < colors . length ; j + + ) { if ( colors [ j ] . colorVal . equals ( mcolor ) ) { gcolor = colors [ j ] ; break ; } } if ( gcolor = = null ) gcolor = new ColorPair ( "Unknown" , mcolor ) ; graphColors [ i ] = gcolor ; } TableModel dataModel = new exportInfoTableModel ( this ) ; JTable table = new JTable ( dataModel ) ; JComboBox colorCombo = new JComboBox ( colors ) ; colorCombo . setRenderer ( new colorComboBoxRenderer ( ) ) ; table . getColumnModel ( ) . getColumn ( 1 ) . setCellEditor ( new DefaultCellEditor ( colorCombo ) ) ; table . getColumnModel ( ) . getColumn ( 1 ) . setCellRenderer ( new colorTableCellRenderer ( ) ) ; JComboBox thickCombo = new JComboBox ( thicknesses ) ; thickCombo . setRenderer ( new thicknessComboBoxRenderer ( ) ) ; table . getColumnModel ( ) . getColumn ( 2 ) . setCellEditor ( new DefaultCellEditor ( thickCombo ) ) ; table . getColumnModel ( ) . getColumn ( 2 ) . setCellRenderer ( new thicknessTableCellRenderer ( ) ) ; table . getColumnModel ( ) . getColumn ( 0 ) . setPreferredWidth ( 200 ) ; table . setPreferredScrollableViewportSize ( table . getPreferredSize ( ) ) ; setViewportView ( table ) ; }
void test0 ( ) throws Throwable { DensityPlot densityPlot0 = new DensityPlot ( ) ; int int0 = densityPlot0 . yTransform ( ( float ) 1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int yTransform ( float y ) { / * int tval = 1000 + ( int ) ( 1000 . 0 * Math . log ( y / 1000 . 0 ) ) ; return tval ; * / return ( int ) ( Math . log10 ( y ) * 100 . 0 ) ; }
void test1 ( ) throws Throwable { DensityPlot densityPlot0 = new DensityPlot ( ) ; boolean boolean0 = densityPlot0 . validValue ( 1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean validValue ( int value ) { return true ; }
void test0 ( ) throws Throwable { LinkedList < Object > linkedList0 = new LinkedList < Object > ( ) ; DensityGraph densityGraph0 = new DensityGraph ( ( List ) linkedList0 , ( Year ) null , " , rL } Y { 3`" ) ; Year year0 = densityGraph0 . getStart ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Year getStart ( ) { return start ; }
void test1 ( ) throws Throwable { LinkedList < Integer > linkedList0 = new LinkedList < Integer > ( ) ; Year year0 = Year . DEFAULT ; DensityGraph densityGraph0 = new DensityGraph ( ( List ) linkedList0 , year0 , " > QTmQ\n5S . PD2wY#$" ) ; String string0 = densityGraph0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { LinkedList < Integer > linkedList0 = new LinkedList < Integer > ( ) ; Year year0 = Year . DEFAULT ; DensityGraph densityGraph0 = new DensityGraph ( ( List ) linkedList0 , year0 , " > QTmQ\n5S . PD2wY#$" ) ; List < Object > list0 = densityGraph0 . getData ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int size ( ) { return num ; }
void test3 ( ) throws Throwable { LinkedList < Integer > linkedList0 = new LinkedList < Integer > ( ) ; Year year0 = Year . DEFAULT ; DensityGraph densityGraph0 = new DensityGraph ( ( List ) linkedList0 , year0 , " > QTmQ\n5S . PD2wY#$" ) ; float float0 = densityGraph0 . getScale ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getScale ( ) { return ( isIndexed ( ) ? 0 . 1f : 1 . 0f ) ; }
void test0 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; Range range0 = graph0 . getRange ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toStringWithSpan ( ) { return " ( " + start + " - " + end + " , n = " + span ( ) + " ) " ; / / use \u2014 EM DASH ? }
void test1 ( ) throws Throwable { Year year0 = Year . DEFAULT ; Graph graph0 = new Graph ( ( List ) null , year0 , "X - { < EAj & H ! mf : " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setColor ( Color c ) { currentColor = c ; }
void test2 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . left ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test3 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . getAgent ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test4 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . setAgent ( ( CorinaGraphPlotter ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test5 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . right ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void right ( ) { xoffset + + ; }
void test6 ( ) throws Throwable { Graph graph0 = new Graph ( ( List ) null , ( Year ) null , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void slide ( int pixels ) { yoffset + = pixels ; }
void test7 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . setGraphName ( " ! Tdr ) pX hU" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test8 ( ) throws Throwable { Year year0 = Year . DEFAULT ; Graph graph0 = new Graph ( ( List ) null , year0 , "X - { < EAj & H ! mf : " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void bigger ( ) { scale * = SCALE ; }
void test9 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . smaller ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test10 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; String string0 = graph0 . getGraphName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test11 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; String string0 = graph0 . toXML ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test12 ( ) throws Throwable { Year year0 = Year . DEFAULT ; Graph graph0 = new Graph ( ( List ) null , year0 , "X - { < EAj & H ! mf : " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test13 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . setColor ( ( Color ) null , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test14 ( ) throws Throwable { Year year0 = Year . DEFAULT ; Graph graph0 = new Graph ( ( List ) null , year0 , "X - { < EAj & H ! mf : " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setColor ( Color c ) { currentColor = c ; }
void test15 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . getColor ( false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test16 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . getColor ( true ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test17 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; graph0 . setThickness ( 1 , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test18 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setThickness ( int thickness , boolean isPrinting ) { if ( isPrinting ) printerlineThickness = thickness ; else lineThickness = thickness ; }
void test19 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; int int0 = graph0 . getThickness ( false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test20 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Graph graph0 = new Graph ( ( Graphable ) sample0 ) ; int int0 = graph0 . getThickness ( true ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test0 ( ) throws Throwable { StringComparator stringComparator0 = new StringComparator ( ) ; int int0 = stringComparator0 . compare ( ( Object ) "jB" , ( Object ) "jB" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test1 ( ) throws Throwable { int int0 = StringComparator . compare ( "jB" , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test2 ( ) throws Throwable { int int0 = StringComparator . compare ( "jB" , "\"n + " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test3 ( ) throws Throwable { int int0 = StringComparator . compare ( "" , "jB" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test0 ( ) throws Throwable { LinkedList < Object > linkedList0 = new LinkedList < Object > ( ) ; Sort . sort ( ( List ) linkedList0 , "nz ) * / Z } ] , o , x3n" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isEmpty ( ) { return getText ( ) . length ( ) = = 0 ; }
void test0 ( ) throws Throwable { PureStringWriter pureStringWriter0 = new PureStringWriter ( ) ; char [ ] charArray0 = new char [ 4 ] ; pureStringWriter0 . write ( charArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { PureStringWriter pureStringWriter0 = new PureStringWriter ( 26 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { JMenu jMenu0 = new JMenu ( ) ; JDisclosureTriangle jDisclosureTriangle0 = new JDisclosureTriangle ( " * " , ( JComponent ) jMenu0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { JMenu jMenu0 = new JMenu ( ) ; JDisclosureTriangle jDisclosureTriangle0 = new JDisclosureTriangle ( " * " , ( JComponent ) jMenu0 , false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Color color0 = Color . ORANGE ; Color color1 = ColorUtils . blend ( color0 , color0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Color blend ( Color c1 , Color c2 ) { return new Color ( ( c1 . getRed ( ) + c2 . getRed ( ) ) / 2 , ( c1 . getGreen ( ) + c2 . getGreen ( ) ) / 2 , ( c1 . getBlue ( ) + c2 . getBlue ( ) ) / 2 ) ; }
void test1 ( ) throws Throwable { Color color0 = Color . GRAY ; Color color1 = ColorUtils . addAlpha ( color0 , 0 . 0F ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Color addAlpha ( Color c , int alpha ) { return new Color ( c . getRed ( ) , c . getGreen ( ) , c . getBlue ( ) , alpha ) ; }
void test2 ( ) throws Throwable { Color color0 = Color . ORANGE ; Color color1 = ColorUtils . grayscale ( color0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Color grayscale ( Color c ) { int value = ( int ) ( 0 . 299 * c . getRed ( ) + 0 . 587 * c . getGreen ( ) + 0 . 114 * c . getBlue ( ) ) ; return new Color ( value , value , value ) ; / / PERF : we'll get lots of these - - cache them ? }
void test3 ( ) throws Throwable { Color color0 = new Color ( 0 ) ; Color color1 = ColorUtils . blend ( color0 , ( float ) 0 , color0 , ( float ) 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test4 ( ) throws Throwable { Color color0 = Color . PINK ; boolean boolean0 = ColorUtils . reallyDark ( color0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean reallyDark ( Color c ) { ( hue_sat_bri ) { Color . RGBtoHSB ( c . getRed ( ) , c . getGreen ( ) , c . getBlue ( ) , hue_sat_bri ) ; return ( hue_sat_bri [ 2 ] < 0 . 10f ) ; / / pick a value . . . 10% } }
void test5 ( ) throws Throwable { Color color0 = Color . BLACK ; boolean boolean0 = ColorUtils . reallyDark ( color0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean reallyDark ( Color c ) { ( hue_sat_bri ) { Color . RGBtoHSB ( c . getRed ( ) , c . getGreen ( ) , c . getBlue ( ) , hue_sat_bri ) ; return ( hue_sat_bri [ 2 ] < 0 . 10f ) ; / / pick a value . . . 10% } }
void test0 ( ) throws Throwable { UserFriendlyFile userFriendlyFile0 = new UserFriendlyFile ( "Yd25tcHO = ywV#y ( " ) ; String string0 = userFriendlyFile0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { DefaultTableModel defaultTableModel0 = new DefaultTableModel ( 334 , 334 ) ; JTable jTable0 = new JTable ( ( TableModel ) defaultTableModel0 ) ; PopupListener popupListener0 = new PopupListener ( ( JPopupMenu ) null ) ; MouseEvent mouseEvent0 = new MouseEvent ( ( Component ) jTable0 , 1 , 1276L , 0 , 0 , 0 , ( - 1017 ) , true , 0 ) ; popupListener0 . mouseReleased ( mouseEvent0 ) ; popupListener0 . mouseReleased ( mouseEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Row getSelectedRow ( ) throws NoSuchElementException { int selection = table . getSelectedRow ( ) ; if ( selection ! = - 1 ) return ( Row ) visibleFiles . get ( selection ) ; else throw new NoSuchElementException ( ) ; }
void test1 ( ) throws Throwable { PopupListener popupListener0 = new PopupListener ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( "Z9n8suQ4r . , RZW : . - 1" , true , true ) ; MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent ( ( Component ) jInternalFrame0 , 1 , ( long ) 1 , 1 , ( - 1930 ) , ( - 1930 ) , 1 , false , ( - 1930 ) , 1 , 1 ) ; popupListener0 . mousePressed ( ( MouseEvent ) mouseWheelEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void mousePressed ( MouseEvent e ) { / / if there is a site here , record that try { r = Projection . makeProjection ( v ) ; Point pt = e . getPoint ( ) ; site = p . siteForPoint ( r , pt , 20 * ( ( int ) v . getZoom ( ) ) ) ; } catch ( SiteNotFoundException snfe ) { site = null ; / / clicked on empty space = > ignore } down = e . getPoint ( ) ; / / REFACTOR : i need a way to attach the popup to any / all tools / / from Tool . java , without regard for all the trivial crap in the actual / / tool code - - ( how ) can i do that ? / / popup ( mac version ) maybeShowPopup ( e , v ) ; }
void test2 ( ) throws Throwable { PopupListener popupListener0 = new PopupListener ( ) ; JInternalFrame jInternalFrame0 = new JInternalFrame ( "Z9n8suQ4r . , RZW : . - 1" , true , true ) ; MouseEvent mouseEvent0 = new MouseEvent ( ( Component ) jInternalFrame0 , 1 , 18014398509481984L , ( - 1930 ) , ( - 1930 ) , 0 , 0 , false ) ; popupListener0 . showPopup ( mouseEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void showPopup ( MouseEvent e ) { / / if table , and this row not selected , select this row if ( e . getSource ( ) instanceof JTable ) { JTable table = ( JTable ) e . getSource ( ) ; int row = table . rowAtPoint ( e . getPoint ( ) ) ; if ( row ! = - 1 & & ! table . isRowSelected ( row ) ) table . setRowSelectionInterval ( row , row ) ; } / / show popup if ( popup ! = null ) popup . show ( e . getComponent ( ) , e . getX ( ) , e . getY ( ) ) ; }
void test3 ( ) throws Throwable { DefaultTableModel defaultTableModel0 = new DefaultTableModel ( ) ; DefaultTableColumnModel defaultTableColumnModel0 = new DefaultTableColumnModel ( ) ; JTable jTable0 = new JTable ( ( TableModel ) defaultTableModel0 , ( TableColumnModel ) defaultTableColumnModel0 ) ; PopupListener popupListener0 = new PopupListener ( ( JPopupMenu ) null ) ; MouseWheelEvent mouseWheelEvent0 = new MouseWheelEvent ( ( Component ) jTable0 , 22 , ( long ) 22 , 22 , 0 , 22 , 0 , true , 22 , 0 , 22 ) ; popupListener0 . showPopup ( ( MouseEvent ) mouseWheelEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void showPopup ( MouseEvent e ) { / / if table , and this row not selected , select this row if ( e . getSource ( ) instanceof JTable ) { JTable table = ( JTable ) e . getSource ( ) ; int row = table . rowAtPoint ( e . getPoint ( ) ) ; if ( row ! = - 1 & & ! table . isRowSelected ( row ) ) table . setRowSelectionInterval ( row , row ) ; } / / show popup if ( popup ! = null ) popup . show ( e . getComponent ( ) , e . getX ( ) , e . getY ( ) ) ; }
void test0 ( ) throws Throwable { Panel panel0 = new Panel ( ) ; GreedyProgressMonitor greedyProgressMonitor0 = new GreedyProgressMonitor ( ( Component ) panel0 , ( Object ) panel0 , " - uY'qk6$ ? U" , ( - 52 ) , ( - 52 ) ) ; greedyProgressMonitor0 . setProgressGreedy ( ( - 52 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test0 ( ) throws Throwable { Color color0 = Color . DARK_GRAY ; ColorPair colorPair0 = new ColorPair ( "#" , color0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ColorPair ( String colorName , Color colorVal ) { this . colorName = colorName ; this . colorVal = colorVal ; }
void test0 ( ) throws Throwable { JLine jLine0 = new JLine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" JLine ( ) { this ( HORIZONTAL ) ; }
void test2 ( ) throws Throwable { JLine jLine0 = new JLine ( 1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" JLine ( ) { this ( HORIZONTAL ) ; }
void test2 ( ) throws Throwable { Finder finder0 = new Finder ( " / %v_' / mNt" ) ; List < Object > list0 = finder0 . getResult ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isEmpty ( ) { return getText ( ) . length ( ) = = 0 ; }
void test0 ( ) throws Throwable { String [ ] stringArray0 = StringUtils . splitByLines ( "8 > * NvV2@Qw@" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String [ ] splitByLines ( String text ) { return splitBy ( text , '\n' ) ; }
void test1 ( ) throws Throwable { String string0 = StringUtils . leftPad ( "4" , ( int ) '_' ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String leftPad ( String text , int size ) { int numSpaces = size - text . length ( ) ; if ( numSpaces < = 0 ) return text ; StringBuffer buf = new StringBuffer ( size ) ; for ( int i = 0 ; i < numSpaces ; i + + ) buf . append ( ' ' ) ; for ( int i = numSpaces ; i < size ; i + + ) buf . append ( text . charAt ( i - numSpaces ) ) ; return buf . toString ( ) ; }
void test2 ( ) throws Throwable { String string0 = StringUtils . leftPad ( " * @B0M@ft = zY ( YS_Qbi * " , ( - 818 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String leftPad ( String text , int size ) { int numSpaces = size - text . length ( ) ; if ( numSpaces < = 0 ) return text ; StringBuffer buf = new StringBuffer ( size ) ; for ( int i = 0 ; i < numSpaces ; i + + ) buf . append ( ' ' ) ; for ( int i = numSpaces ; i < size ; i + + ) buf . append ( text . charAt ( i - numSpaces ) ) ; return buf . toString ( ) ; }
void test3 ( ) throws Throwable { String [ ] stringArray0 = StringUtils . splitBy ( " * @B0M@ft = zY ( YS_Qbi * " , '_' ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String [ ] splitBy ( String text , char sep ) { / / count separators int newlines = 0 ; for ( int i = 0 ; i < text . length ( ) ; i + + ) if ( text . charAt ( i ) = = sep ) newlines + + ; / / allocate space for output String result [ ] = new String [ newlines + 1 ] ; int n = 0 ; / / next space to fill / / create output int start = 0 ; for ( ; ; ) { int newline = text . indexOf ( sep , start ) ; if ( newline = = - 1 ) { result [ n + + ] = text . substring ( start ) ; / / ( to end ) break ; } else { result [ n + + ] = text . substring ( start , newline ) ; start = newline + 1 ; } } / / return it return result ; }
void test4 ( ) throws Throwable { int [ ] intArray0 = StringUtils . extractInts ( "4" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int [ ] extractInts ( String s ) { StringTokenizer tok = new StringTokenizer ( s , " " ) ; int n = tok . countTokens ( ) ; int r [ ] = new int [ n ] ; for ( int i = 0 ; i < n ; i + + ) r [ i ] = Integer . parseInt ( tok . nextToken ( ) ) ; return r ; }
void test5 ( ) throws Throwable { String string0 = StringUtils . escapeForXML ( "0 XfkZ'`s < Uae > " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String escapeForXML ( String input ) { / / FIXME : if there are no < > & symbols , just return the string / / as - is to save the GC / / MAYBE : does SAX or somebody already have a method that does / / this better ? / / MAYBE : use regexps in 1 . 4 ? / / BETTER : isn't there a String . replace ( ) or something that / / would do this in about 2 lines ? StringBuffer output = new StringBuffer ( ) ; for ( int i = 0 ; i < input . length ( ) ; i + + ) { char c = input . charAt ( i ) ; switch ( c ) { case ' & ' : output . append ( " & amp ; " ) ; break ; case ' < ' : output . append ( " & lt ; " ) ; break ; case ' > ' : output . append ( " & gt ; " ) ; break ; case '\"' : output . append ( " & quot ; " ) ; break ; case '\'' : output . append ( " & apos ; " ) ; break ; default : if ( Character . isISOControl ( c ) ) { / / if it's not printable , & #x - escape it . / / ( this came up when trying to save / / " < dating > ^D < / dating > " which shouldn't happen , / / anyway , but better safe than sorry . ) / / BUG : aren't there non - iso - control characters / / which won't show up correctly ? do they need / / the right encoding = "" ? do they have it ? if ( c < 32 ) output . append ( "ILLEGAL - XML - CHAR : " ) ; else output . append ( " & #x" ) ; String hex = Integer . toHexString ( ( int ) c ) ; for ( int ii = 0 ; ii < 4 - hex . length ( ) ; ii + + ) output . append ( "0" ) ; output . append ( hex ) ; output . append ( " ; " ) ; } else { output . append ( c ) ; } } } return output . toString ( ) ; }
void test6 ( ) throws Throwable { String string0 = StringUtils . escapeForXML ( "xI@\" & E3sVk97d / " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String escapeForXML ( String input ) { / / FIXME : if there are no < > & symbols , just return the string / / as - is to save the GC / / MAYBE : does SAX or somebody already have a method that does / / this better ? / / MAYBE : use regexps in 1 . 4 ? / / BETTER : isn't there a String . replace ( ) or something that / / would do this in about 2 lines ? StringBuffer output = new StringBuffer ( ) ; for ( int i = 0 ; i < input . length ( ) ; i + + ) { char c = input . charAt ( i ) ; switch ( c ) { case ' & ' : output . append ( " & amp ; " ) ; break ; case ' < ' : output . append ( " & lt ; " ) ; break ; case ' > ' : output . append ( " & gt ; " ) ; break ; case '\"' : output . append ( " & quot ; " ) ; break ; case '\'' : output . append ( " & apos ; " ) ; break ; default : if ( Character . isISOControl ( c ) ) { / / if it's not printable , & #x - escape it . / / ( this came up when trying to save / / " < dating > ^D < / dating > " which shouldn't happen , / / anyway , but better safe than sorry . ) / / BUG : aren't there non - iso - control characters / / which won't show up correctly ? do they need / / the right encoding = "" ? do they have it ? if ( c < 32 ) output . append ( "ILLEGAL - XML - CHAR : " ) ; else output . append ( " & #x" ) ; String hex = Integer . toHexString ( ( int ) c ) ; for ( int ii = 0 ; ii < 4 - hex . length ( ) ; ii + + ) output . append ( "0" ) ; output . append ( hex ) ; output . append ( " ; " ) ; } else { output . append ( c ) ; } } } return output . toString ( ) ; }
void test7 ( ) throws Throwable { String string0 = StringUtils . substitute ( "8 & gt ; * NvV2@Qw@" , "8 & gt ; * NvV2@Qw@" , "8 > * NvV2@Qw@" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String substitute ( String str , String source , String target ) { int index = str . indexOf ( source ) ; if ( index = = - 1 ) / / not present return str ; int start = index , end = index + source . length ( ) ; return str . substring ( 0 , start ) + target + str . substring ( end ) ; }
void test8 ( ) throws Throwable { String string0 = StringUtils . substitute ( "8 & gt ; * NvV2@Qw@" , "8 > * NvV2@Qw@" , "8 & gt ; * NvV2@Qw@" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String substitute ( String str , String source , String target ) { int index = str . indexOf ( source ) ; if ( index = = - 1 ) / / not present return str ; int start = index , end = index + source . length ( ) ; return str . substring ( 0 , start ) + target + str . substring ( end ) ; }
void test0 ( ) throws Throwable { DefaultTableModel defaultTableModel0 = new DefaultTableModel ( 0 , 0 ) ; JTable jTable0 = new JTable ( ( TableModel ) defaultTableModel0 ) ; NoEmptySelection . noEmptySelection ( jTable0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getX ( ) { return x ; }
void test1 ( ) throws Throwable { NoEmptySelection noEmptySelection0 = new NoEmptySelection ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { UnitTests unitTests0 = new UnitTests ( "" ) ; unitTests0 . testExtractInts ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { File file0 = new File ( " , iUUVxdzm + { i = cnnNo" ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file0 , file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test1 ( ) throws Throwable { File file0 = new File ( "" ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file0 , file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test2 ( ) throws Throwable { File file0 = new File ( "" ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file0 , file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test3 ( ) throws Throwable { File file0 = new File ( "" ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file0 , file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test4 ( ) throws Throwable { File file0 = new File ( "" ) ; File file1 = file0 . getAbsoluteFile ( ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file1 , file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test5 ( ) throws Throwable { File file0 = new File ( "" ) ; File file1 = file0 . getAbsoluteFile ( ) ; System . setCurrentTimeMillis ( ( long ) ( - 1 ) ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file1 , file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test6 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { File file0 = new File ( "SVGConverter . error . unable . to . create . output . dir" ) ; File file1 = file0 . getCanonicalFile ( ) ; File file2 = file1 . getParentFile ( ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file2 , file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object run ( ) { Subject subject = Subject . getSubject ( AccessController . getContext ( ) ) ; if ( subject ! = null ) { / / replace the event queue with one that has the Subject stored Toolkit . getDefaultToolkit ( ) . getSystemEventQueue ( ) . push ( new AccessControlContextEventQueue ( ) ) ; } / * * Font f = new Font ( "courier" , java . awt . Font . PLAIN , 24 ) ; * UIManager . put ( "Menu . font" , f ) ; UIManager . put ( "MenuItem . font" , f ) ; * / try { / / TODO : implement progress listeners and splash screen for real ClassLoader cl = this . getClass ( ) . getClassLoader ( ) ; URL url = cl . getResource ( "Images / Tree . png" ) ; ImageIcon ii = null ; if ( url ! = null ) { ii = new ImageIcon ( url ) ; } Splash splash = new Splash ( "Starting Corina" , ii ) ; ProgressMeter pm = new ProgressMeter ( ) ; pm . addProgressListener ( splash ) ; App . init ( pm ) ; / / monitor . close ( ) ; / / let's go . . . XCorina . showCorinaWindow ( ) ; } catch ( Throwable t ) { new Bug ( t ) ; } return null ; }
void test7 ( ) throws Throwable { File file0 = new File ( "" ) ; File file1 = file0 . getAbsoluteFile ( ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file1 , file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getNumberDone ( ) { return done ; }
void test8 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { File file0 = new File ( "" ) ; File file1 = file0 . getCanonicalFile ( ) ; File file2 = file1 . getParentFile ( ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file2 , file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Object run ( ) { Subject subject = Subject . getSubject ( AccessController . getContext ( ) ) ; if ( subject ! = null ) { / / replace the event queue with one that has the Subject stored Toolkit . getDefaultToolkit ( ) . getSystemEventQueue ( ) . push ( new AccessControlContextEventQueue ( ) ) ; } / * * Font f = new Font ( "courier" , java . awt . Font . PLAIN , 24 ) ; * UIManager . put ( "Menu . font" , f ) ; UIManager . put ( "MenuItem . font" , f ) ; * / try { / / TODO : implement progress listeners and splash screen for real ClassLoader cl = this . getClass ( ) . getClassLoader ( ) ; URL url = cl . getResource ( "Images / Tree . png" ) ; ImageIcon ii = null ; if ( url ! = null ) { ii = new ImageIcon ( url ) ; } Splash splash = new Splash ( "Starting Corina" , ii ) ; ProgressMeter pm = new ProgressMeter ( ) ; pm . addProgressListener ( splash ) ; App . init ( pm ) ; / / monitor . close ( ) ; / / let's go . . . XCorina . showCorinaWindow ( ) ; } catch ( Throwable t ) { new Bug ( t ) ; } return null ; }
void test9 ( ) throws Throwable { File file0 = new File ( ( File ) null , "$8l ? J" ) ; UpdateFolder updateFolder0 = new UpdateFolder ( file0 , file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void copy ( Sample source , Sample target ) { target . data = source . data ; target . range = source . range ; target . count = source . count ; target . meta = source . meta ; target . incr = source . incr ; target . decr = source . decr ; target . elements = source . elements ; }
void test0 ( ) throws Throwable { NaturalSort . CINaturalComparator naturalSort_CINaturalComparator0 = new NaturalSort . CINaturalComparator ( ) ; int int0 = naturalSort_CINaturalComparator0 . compare ( ( Object ) "0u_" , ( Object ) "9Ux$TIv" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test1 ( ) throws Throwable { NaturalSort . NaturalComparator naturalSort_NaturalComparator0 = new NaturalSort . NaturalComparator ( ) ; int int0 = naturalSort_NaturalComparator0 . compare ( ( Object ) " [ 0M | ME$B " , ( Object ) " [ 0M | ME$B " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compare ( String a , String b ) { return strnatcmp0 ( a , b , false ) ; }
void test2 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "86rv4~R4l * X ; pr" , "9U\"@$ < f" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test3 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "NV . T > $80" , "NV . T > $80" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test4 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "9U\"@$ < f" , "86rv4~R4l * X ; pr" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test5 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "9Ux$TIv" , "0u_" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test6 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "0u_" , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test7 ( ) throws Throwable { int int0 = NaturalSort . compareIgnoreCase ( "" , "0u_" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareIgnoreCase ( String a , String b ) { return strnatcmp0 ( a , b , true ) ; }
void test0 ( ) throws Throwable { JLinedLabel jLinedLabel0 = new JLinedLabel ( "N^ ; & + { ^ML" ) ; jLinedLabel0 . updateUI ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" JLinedLabel ( String s ) { / / chop s into lines List text = chop ( s ) ; / / nested layout manager JPanel p = new JPanel ( ) ; p . setLayout ( new BoxLayout ( p , BoxLayout . Y_AXIS ) ) ; / / extract this , maybe ? - - it centers stuff setLayout ( new GridBagLayout ( ) ) ; add ( p , new GridBagConstraints ( 0 , 0 , 1 , 1 , 0 . 5 , 0 . 5 , GridBagConstraints . CENTER , GridBagConstraints . NONE , new Insets ( 0 , 0 , 0 , 0 ) , 0 , 0 ) ) ; / / set layout manager , and add lines for ( int i = 0 ; i < text . size ( ) ; i + + ) { JLabel label = new JLabel ( ( String ) text . get ( i ) ) ; label . setAlignmentX ( 0 . 5f ) ; label . setMaximumSize ( label . getMinimumSize ( ) ) ; / / ? lines . add ( label ) ; p . add ( label ) ; } }
void test1 ( ) throws Throwable { JLinedLabel jLinedLabel0 = new JLinedLabel ( "\ngV\n" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" JLinedLabel ( String s ) { / / chop s into lines List text = chop ( s ) ; / / nested layout manager JPanel p = new JPanel ( ) ; p . setLayout ( new BoxLayout ( p , BoxLayout . Y_AXIS ) ) ; / / extract this , maybe ? - - it centers stuff setLayout ( new GridBagLayout ( ) ) ; add ( p , new GridBagConstraints ( 0 , 0 , 1 , 1 , 0 . 5 , 0 . 5 , GridBagConstraints . CENTER , GridBagConstraints . NONE , new Insets ( 0 , 0 , 0 , 0 ) , 0 , 0 ) ) ; / / set layout manager , and add lines for ( int i = 0 ; i < text . size ( ) ; i + + ) { JLabel label = new JLabel ( ( String ) text . get ( i ) ) ; label . setAlignmentX ( 0 . 5f ) ; label . setMaximumSize ( label . getMinimumSize ( ) ) ; / / ? lines . add ( label ) ; p . add ( label ) ; } }
void test0 ( ) throws Throwable { Point point0 = new Point ( 1 , 1 ) ; Point point1 = new Point ( ) ; float float0 = Angle . angle ( point0 , point1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float angle ( Point a , Point b ) { float theta ; float dx = b . x - a . x ; float dy = b . y - a . y ; if ( dx = = 0 ) theta = ( float ) Math . PI * ( b . y < a . y ? 3 / 2f : 1 / 2f ) ; / / force floats ! else theta = ( float ) Math . atan ( dy / dx ) ; if ( b . x < a . x ) theta + = Math . PI ; return theta ; }
void test1 ( ) throws Throwable { Point point0 = new Point ( 0 , 0 ) ; float float0 = Angle . angle ( point0 , point0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float angle ( Point a , Point b ) { float theta ; float dx = b . x - a . x ; float dy = b . y - a . y ; if ( dx = = 0 ) theta = ( float ) Math . PI * ( b . y < a . y ? 3 / 2f : 1 / 2f ) ; / / force floats ! else theta = ( float ) Math . atan ( dy / dx ) ; if ( b . x < a . x ) theta + = Math . PI ; return theta ; }
void test2 ( ) throws Throwable { Point point0 = new Point ( 0 , 1376 ) ; Point point1 = new Point ( ) ; float float0 = Angle . angle ( point0 , point1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float angle ( Point a , Point b ) { float theta ; float dx = b . x - a . x ; float dy = b . y - a . y ; if ( dx = = 0 ) theta = ( float ) Math . PI * ( b . y < a . y ? 3 / 2f : 1 / 2f ) ; / / force floats ! else theta = ( float ) Math . atan ( dy / dx ) ; if ( b . x < a . x ) theta + = Math . PI ; return theta ; }
void test0 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Floating floating0 = new Floating ( sample0 ) ; String string0 = floating0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Floating floating0 = new Floating ( sample0 ) ; floating0 . apply ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Floating floating0 = new Floating ( sample0 ) ; floating0 . run ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Exponential exponential0 = new Exponential ( sample0 ) ; exponential0 . run ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getID ( ) { return 10 ; }
void test1 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Exponential exponential0 = new Exponential ( sample0 ) ; int int0 = exponential0 . getID ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getID ( ) { return 10 ; }
void test2 ( ) throws Throwable { Sample sample0 = new Sample ( ) ; Exponential exponential0 = new Exponential ( sample0 ) ; String string0 = exponential0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { SearchField searchField0 = new SearchField ( ( Browser ) null , ( Component ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void reset ( ) { UIDefaults uidefaults = UIManager . getDefaults ( ) ; CorinaLog . realErr . println ( "Clearing UIDefaults preferences" ) ; uidefaults . clear ( ) ; log . debug ( "UIDEFAULTS size : " + App . prefs . getUIDefaults ( ) . size ( ) ) ; uidefaults . putAll ( App . prefs . getUIDefaults ( ) ) ; / * Enumeration e = Prefs . UIDEFAULTS . keys ( ) ; while ( e . hasMoreElements ( ) ) { Object key = e . nextElement ( ) ; CorinaLog . realErr . println ( "putting " + key ) ; uidefaults . put ( key , Prefs . UIDEFAULTS . get ( key ) ) ; } * / Set keyset = App . prefs . getPrefs ( ) . keySet ( ) ; Iterator it = keyset . iterator ( ) ; / / must do this in two stages to avoid concurrent modification errors ArrayList keylist = new ArrayList ( keyset . size ( ) ) ; while ( it . hasNext ( ) ) { String key = it . next ( ) . toString ( ) ; if ( key . startsWith ( "uidefaults . " ) ) { CorinaLog . realErr . println ( "Found UIDefaults preference : " + key ) ; keylist . add ( key ) ; } } / / now remove the prefs it = keylist . iterator ( ) ; while ( it . hasNext ( ) ) { String key = ( String ) it . next ( ) ; CorinaLog . realErr . println ( "Removing UIDefaults preference : " + key ) ; App . prefs . removePref ( key ) ; } App . prefs . getPrefs ( ) . list ( System . out ) ; init ( uidefaults ) ; fireTableDataChanged ( ) ; SwingUtilities . invokeLater ( new Runnable ( ) { void run ( ) { Frame [ ] frames = Frame . getFrames ( ) ; if ( frames = = null ) return ; for ( int i = 0 ; i < frames . length ; i + + ) { SwingUtilities . updateComponentTreeUI ( frames [ i ] ) ; } } } ) ; }
void test1 ( ) throws Throwable { SearchField searchField0 = new SearchField ( ( Browser ) null , ( Component ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String [ ] getTextAsWords ( ) { return parseIntoWords ( getText ( ) . toLowerCase ( ) ) ; }
void test2 ( ) throws Throwable { SearchField searchField0 = new SearchField ( ( Browser ) null , ( Component ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" SearchField ( Browser browser , Component eventTarget ) { super ( "" , 7 ) ; / / prevent it from stretching setMaximumSize ( getPreferredSize ( ) ) ; / / call browser . dosearch ( ) when something is typed Browser glue = browser ; getDocument ( ) . addDocumentListener ( new DocumentListener ( ) { void changedUpdate ( DocumentEvent e ) { typed ( ) ; } void insertUpdate ( DocumentEvent e ) { try { / / if it's something typed at the end , if ( e . getOffset ( ) = = e . getDocument ( ) . getLength ( ) - 1 ) { char c = e . getDocument ( ) . getText ( e . getOffset ( ) , 1 ) . charAt ( 0 ) ; / / - - if it's a space , do nothing but BUG : it should update the status bar ( "focused" ) if ( c = = ' ' ) return ; / / - - if it's a letter , restrict search to only things which are now visible glue . doSearchRestrict ( ) ; } else { / / otherwise , just run the whole search typed ( ) ; } } catch ( javax . swing . text . BadLocationException ble ) { / / ignore - - can't happen } } void removeUpdate ( DocumentEvent e ) { typed ( ) ; } void typed ( ) { glue . doSearch ( ) ; } } ) ; / / pass arrow - key , etc . , events on to eventTarget Component table = eventTarget ; addKeyListener ( new KeyAdapter ( ) { void keyPressed ( KeyEvent e ) { int code = e . getKeyCode ( ) ; if ( code = = KeyEvent . VK_DOWN | | code = = KeyEvent . VK_UP | | code = = KeyEvent . VK_PAGE_UP | | code = = KeyEvent . VK_PAGE_DOWN | | code = = KeyEvent . VK_ENTER ) { table . requestFocus ( ) ; / / focus on the table , and . . . table . dispatchEvent ( e ) ; / / . . . pass arrow - key event to it . } else if ( code = = KeyEvent . VK_ESCAPE ) { / / esc clears field . very handy . reset ( ) ; / / } else if ( e . getModifiers ( ) ! = 0 ) { / / table . dispatchEvent ( e ) ; / / for control - < number > on win32 , especially / / e . consume ( ) ; / / but don't add to text field ! } } / / ignore keyReleased , keyPressed events } ) ; }
void test3 ( ) throws Throwable { SearchField searchField0 = new SearchField ( ( Browser ) null , ( Component ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isEmpty ( ) { return getText ( ) . length ( ) = = 0 ; }
void test0 ( ) throws Throwable { File file0 = new File ( "" , "" ) ; FolderPopup folderPopup0 = new FolderPopup ( file0 ) ; File file1 = folderPopup0 . getFolder ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component getParent ( ) { return parent ; }
void test1 ( ) throws Throwable { File file0 = new File ( "" , "" ) ; FolderPopup folderPopup0 = new FolderPopup ( file0 ) ; File file1 = folderPopup0 . getTopLevel ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" File getTopLevel ( ) { / / note : it's immutable , so this is safe . return toplevel ; }
void test3 ( ) throws Throwable { File file0 = new File ( "" , "" ) ; FolderPopup folderPopup0 = new FolderPopup ( file0 ) ; folderPopup0 . setFolder ( file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setFolder ( String filename ) { this . folder = new File ( filename ) ; }
void test1 ( ) throws Throwable { File file0 = new File ( "size" , "size" ) ; Row row0 = new Row ( file0 , ( Browser ) null ) ; String string0 = row0 . getPath ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPath ( ) { / / " return file . getPath ( ) ; }
void test2 ( ) throws Throwable { File file0 = new File ( "size" , "size" ) ; Row row0 = new Row ( file0 , ( Browser ) null ) ; boolean boolean0 = row0 . isDirectory ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isDirectory ( ) { / / " return file . isDirectory ( ) ; }
void test4 ( ) throws Throwable { Row row0 = new Row ( ( File ) null , ( Browser ) null ) ; Element element0 = row0 . getElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Element getElement ( String filename ) { / / or null , if it's not an element - - FIXME ? Object o = items . get ( filename ) ; if ( o instanceof Element ) return ( Element ) o ; else return null ; }
void test5 ( ) throws Throwable { File file0 = new File ( "size" , "size" ) ; Row row0 = new Row ( file0 , ( Browser ) null ) ; ImageIcon imageIcon0 = ( ImageIcon ) row0 . getIcon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Icon getIcon ( String name ) { java . net . URL url = cl . getResource ( "Images / " + name ) ; if ( url ! = null ) return new ImageIcon ( url ) ; else return null ; }
void test6 ( ) throws Throwable { File file0 = new File ( "" ) ; File file1 = new File ( file0 , "" ) ; Row row0 = new Row ( file1 , ( Browser ) null ) ; Icon icon0 = row0 . getIcon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Icon getIcon ( String name ) { java . net . URL url = cl . getResource ( "Images / " + name ) ; if ( url ! = null ) return new ImageIcon ( url ) ; else return null ; }
void test7 ( ) throws Throwable { File file0 = new File ( "size" , "size" ) ; Row row0 = new Row ( file0 , ( Browser ) null ) ; FileLength fileLength0 = ( FileLength ) row0 . getField ( "size" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Field getField ( String field ) { Iterator i = getFields ( ) ; while ( i . hasNext ( ) ) { Field f = ( Field ) i . next ( ) ; if ( f . variable . equals ( field ) ) return f ; } throw new NullPointerException ( ) ; / / ? ? ? }
void test9 ( ) throws Throwable { File file0 = new File ( "" ) ; Row row0 = new Row ( file0 , ( Browser ) null ) ; String string0 = ( String ) row0 . getField ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Field getField ( String field ) { Iterator i = getFields ( ) ; while ( i . hasNext ( ) ) { Field f = ( Field ) i . next ( ) ; if ( f . variable . equals ( field ) ) return f ; } throw new NullPointerException ( ) ; / / ? ? ? }
void test0 ( ) throws Throwable { Vector < JLabel > vector0 = new Vector < JLabel > ( ) ; JTable jTable0 = new JTable ( vector0 , vector0 ) ; SortedHeaderRenderer sortedHeaderRenderer0 = new SortedHeaderRenderer ( jTable0 , "m + U = g" ) ; Component component0 = sortedHeaderRenderer0 . getTableCellRendererComponent ( jTable0 , ( Object ) "m + U = g" , true , true , ( - 12 ) , ( - 12 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component getTableCellRendererComponent ( JTable table , Object color , boolean isSelected , boolean hasFocus , int row , int column ) { log . trace ( "getTableCellRendererComponent " + color + " " + row + " " + column ) ; Color newColor = ( Color ) color ; setBackground ( newColor ) ; if ( isBordered ) { if ( isSelected ) { if ( selectedBorder = = null ) { selectedBorder = BorderFactory . createMatteBorder ( 2 , 5 , 2 , 5 , table . getSelectionBackground ( ) ) ; } setBorder ( selectedBorder ) ; } else { if ( unselectedBorder = = null ) { unselectedBorder = BorderFactory . createMatteBorder ( 2 , 5 , 2 , 5 , table . getBackground ( ) ) ; } setBorder ( unselectedBorder ) ; } } setToolTipText ( "RGB value : " + newColor . getRed ( ) + " , " + newColor . getGreen ( ) + " , " + newColor . getBlue ( ) ) ; return this ; }
void test4 ( ) throws Throwable { JTable jTable0 = new JTable ( ) ; SortedHeaderRenderer sortedHeaderRenderer0 = new SortedHeaderRenderer ( jTable0 , "UBM / 'EBSzW5 = " ) ; Component component0 = sortedHeaderRenderer0 . getTableCellRendererComponent ( jTable0 , ( Object ) false , false , false , ( - 1756 ) , ( - 1756 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Component getTableCellRendererComponent ( JTable table , Object color , boolean isSelected , boolean hasFocus , int row , int column ) { log . trace ( "getTableCellRendererComponent " + color + " " + row + " " + column ) ; Color newColor = ( Color ) color ; setBackground ( newColor ) ; if ( isBordered ) { if ( isSelected ) { if ( selectedBorder = = null ) { selectedBorder = BorderFactory . createMatteBorder ( 2 , 5 , 2 , 5 , table . getSelectionBackground ( ) ) ; } setBorder ( selectedBorder ) ; } else { if ( unselectedBorder = = null ) { unselectedBorder = BorderFactory . createMatteBorder ( 2 , 5 , 2 , 5 , table . getBackground ( ) ) ; } setBorder ( unselectedBorder ) ; } } setToolTipText ( "RGB value : " + newColor . getRed ( ) + " , " + newColor . getGreen ( ) + " , " + newColor . getBlue ( ) ) ; return this ; }
void test1 ( ) throws Throwable { Date date0 = new Date ( ) ; RelativeDate relativeDate0 = new RelativeDate ( date0 ) ; String string0 = relativeDate0 . toString ( ) ; String string1 = relativeDate0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { Date date0 = new Date ( 1737L ) ; RelativeDate relativeDate0 = new RelativeDate ( date0 ) ; String string0 = relativeDate0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { File file0 = new File ( "1 . 0 KB" , "1 . 0 KB" ) ; FileLength fileLength0 = new FileLength ( file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test1 ( ) throws Throwable { File file0 = new File ( "" , "" ) ; FileLength fileLength0 = new FileLength ( file0 ) ; FileLength fileLength1 = new FileLength ( 1358L ) ; int int0 = fileLength0 . compareTo ( ( Object ) fileLength1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test2 ( ) throws Throwable { FileLength fileLength0 = new FileLength ( ( - 11L ) ) ; int int0 = fileLength0 . compareTo ( ( Object ) fileLength0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test3 ( ) throws Throwable { FileLength fileLength0 = new FileLength ( ( - 11L ) ) ; FileLength fileLength1 = new FileLength ( ( - 801L ) ) ; int int0 = fileLength0 . compareTo ( ( Object ) fileLength1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int compareTo ( Object o ) { return filename . compareTo ( ( ( Element ) o ) . filename ) ; }
void test4 ( ) throws Throwable { FileLength fileLength0 = new FileLength ( 1047L ) ; String string0 = fileLength0 . toString ( ) ; String string1 = fileLength0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test5 ( ) throws Throwable { FileLength fileLength0 = new FileLength ( ( - 11L ) ) ; String string0 = fileLength0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test6 ( ) throws Throwable { FileLength fileLength0 = new FileLength ( 6L ) ; String string0 = fileLength0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Class < ? > class0 = UndoableEditEvent . class ; Bayesian bayesian0 = new Bayesian ( class0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Bayesian ( Class algorithm ) throws IOException { this . algorithm = algorithm . getName ( ) ; load ( ) ; }
void test1 ( ) throws Throwable { Trend trend0 = new Trend ( ) ; float float0 = Bayesian . getSignificance ( ( Cross ) trend0 , ( - 206 . 20844F ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getSignificance ( Cross cross , float score ) { try { / / if distribution for | cross | isn't loaded , load it if ( ! distros . containsKey ( cross . getClass ( ) . getName ( ) ) ) distros . put ( cross . getClass ( ) . getName ( ) , new Bayesian ( cross . getClass ( ) ) ) ; / / look it up ( it's guaranteed to be there now ) Bayesian b = ( Bayesian ) distros . get ( cross . getClass ( ) . getName ( ) ) ; / / look up the significance of | score | for | cross | : it's the / / confidence of the LARGEST value which is SMALLER than my value int N = b . intervals . length ; for ( int i = 1 ; i < N ; i + + ) if ( b . scores [ i ] > score ) return b . intervals [ i - 1 ] ; / / it's bigger than anything we've got : take the last one return b . intervals [ N - 1 ] ; } catch ( IOException ioe ) { / / bad bad bad ! - - actually , since this is part of my jar , / / it's a bug , pure and simple . / / ( fault , missed , blame , responsibility ( 6 ) System . out . println ( "ioe in getSignificance ( ) - - " + ioe ) ; return 0f ; } catch ( NullPointerException npe ) { / / HACK ! load ( ) fails with this if there's no blah . intervals file , / / so we end up here . / / no bayesian data - - what to do ? return 0 . 0 ; / / that will get rendered in the table as a blank cell , / / which is exactly what i want . return 0f ; } }
void test2 ( ) throws Throwable { boolean boolean0 = Lock . acquire ( "9_ = ; ~$ ] tCp > N ) CSk { " , ( - 4 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean acquire ( String filename ) { try { File f = new File ( filename + SUFFIX ) ; return f . createNewFile ( ) ; } catch ( IOException ioe ) { return false ; } }
void test1 ( ) throws Throwable { CountryPopup countryPopup0 = new CountryPopup ( ( JDialog ) null , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" CountryPopup ( JDialog parent ) { / / display all country names used by sites String items [ ] = getCountryNames ( ) ; items = sandwichWithNoneAndOther ( items ) ; ComboBoxModel model = new DefaultComboBoxModel ( items ) ; setModel ( model ) ; / / don't use scrollbars unless i really need them . setMaximumRowCount ( 50 ) ; / / store parent this . parent = parent ; / / add "other . . . " handler addOtherHandler ( ) ; }
void test2 ( ) throws Throwable { CountryPopup countryPopup0 = new CountryPopup ( ( JDialog ) null , "nag ) N7Q1p ? ^" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test3 ( ) throws Throwable { CountryPopup countryPopup0 = new CountryPopup ( ( JDialog ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test0 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setName ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test1 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setComments ( "" ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test2 ( ) throws Throwable { Site site0 = new Site ( ) ; String string0 = site0 . getCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCode ( String s ) throws UnknownSpeciesException { Enumeration e = species . keys ( ) ; while ( e . hasMoreElements ( ) ) { String maybe = ( String ) e . nextElement ( ) ; if ( stringAlmostEquals ( ( String ) species . get ( maybe ) , s ) ) return maybe ; } throw new UnknownSpeciesException ( ) ; }
void test3 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setTypeString ( "hS@lS'0_" ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypesAsString ( ) { / / future : types will be . until then , just call getTypes ( ) . boolean types [ ] = getTypes ( ) ; StringBuffer buf = new StringBuffer ( ) ; if ( types [ 0 ] ) buf . append ( "Ancient" ) ; / / FIXME : i18n ! if ( types [ 1 ] ) { if ( buf . length ( ) > 0 ) buf . append ( " , " ) ; buf . append ( "Medieval" ) ; } if ( types [ 2 ] ) { if ( buf . length ( ) > 0 ) buf . append ( " , " ) ; buf . append ( "Forests" ) ; } if ( types [ 3 ] ) { if ( buf . length ( ) > 0 ) buf . append ( " , " ) ; buf . append ( "Unknown" ) ; } return buf . toString ( ) ; }
void test4 ( ) throws Throwable { Site site0 = new Site ( ) ; String string0 = site0 . getTypeString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test5 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setFolder ( " . " ) ; Site site1 = new Site ( ) ; boolean boolean0 = site0 . equals ( ( Object ) site1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test7 ( ) throws Throwable { Site site0 = new Site ( ) ; String string0 = site0 . toXML ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test9 ( ) throws Throwable { Site site0 = new Site ( ) ; int int0 = site0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { return start . hashCode ( ) + 2 * end . hashCode ( ) ; }
void test10 ( ) throws Throwable { Site site0 = new Site ( ) ; String string0 = site0 . getSpecies ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSpecies ( ) { return species ; }
void test11 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setCountry ( "hS@lS'0_" ) ; Site site1 = new Site ( ) ; Site site2 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test12 ( ) throws Throwable { Site site0 = new Site ( ) ; Integer integer0 = new Integer ( 147 ) ; site0 . setAltitude ( integer0 ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test13 ( ) throws Throwable { Site site0 = new Site ( ) ; Location location0 = new Location ( ) ; site0 . setLocation ( location0 ) ; String string0 = site0 . toXML ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test14 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 3 ] = true ; site0 . setTypes ( booleanArray0 ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test15 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 1 ] = true ; site0 . setTypes ( booleanArray0 ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test16 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 0 ] = true ; booleanArray0 [ 1 ] = true ; site0 . setTypes ( booleanArray0 ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test17 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 0 ] = true ; booleanArray0 [ 2 ] = true ; site0 . setTypes ( booleanArray0 ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test18 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 3 ] = true ; booleanArray0 [ 2 ] = true ; site0 . setTypes ( booleanArray0 ) ; String string0 = site0 . getTypesAsString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isForest ( ) { return ( type . indexOf ( "" + TYPE_FOREST ) ! = - 1 ) ; }
void test20 ( ) throws Throwable { Site site0 = new Site ( ) ; String string0 = site0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test21 ( ) throws Throwable { Site site0 = new Site ( ) ; Location location0 = new Location ( ) ; site0 . setLocation ( location0 ) ; String string0 = site0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test22 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 8 ] ; booleanArray0 [ 2 ] = true ; site0 . setTypes ( booleanArray0 ) ; Color color0 = site0 . getSiteColor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test23 ( ) throws Throwable { Site site0 = new Site ( ) ; Color color0 = site0 . getSiteColor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test24 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 7 ] ; booleanArray0 [ 1 ] = true ; site0 . setTypes ( booleanArray0 ) ; Color color0 = site0 . getSiteColor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test25 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 8 ] ; booleanArray0 [ 0 ] = true ; site0 . setTypes ( booleanArray0 ) ; Color color0 = site0 . getSiteColor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypeString ( ) { return type ; }
void test26 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean boolean0 = site0 . isForest ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isForest ( ) { return ( type . indexOf ( "" + TYPE_FOREST ) ! = - 1 ) ; }
void test27 ( ) throws Throwable { Site site0 = new Site ( ) ; boolean [ ] booleanArray0 = new boolean [ 8 ] ; booleanArray0 [ 2 ] = true ; site0 . setTypes ( booleanArray0 ) ; boolean boolean0 = site0 . isForest ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test28 ( ) throws Throwable { Site site0 = new Site ( ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test29 ( ) throws Throwable { Site site0 = new Site ( ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test30 ( ) throws Throwable { Site site0 = new Site ( ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test31 ( ) throws Throwable { Site site0 = new Site ( ) ; Location location0 = new Location ( ) ; site0 . setLocation ( location0 ) ; Site site1 = new Site ( ) ; Site site2 = ( Site ) site1 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test32 ( ) throws Throwable { Site site0 = new Site ( ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test33 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setTypeString ( "V\u0003AM - K'N1 yXy" ) ; Site site1 = new Site ( ) ; Site site2 = ( Site ) site1 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object o ) { if ( o instanceof Range ) { Range r = ( Range ) o ; return start . equals ( r . start ) & & end . equals ( r . end ) ; } else { / / not even a Range , can't be equal return false ; } }
void test34 ( ) throws Throwable { Site site0 = new Site ( ) ; Location location0 = new Location ( ) ; site0 . setLocation ( location0 ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toXML ( ) { / / can't save indexes or other non - samples , yet if ( ! ( graph instanceof Sample ) ) return " < ! - - not a sample ( " + graph + " ) - - > " ; / / what to do ? / / filename String filename = ( String ) ( ( Sample ) graph ) . meta . get ( "filename" ) ; / / crunch together an XML tag return " < graph scale = \"" + scale + "\" " + "xoffset = \"" + xoffset + "\" " + "yoffset = \"" + yoffset + "\" > " + filename + " < / graph > " ; }
void test35 ( ) throws Throwable { Site site0 = new Site ( ) ; site0 . setFolder ( " . " ) ; Site site1 = ( Site ) site0 . clone ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCode ( String s ) throws UnknownSpeciesException { Enumeration e = species . keys ( ) ; while ( e . hasMoreElements ( ) ) { String maybe = ( String ) e . nextElement ( ) ; if ( stringAlmostEquals ( ( String ) species . get ( maybe ) , s ) ) return maybe ; } throw new UnknownSpeciesException ( ) ; }
void test2 ( ) throws Throwable { SiteDB siteDB0 = SiteDB . getSiteDB ( ) ; SitePrinter sitePrinter0 = ( SitePrinter ) siteDB0 . print ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int print ( Graphics g , PageFormat format , int pageNr ) throws PrinterException { / / a map is always exactly one page if ( pageNr > 0 ) return Printable . NO_SUCH_PAGE ; / / create my own view : zoom View detailedView = ( View ) view . clone ( ) ; detailedView . setZoom ( detailedView . getZoom ( ) * detail ) ; / / then set the size - - scale up by | detail | to get | DPI | . / / ( if you want a square map , say : h = w = Math . min ( h , w ) ; ) int w = ( int ) format . getImageableWidth ( ) ; int h = ( int ) format . getImageableHeight ( ) ; detailedView . size = new Dimension ( ( int ) ( w * detail ) , ( int ) ( h * detail ) ) ; / / create my own projection Projection r = Projection . makeProjection ( detailedView ) ; / / use a small brush Graphics2D g2 = ( Graphics2D ) g ; g2 . setStroke ( new BasicStroke ( 0 . 5f ) ) ; / / offset so it's entirely on the page , and scale down to / / make it look detailed but normal - sized float dx = ( float ) format . getImageableX ( ) ; float dy = ( float ) format . getImageableY ( ) ; g2 . translate ( dx , dy ) ; g2 . scale ( 1 / detail , 1 / detail ) ; / / print the layers to it printAllLayers ( g2 , r ) ; return Printable . PAGE_EXISTS ; }
void test0 ( ) throws Throwable { Location location0 = new Location ( ) ; boolean boolean0 = location0 . isNear ( location0 , ( - 1161 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLongitudeAsDegrees ( ) { return longitude / 3600f ; }
void test1 ( ) throws Throwable { Location location0 = new Location ( ) ; Location . copy ( location0 , location0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getLongitudeAsSeconds ( ) { return longitude ; }
void test2 ( ) throws Throwable { Location location0 = new Location ( ) ; int int0 = location0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { return start . hashCode ( ) + 2 * end . hashCode ( ) ; }
void test4 ( ) throws Throwable { Location location0 = new Location ( ) ; Location location1 = ( Location ) location0 . clone ( ) ; boolean boolean0 = location0 . equals ( ( Object ) location1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test5 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsDegrees ( 710 . 79663F ) ; String string0 = location0 . getEasyString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test6 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsDegrees ( ( - 1782 . 8914F ) ) ; Location location1 = ( Location ) location0 . clone ( ) ; Location location2 = new Location ( "90\u00B00'S 0\u00B09'W" ) ; boolean boolean0 = location2 . equals ( ( Object ) location1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean valid ( ) { return ( ! ( latitude = = 0 & & longitude = = 0 ) ) ; }
void test7 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsDegrees ( ( - 6 . 2398252F ) ) ; boolean boolean0 = location0 . valid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getLatitudeAsString ( ) { / / extract degrees and minutes int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; / / hemisphere String latHemi = ( latitude > 0 ? NORTH : SOUTH ) ; return latDegs + DEGREE_SIGN + latMins + "'" + latHemi ; }
void test8 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLongitudeAsDegrees ( ( float ) 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test9 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLongitudeAsDegrees ( ( - 1233 . 2363F ) ) ; String string0 = location0 . toISO6709 ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean valid ( ) { return ( ! ( latitude = = 0 & & longitude = = 0 ) ) ; }
void test10 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsSeconds ( ( - 1196 ) ) ; String string0 = location0 . toISO6709 ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test11 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsSeconds ( ( - 648000 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test12 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsSeconds ( 647998 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test13 ( ) throws Throwable { Location location0 = new Location ( " - 001956 + 0000000 / " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test15 ( ) throws Throwable { Location location0 = new Location ( "90\u00B00'S 0\u00B09'W" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test17 ( ) throws Throwable { Location location0 = new Location ( " + 000000 - 1531411 / " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test18 ( ) throws Throwable { Location location0 = new Location ( ) ; String string0 = location0 . getEasyString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test19 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLongitudeAsDegrees ( 180 . 0F ) ; String string0 = location0 . getEasyString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getLongitudeAsSeconds ( ) { return longitude ; }
void test20 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLatitudeAsDegrees ( 710 . 79663F ) ; String string0 = location0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLatitudeAsDegrees ( ) { return latitude / 3600f ; }
void test21 ( ) throws Throwable { Location location0 = new Location ( ) ; Location location1 = new Location ( " - 0\u00B00'S 180\u00B00'E" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLongitudeAsDegrees ( ) { return longitude / 3600f ; }
void test22 ( ) throws Throwable { Location location0 = new Location ( ) ; String string0 = location0 . toISO6709 ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test23 ( ) throws Throwable { Location location0 = new Location ( ) ; boolean boolean0 = location0 . equals ( ( Object ) "0\u00B00'W" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test24 ( ) throws Throwable { Location location0 = new Location ( ) ; Location location1 = ( Location ) location0 . clone ( ) ; location0 . setLatitudeAsDegrees ( 710 . 79663F ) ; boolean boolean0 = location0 . equals ( ( Object ) location1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toISO6709 ( ) { StringBuffer buf = new StringBuffer ( ) ; DecimalFormat twoDigits = new DecimalFormat ( "00" ) ; DecimalFormat threeDigits = new DecimalFormat ( "000" ) ; / / latitude buf . append ( latitude < 0 ? " - " : " + " ) ; int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int latSecs = Math . abs ( getLatitudeAsSeconds ( ) ) - latDegs * 3600 - latMins * 60 ; buf . append ( twoDigits . format ( latDegs ) ) ; buf . append ( twoDigits . format ( latMins ) ) ; buf . append ( twoDigits . format ( latSecs ) ) ; / / longitude buf . append ( longitude < 0 ? " - " : " + " ) ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; int longSecs = Math . abs ( getLongitudeAsSeconds ( ) ) - longDegs * 3600 - longMins * 60 ; buf . append ( threeDigits . format ( longDegs ) ) ; buf . append ( twoDigits . format ( longMins ) ) ; buf . append ( twoDigits . format ( longSecs ) ) ; / / altitude / / - - if i want altitude later , add it here , as " + AAA . . . " / / terminator buf . append ( " / " ) ; return buf . toString ( ) ; }
void test25 ( ) throws Throwable { Location location0 = new Location ( ) ; boolean boolean0 = location0 . isNear ( ( Location ) null , ( - 648000 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return filename ; }
void test26 ( ) throws Throwable { Location location0 = new Location ( ) ; boolean boolean0 = location0 . isNear ( location0 , 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getLongitudeAsDegrees ( ) { return longitude / 3600f ; }
void test27 ( ) throws Throwable { Location location0 = new Location ( ) ; Location location1 = Location . midpoint ( location0 , location0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean valid ( ) { return ( ! ( latitude = = 0 & & longitude = = 0 ) ) ; }
void test28 ( ) throws Throwable { Location location0 = new Location ( ) ; boolean boolean0 = location0 . valid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean valid ( ) { return ( ! ( latitude = = 0 & & longitude = = 0 ) ) ; }
void test29 ( ) throws Throwable { Location location0 = new Location ( ) ; location0 . setLongitudeAsDegrees ( ( - 1233 . 2363F ) ) ; boolean boolean0 = location0 . valid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getEasyString ( ) { / / extract degrees and minutes , latitude and longitude int latDegs = Math . abs ( getLatitudeAsSeconds ( ) ) / 3600 ; int latMins = Math . abs ( getLatitudeAsSeconds ( ) ) / 60 - latDegs * 60 ; int longDegs = Math . abs ( getLongitudeAsSeconds ( ) ) / 3600 ; int longMins = Math . abs ( getLongitudeAsSeconds ( ) ) / 60 - longDegs * 60 ; / / hemispheres String latHemi = ( latitude > 0 ? NORTH : SOUTH ) ; String longHemi = ( longitude > 0 ? EAST : WEST ) ; / / assemble it into a string return latDegs + " , " + latMins + " , " + latHemi + " , " + longDegs + " , " + longMins + " , " + longHemi ; }
void test0 ( ) throws Throwable { String string0 = Country . badCountry ( "Jordan" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String badCountry ( String code ) { return " < unknown " + code + " > " ; }
void test2 ( ) throws Throwable { String string0 = Country . getName ( "JO" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( String code ) throws UnknownSpeciesException { String name = ( String ) species . get ( code ) ; if ( name ! = null ) return name ; else throw new UnknownSpeciesException ( ) ; }
void test4 ( ) throws Throwable { String string0 = Country . getCode ( "Jordan" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getCode ( String s ) throws UnknownSpeciesException { Enumeration e = species . keys ( ) ; while ( e . hasMoreElements ( ) ) { String maybe = ( String ) e . nextElement ( ) ; if ( stringAlmostEquals ( ( String ) species . get ( maybe ) , s ) ) return maybe ; } throw new UnknownSpeciesException ( ) ; }
void test5 ( ) throws Throwable { String [ ] stringArray0 = Country . getAllNames ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String [ ] getAllNames ( ) { String result [ ] = new String [ n ] ; for ( int i = 0 ; i < n ; i + + ) result [ i ] = countries [ i ] . name ; return result ; }
void test6 ( ) throws Throwable { String string0 = Country . badCode ( " < unknown Jordan > " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String badCode ( String country ) { if ( ! ( country . startsWith ( " < unknown " ) ) ) { return " < unknown '" + country + "' > " ; } return country . substring ( 9 , country . length ( ) - 2 ) ; }
void test7 ( ) throws Throwable { String string0 = Country . badCode ( "JO" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String badCode ( String country ) { if ( ! ( country . startsWith ( " < unknown " ) ) ) { return " < unknown '" + country + "' > " ; } return country . substring ( 9 , country . length ( ) - 2 ) ; }
