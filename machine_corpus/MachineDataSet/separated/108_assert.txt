assertEquals ( 0 , linkedList1 . size ( ) )
assertEquals ( 0 , linkedList0 . size ( ) )
assertEquals ( " [ ] " , linkedList0 . toString ( ) )
assertEquals ( 0 , linkedList0 . size ( ) )
assertEquals ( "Session" , class0 . getSimpleName ( ) )
assertEquals ( true , linkedList0 . isEmpty ( ) )
assertEquals ( " [ ] " , linkedList0 . toString ( ) )
assertNotNull ( hookFactory0 )
assertNotNull ( portletContextImpl0 )
assertNull ( enumeration0 )
assertNull ( inputStream0 )
assertNull ( enumeration0 )
assertNull ( enumeration0 )
assertNotNull ( portletContextImpl0 )
assertEquals ( "Liferay Portal Community Edition / 6 . 2 . 0" , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNull ( set0 )
assertNull ( mockServletContext1 . getServerInfo ( ) )
assertNull ( portlet0 )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( string0 )
assertNull ( portletRequestDispatcherImpl0 )
assertNull ( portletRequestDispatcherImpl0 )
assertNull ( uRL0 )
assertEquals ( "Liferay Portal Community Edition / 6 . 2 . 0" , portletContextImpl0 . getServerInfo ( ) )
assertEquals ( 0 , portletContextImpl0 . getMinorVersion ( ) )
assertEquals ( "Liferay Portal Community Edition / 6 . 2 . 0" , portletContextImpl0 . getServerInfo ( ) )
assertEquals ( "Liferay Portal Community Edition / 6 . 2 . 0" , portletContextImpl0 . getServerInfo ( ) )
assertNull ( string0 )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , portalPreferencesImpl1 . isSignedIn ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . size ( ) )
assertEquals ( true , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . size ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( false , portalPreferencesImpl0 . isSignedIn ( ) )
assertEquals ( true , enumeration0 . hasMoreElements ( ) )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( "~z" , string0 )
assertFalse ( stringArray1 . equals ( stringArray0 ) )
assertEquals ( true , boolean0 )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( actionResponseFactory0 )
assertNotNull ( resourceResponseFactory0 )
assertEquals ( "EVENT_PHASE" , string0 )
assertEquals ( "EVENT_PHASE" , eventResponseImpl0 . getLifecycle ( ) )
assertNotNull ( publicRenderParametersPool0 )
assertNull ( locale1 )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( "javax . portlet . short - title" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , cacheControlImpl0 . useCachedContent ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( renderResponseImpl0 . getContentType ( ) )
assertNull ( string0 )
assertEquals ( 1694L , portletPreferencesImpl0 . getOwnerId ( ) )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( qName0 )
assertNull ( qName0 )
assertNull ( qName0 )
assertNull ( qName0 )
assertNull ( qName0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "RENDER_PHASE" , string0 )
assertNull ( string0 )
assertEquals ( 0L , renderResponseImpl0 . getCompanyId ( ) )
assertEquals ( "" , renderResponseImpl0 . getResourceName ( ) )
assertEquals ( 0L , renderResponseImpl0 . getPlid ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , preference1 . isReadOnly ( ) )
assertEquals ( false , boolean0 )
assertEquals ( " { name = J < > WM5F / Vm = A9 * EY , readOnly = false , values = [ J < > WM5F / Vm = A9 * EY ] } " , string0 )
assertEquals ( " { name =  = pnZC , readOnly = false , values = [ null , null , null , null , null , null , null , null ] } " , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , portletContextBag0 . getServletContextName ( ) )
assertEquals ( "" , portletContextBag0 . getServletContextName ( ) )
assertNotNull ( eventImpl1 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "o8UnC$ . ~O = ] ( " , string0 )
assertNotNull ( routeImpl0 )
assertNotNull ( routeImpl0 )
assertEquals ( true , enumeration0 . hasMoreElements ( ) )
assertEquals ( true , enumeration0 . hasMoreElements ( ) )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "Liferay Portal Community Edition 6 . 2 . 0 CE ( Newton / Build 6200 / June 1 , 2012 ) " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , invokerPortletResponse0 . getTitle ( ) )
assertEquals ( "" , string0 )
assertEquals ( 1L , invokerPortletResponse0 . getTime ( ) )
assertEquals ( ( - 682L ) , long0 )
assertEquals ( ( - 682L ) , invokerPortletResponse0 . getTime ( ) )
assertNull ( serializable0 )
assertSame ( qName0 , qName1 )
assertNull ( string0 )
assertEquals ( 0L , eventResponseImpl0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( uRLEncoder0 )
assertNull ( portletRequestImpl0 )
assertEquals ( 0L , long0 )
assertNull ( httpServletResponse0 )
assertEquals ( false , resourceResponseImpl1 . isCalledGetWriter ( ) )
assertEquals ( false , actionResponseImpl0 . isCalledSetRenderParameter ( ) )
assertEquals ( "ACTION_PHASE" , actionResponseImpl0 . getLifecycle ( ) )
assertEquals ( 0L , actionResponseImpl0 . getPlid ( ) )
assertEquals ( 0L , eventResponseImpl0 . getCompanyId ( ) )
assertEquals ( 0L , renderResponseImpl0 . getCompanyId ( ) )
assertNull ( elementImpl0 . getNodeValue ( ) )
assertEquals ( "##" , string0 )
assertEquals ( " / " , string0 )
assertNull ( portlet0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertNull ( eventResponseImpl0 . getRedirectLocation ( ) )
assertEquals ( "" , eventResponseImpl0 . getDefaultNamespace ( ) )
assertEquals ( 8L , renderResponseImpl0 . getPlid ( ) )
assertEquals ( 0L , actionResponseImpl0 . getPlid ( ) )
assertNull ( eventResponseImpl0 . getRedirectLocation ( ) )
assertEquals ( "RENDER_PHASE" , renderResponseImpl0 . getLifecycle ( ) )
assertNull ( string0 )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "RESOURCE_PHASE" , resourceRequestImpl0 . getLifecycle ( ) )
assertEquals ( "" , portletFilterImpl0 . getFilterName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( true , cacheControlImpl0 . isPublicScope ( ) )
assertEquals ( false , cacheControlImpl0 . isPublicScope ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , cacheControlImpl0 . isPublicScope ( ) )
assertEquals ( true , cacheControlImpl0 . useCachedContent ( ) )
assertNotNull ( defaultControlPanelEntry0 )
assertNotNull ( renderParametersPool0 )
assertNotNull ( resourceRequestFactory0 )
assertEquals ( false , portletServletSession0 . isNew ( ) )
assertNull ( resourceRequestWrapper0 . getRemoteUser ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , portletPreferencesThreadLocal0 . isStrict ( ) )
assertNull ( string0 )
assertEquals ( 0L , mockSession0 . getLastAccessedTime ( ) )
assertEquals ( 0L , mockSession0 . getCreationTime ( ) )
assertNotNull ( userInfoFactory0 )
assertEquals ( true , linkedHashMap0 . isEmpty ( ) )
assertNull ( linkedHashMap0 )
assertEquals ( false , boolean0 )
assertEquals ( "ry% O8KkFN" , string0 )
assertNotSame ( stringArray0 , stringArray1 )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( false , portalPreferencesImpl1 . isSignedIn ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertNull ( mockSession1 . getId ( ) )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( portletContext0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , mockSession0 . getLastAccessedTime ( ) )
assertEquals ( false , portletSessionImpl0 . isNew ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( enumeration0 )
assertEquals ( 0L , portletSessionImpl0 . getCreationTime ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( portletSessionImpl0 . getId ( ) )
assertNull ( portletSessionImpl0 . getId ( ) )
assertNull ( portletSessionImpl0 . getId ( ) )
assertEquals ( false , portletSessionImpl0 . isNew ( ) )
assertEquals ( 0 , portletSessionImpl0 . getMaxInactiveInterval ( ) )
assertNotNull ( eventResponseFactory0 )
assertNotNull ( renderResponseFactory0 )
assertNotNull ( eventRequestFactory0 )
assertEquals ( 0L , actionResponseImpl0 . getCompanyId ( ) )
assertEquals ( "ACTION_PHASE" , string0 )
assertEquals ( " / ] V" , actionResponseImpl0 . getRedirectLocation ( ) )
assertEquals ( "http : / / apache . org / xml / features / " , actionResponseImpl0 . getRedirectLocation ( ) )
assertEquals ( "RESOURCE_PHASE" , string0 )
assertTrue ( portalPreferencesImpl0 . equals ( portalPreferencesImpl1 ) )
assertEquals ( 0 , portletPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . getOwnerType ( ) )
assertNotNull ( map0 )
assertEquals ( 0 , portalPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portalPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . getOwnerType ( ) )
assertNotNull ( map0 )
assertNotNull ( defaultControlPanelEntryFactory0 )
assertNotNull ( portletSetupUtil0 )
assertNull ( string0 )
assertEquals ( "" , portletURLListenerImpl0 . getListenerClass ( ) )
assertNotNull ( portletPreferencesWrapper0 )
assertNull ( portletContext0 )
assertNull ( renderRequestImpl0 . getETag ( ) )
assertNull ( portalContext0 )
assertNull ( httpServletRequest0 )
assertNull ( principal0 )
assertNotNull ( enumeration0 )
assertNull ( eventRequestImpl0 . getPortletName ( ) )
assertNull ( portletSession0 )
assertNull ( windowState0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( portletSession0 )
assertNull ( portlet0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( portletMode0 )
assertEquals ( "text / html" , eventRequestImpl0 . getResponseContentType ( ) )
assertEquals ( false , boolean0 )
assertNull ( httpServletRequest0 )
assertNull ( renderRequestImpl1 . getETag ( ) )
assertNull ( portletSession0 )
assertNull ( portletSession0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "Host" , string0 )
assertNotNull ( string0 )
assertEquals ( "ACTION_PHASE" , actionRequestImpl0 . getLifecycle ( ) )
assertEquals ( "text / html" , actionRequestImpl0 . getResponseContentType ( ) )
assertNull ( resourceRequestWrapper0 . getResourceID ( ) )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNull ( windowState0 )
assertNull ( layout0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( string0 )
assertNull ( user0 )
assertEquals ( false , boolean0 )
assertEquals ( true , eventResponseImpl0 . isCalledSetRenderParameter ( ) )
assertNull ( portletMode0 )
assertEquals ( 0L , actionResponseImpl0 . getPlid ( ) )
assertEquals ( "GB" , locale1 . getCountry ( ) )
assertNull ( enumeration0 )
assertNotNull ( actionRequestFactory0 )
assertNull ( string0 )
assertEquals ( "RENDER_PHASE" , renderRequestImpl0 . getLifecycle ( ) )
assertEquals ( "g_l_jF`6 ! HT" , filterConfigImpl0 . getFilterName ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertNotNull ( routeImpl0 )
assertNull ( string0 )
assertNotNull ( routeImpl0 )
assertNull ( string0 )
assertEquals ( "Nh } \"I8HpM + 5yhJvvj" , string0 )
assertNotNull ( routeImpl0 )
assertEquals ( "Nh } \"I8HpM + 5yhJvvj" , string0 )
assertNotNull ( routeImpl0 )
assertNotNull ( routeImpl0 )
assertNotSame ( defaultCustomUserAttributes0 , defaultCustomUserAttributes1 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( event0 )
assertNull ( eventRequestImpl0 . getRemoteUser ( ) )
assertEquals ( "EVENT_PHASE" , eventRequestImpl0 . getLifecycle ( ) )
assertNotNull ( renderRequestFactory0 )
assertTrue ( portletPreferencesImpl0 . equals ( portletPreferencesImpl1 ) )
assertEquals ( false , boolean0 )
assertEquals ( ( - 14L ) , portletPreferencesImpl1 . getPlid ( ) )
assertEquals ( 9L , portletPreferencesImpl0 . getPlid ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1085L , portletPreferencesImpl0 . getPlid ( ) )
assertEquals ( true , boolean0 )
assertTrue ( portletPreferencesImpl1 . equals ( portletPreferencesImpl0 ) )
assertEquals ( 0 , portletPreferencesImpl0 . size ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . size ( ) )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( socialActivityAchievement0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , string0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( 8 , map0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( socialRequestFeedEntry0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( 712L , socialActivityAchievementSoap0 . getCreateDate ( ) )
assertEquals ( ( - 1545L ) , socialActivityAchievementSoap0 . getUserId ( ) )
assertEquals ( false , socialActivityAchievementSoap0 . isFirstInGroup ( ) )
assertEquals ( 0L , socialActivityAchievementSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivityAchievementSoap0 . getCreateDate ( ) )
assertNull ( string0 )
assertEquals ( ( - 1545L ) , socialActivityAchievementSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 712L , socialActivityAchievementSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNotNull ( socialActivityAchievementSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivitySoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 1859 , socialActivitySoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivitySoap0 . getReceiverUserId ( ) )
assertEquals ( 0L , socialActivitySoap0 . getUserId ( ) )
assertEquals ( 0L , socialActivitySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivitySoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 1077L , socialActivitySoap0 . getCompanyId ( ) )
assertEquals ( 0L , socialActivitySoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivitySoap0 . getGroupId ( ) )
assertEquals ( 0L , socialActivitySoap0 . getCompanyId ( ) )
assertEquals ( 0L , socialActivitySoap0 . getActivityId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNotNull ( socialActivitySoapArray0 )
assertNull ( socialRequestFeedEntry0 . getPortletId ( ) )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , socialRequestFeedEntry0 . getPortletId ( ) )
assertEquals ( "" , string0 )
assertNull ( socialRequestFeedEntry0 . getPortletId ( ) )
assertNull ( string0 )
assertNull ( socialActivitySettingSoap0 . getName ( ) )
assertEquals ( 0L , socialActivitySettingSoap0 . getActivitySettingId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivitySettingSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , socialActivitySettingSoap0 . getActivityType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( socialActivitySettingSoap0 . getName ( ) )
assertEquals ( 0L , socialActivitySettingSoap0 . getGroupId ( ) )
assertEquals ( 0L , socialActivitySettingSoap0 . getCompanyId ( ) )
assertNotNull ( socialActivitySettingSoapArray0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivity" , string0 )
assertNull ( socialActivity0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivity" , socialActivityWrapper0 . getModelClassName ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , socialActivityDefinition0 . isEnabled ( ) )
assertEquals ( true , socialActivityDefinition0 . isEnabled ( ) )
assertNotSame ( socialActivityDefinition0 , socialActivityDefinition1 )
assertEquals ( false , boolean0 )
assertTrue ( socialActivityDefinition1 . equals ( socialActivityDefinition0 ) )
assertEquals ( - 940 , socialActivityDefinition1 . getActivityType ( ) )
assertEquals ( true , socialActivityDefinition1 . isEnabled ( ) )
assertTrue ( socialActivityDefinition1 . equals ( socialActivityDefinition0 ) )
assertEquals ( true , socialActivityDefinition0 . isEnabled ( ) )
assertEquals ( ( - 770L ) , socialActivityLimitSoap0 . getPrimaryKey ( ) )
assertEquals ( - 770 , socialActivityLimitSoap0 . getActivityType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivityLimitSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , socialActivityLimitSoap0 . getActivityType ( ) )
assertEquals ( 0L , socialActivityLimitSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivityLimitSoap0 . getActivityLimitId ( ) )
assertEquals ( 0L , socialActivityLimitSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialActivityLimitSoap0 . getClassPK ( ) )
assertNull ( string0 )
assertEquals ( 0L , socialActivityLimitSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( socialActivityLimitSoapArray0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialRelation" , string0 )
assertNull ( socialRelation0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( " < a href = \"\" > Coul | ot fnd ( clUs [ < / a > " , string0 )
assertNull ( socialActivityFeedEntry0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "com . liferay . portlet . social . model . SocialRequest" , string0 )
assertNull ( socialRequest0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNull ( socialActivityCounter0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , string0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterWrapper0 . getModelClassName ( ) )
assertNotNull ( socialRelationConstants0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , string0 )
assertNull ( socialActivityLimit0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertEquals ( - 24 , socialActivityCounterSoap0 . getOwnerType ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , socialActivityCounterSoap0 . getEndPeriod ( ) )
assertEquals ( 0L , socialActivityCounterSoap0 . getPrimaryKey ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , socialActivityCounterSoap0 . getActive ( ) )
assertEquals ( false , socialActivityCounterSoap0 . getActive ( ) )
assertEquals ( 0 , socialActivityCounterSoap0 . getTotalValue ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 24L ) , socialActivityCounterSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 10 , socialActivityCounterSoap0 . getGraceValue ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , socialActivityCounterSoap0 . getCurrentValue ( ) )
assertEquals ( 0L , socialActivityCounterSoap0 . getCompanyId ( ) )
assertEquals ( 0 , socialActivityCounterSoap0 . getStartPeriod ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 24L ) , socialActivityCounterSoap0 . getClassPK ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 10 , socialActivityCounterSoap0 . getEndPeriod ( ) )
assertNotNull ( socialActivityCounterSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 830L , socialRequestSoap0 . getClassPK ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 83 , socialRequestSoap0 . getStatus ( ) )
assertEquals ( 83L , socialRequestSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1613L , socialRequestSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1613L , socialRequestSoap0 . getReceiverUserId ( ) )
assertEquals ( 0 , socialRequestSoap0 . getType ( ) )
assertEquals ( ( - 1072L ) , socialRequestSoap0 . getCreateDate ( ) )
assertEquals ( 830L , socialRequestSoap0 . getModifiedDate ( ) )
assertEquals ( - 103 , socialRequestSoap0 . getType ( ) )
assertEquals ( 830L , socialRequestSoap0 . getUserId ( ) )
assertEquals ( 0L , socialRequestSoap0 . getReceiverUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1072L ) , socialRequestSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialRequestSoap0 . getModifiedDate ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNotNull ( socialRequestSoapArray0 )
assertEquals ( "" , string0 )
assertEquals ( "" , socialActivityFeedEntry0 . getBody ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 31L ) , socialRelationSoap0 . getRelationId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , socialRelationSoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 31L ) , socialRelationSoap0 . getCreateDate ( ) )
assertEquals ( 0L , socialRelationSoap0 . getUserId2 ( ) )
assertEquals ( 0L , long0 )
assertNull ( socialRelationSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , socialRelationSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , socialRelationSoap0 . getPrimaryKey ( ) )
assertNotNull ( socialRelationSoapArray0 )
assertEquals ( false , boolean0 )
assertEquals ( 1 , int0 )
assertEquals ( 1 , socialActivityCounterDefinition0 . getLimitPeriod ( ) )
assertEquals ( true , socialActivityCounterDefinition0 . isEnabled ( ) )
assertEquals ( true , socialActivityCounterDefinition0 . isLimitEnabled ( ) )
assertEquals ( true , socialActivityCounterDefinition0 . isLimitEnabled ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , socialActivityCounterDefinition0 . isLimitEnabled ( ) )
assertEquals ( 0 , socialActivityCounterDefinition0 . getPeriodLength ( ) )
assertEquals ( 1 , socialActivityCounterDefinition0 . getLimitPeriod ( ) )
assertEquals ( 1 , socialActivityCounterDefinition0 . getIncrement ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , socialActivityCounterDefinition0 . getIncrement ( ) )
assertEquals ( false , socialActivityCounterDefinition0 . isLimitEnabled ( ) )
assertEquals ( 3 , socialActivityCounterDefinition0 . getLimitPeriod ( ) )
assertEquals ( - 1200 , socialActivityCounterDefinition0 . getLimitValue ( ) )
assertEquals ( 1 , socialActivityCounterDefinition0 . getLimitPeriod ( ) )
assertEquals ( 1 , socialActivityCounterDefinition0 . getOwnerType ( ) )
assertEquals ( - 340 , socialActivityCounterDefinition0 . getPeriodLength ( ) )
assertEquals ( true , socialActivityCounterDefinition0 . isTransient ( ) )
assertEquals ( true , socialActivityCounterDefinition0 . isLimitEnabled ( ) )
assertEquals ( 2 , socialActivityCounterDefinition0 . getLimitPeriod ( ) )
assertEquals ( 2 , socialActivityCounterDefinition0 . getOwnerType ( ) )
assertEquals ( 0 , socialActivityCounterDefinition0 . getPeriodLength ( ) )
assertEquals ( 3 , socialActivityCounterDefinition0 . getOwnerType ( ) )
assertEquals ( 11 , baseSocialAchievement0 . getCounterThreshold ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( - 1649 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 152 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 1 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 1 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , baseSocialAchievement1 . getCounterPeriodLength ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( 1 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 1 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 1 , baseSocialAchievement0 . getCounterIncrement ( ) )
assertEquals ( 0 , baseSocialAchievement0 . getCounterPeriodLength ( ) )
assertEquals ( " { activityAchievementId = 0 , groupId = 0 , companyId = 0 , userId = 0 , createDate = 0 , name = null , firstInGroup = false } " , string0 )
assertEquals ( 0L , socialActivityAchievementCacheModel0 . companyId )
assertEquals ( false , socialActivityAchievementCacheModel0 . firstInGroup )
assertEquals ( " { activityLimitId = 0 , groupId = 0 , companyId = 0 , userId = 0 , classNameId = 0 , classPK = 0 , activityType = 0 , activityCounterName = null , value = null } " , string0 )
assertEquals ( 0L , socialActivityLimitCacheModel0 . classNameId )
assertEquals ( " { uuid = null , relationId = 0 , companyId = 0 , createDate = 0 , userId1 = 0 , userId2 = 0 , type = 0 } " , string0 )
assertEquals ( 0L , socialRelationCacheModel0 . createDate )
assertEquals ( " { activitySettingId = 0 , groupId = 0 , companyId = 0 , classNameId = 0 , activityType = 0 , name = null , value = null } " , string0 )
assertEquals ( " { activitySettingId = 0 , groupId = 0 , companyId = 0 , classNameId = 0 , activityType = 0 , name = r , value = null } " , socialActivitySettingCacheModel0 . toString ( ) )
assertEquals ( 0 , socialActivitySettingCacheModel0 . activityType )
assertEquals ( 0L , socialActivitySettingCacheModel0 . classNameId )
assertEquals ( " { uuid = null , requestId = 0 , groupId = 0 , companyId = 0 , userId = 0 , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , type = 0 , extraData = null , receiverUserId = 0 , status = 0 } " , string0 )
assertEquals ( 0L , socialRequestCacheModel0 . companyId )
assertEquals ( 0L , socialRequestCacheModel0 . userId )
assertEquals ( " { activityCounterId = 0 , groupId = 0 , companyId = 0 , classNameId = 0 , classPK = 0 , name = null , ownerType = 0 , currentValue = 0 , totalValue = 0 , graceValue = 0 , startPeriod = 0 , endPeriod = 0 , active = false } " , string0 )
assertEquals ( 0 , socialActivityCounterCacheModel0 . endPeriod )
assertEquals ( 0L , socialActivityCounterCacheModel0 . classPK )
assertEquals ( " { activityId = 0 , groupId = 0 , companyId = 0 , userId = 0 , createDate = 0 , mirrorActivityId = 0 , classNameId = 0 , classPK = 0 , type = 0 , extraData = null , receiverUserId = 0 } " , string0 )
assertEquals ( 0L , socialActivityCacheModel0 . mirrorActivityId )
assertEquals ( 0L , socialActivityCacheModel0 . userId )
assertNotNull ( socialActivitySettingServiceUtil0 )
assertNull ( socialRelationLocalService0 )
assertNotNull ( socialActivityLocalServiceUtil0 )
assertNotNull ( socialActivityInterpreterLocalServiceUtil0 )
assertNotNull ( socialRequestLocalServiceUtil0 )
assertNull ( socialActivitySettingLocalService0 )
assertNull ( socialActivitySettingService0 )
assertNotNull ( socialRelationLocalServiceUtil0 )
assertNull ( socialActivityCounterLocalService0 )
assertNull ( socialRequestService0 )
assertNull ( socialRequestInterpreterLocalService0 )
assertNotNull ( socialRequestInterpreterLocalServiceUtil0 )
assertNotNull ( socialActivityCounterLocalServiceUtil0 )
assertNull ( socialActivityInterpreterLocalService0 )
assertNull ( socialActivityAchievementLocalService0 )
assertNotNull ( socialRequestServiceUtil0 )
assertNotNull ( socialActivitySettingLocalServiceUtil0 )
assertNull ( socialActivityLocalService0 )
assertNull ( socialActivityLimitLocalService0 )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialRelationPersistence0 )
assertNull ( groupLocalService0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityAchievementLocalService0 )
assertNull ( userLocalService0 )
assertNull ( socialActivityCounterPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , string0 )
assertEquals ( "SocialActivityAchievement" , class0 . getSimpleName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitPersistence0 )
assertNull ( socialActivityPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityCounterLocalService0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingLocalService0 )
assertNull ( socialRequestService0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingPersistence0 )
assertNull ( socialRequestLocalService0 )
assertNull ( socialActivitySettingService0 )
assertNull ( socialRequestInterpreterLocalService0 )
assertNull ( groupService0 )
assertNull ( socialActivityFinder0 )
assertNull ( socialActivityInterpreterLocalService0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterFinder0 )
assertNull ( counterLocalService0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertNull ( socialRequestPersistence0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialRelationLocalService0 )
assertNull ( resourceLocalService0 )
assertNull ( socialActivityLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupPersistence0 )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( groupFinder0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityAchievement" , socialActivityAchievementLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterFinder0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( socialActivityAchievementPersistence0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialRequestPersistence0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterLocalService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingLocalService0 )
assertNull ( socialActivitySettingService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityAchievementLocalService0 )
assertNull ( userService0 )
assertNull ( socialRelationLocalService0 )
assertNull ( socialRequestLocalService0 )
assertNull ( resourceLocalService0 )
assertNull ( socialActivityLimitPersistence0 )
assertNull ( string0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLocalService0 )
assertNull ( socialRequestService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterPersistence0 )
assertNull ( socialRequestInterpreterLocalService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "" , socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityPersistence0 )
assertNull ( socialRelationPersistence0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalService0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingPersistence0 )
assertNull ( socialActivityFinder0 )
assertNull ( userPersistence0 )
assertNull ( userFinder0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupFinder0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialRequestPersistence0 )
assertNull ( lockLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( lockFinder0 )
assertNull ( counterLocalService0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityPersistence0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( lockPersistence0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivitySettingService0 )
assertNull ( socialRequestLocalService0 )
assertNull ( groupService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialRelationLocalService0 )
assertNull ( socialActivityCounterFinder0 )
assertNull ( socialActivityAchievementPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryLocalService0 )
assertNull ( userService0 )
assertNull ( socialActivityLimitLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLocalService0 )
assertNull ( socialActivityCounterPersistence0 )
assertNull ( groupPersistence0 )
assertNull ( socialRequestService0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingLocalService0 )
assertNull ( socialActivityLimitPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryPersistence0 )
assertNull ( socialRelationPersistence0 )
assertNull ( userFinder0 )
assertNull ( socialActivityInterpreterLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , socialActivityCounterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityCounter" , string0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingPersistence0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialRequestInterpreterLocalService0 )
assertNull ( socialRelationLocalService0 )
assertEquals ( "" , socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , string0 )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupFinder0 )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityFinder0 )
assertNull ( groupPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitLocalService0 )
assertNull ( socialActivitySettingPersistence0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialRequestService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityCounterPersistence0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityPersistence0 )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityAchievementPersistence0 )
assertNull ( socialActivityCounterLocalService0 )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityAchievementLocalService0 )
assertNull ( groupLocalService0 )
assertNull ( socialRelationPersistence0 )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( socialActivityInterpreterLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialRequestLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( string0 )
assertNull ( userService0 )
assertNull ( socialActivitySettingLocalService0 )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . social . model . SocialActivityLimit" , socialActivityLimitLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityLimitLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivitySettingService0 )
assertNull ( userLocalService0 )
assertNull ( groupService0 )
assertNull ( socialActivityCounterFinder0 )
assertNull ( socialRequestInterpreterLocalService0 )
assertNull ( socialRequestPersistence0 )
assertNull ( socialActivityLimitPersistence0 )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityInterpreterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityCounterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . assetpublisher" , string0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetEntry" , string0 )
assertNotNull ( string0 )
assertNotNull ( assetPublisherUtil0 )
assertNotNull ( stringArray0 )
assertNotNull ( longArray1 )
assertSame ( longArray0 , longArray1 )
assertNotNull ( longArray0 )
assertEquals ( 0L , portletPreferencesImpl0 . getPlid ( ) )
assertNotNull ( assetPublisherHelperImpl0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portlet . calendar . model . CalEvent" , string0 )
assertNotNull ( findEventAction0 )
assertNotNull ( findEventAction0 )
assertNotNull ( configurationActionImpl0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , calEventSoap0 . getDurationMinute ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( calEventSoap0 . getUuid ( ) )
assertEquals ( 0L , calEventSoap0 . getGroupId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , calEventSoap0 . getDurationHour ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , calEventSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 0 , calEventSoap0 . getDurationMinute ( ) )
assertNull ( calEventSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( false , calEventSoap0 . getAllDay ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0 , calEventSoap0 . getRemindBy ( ) )
assertEquals ( 0L , calEventSoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertEquals ( true , calEventSoap0 . isRepeating ( ) )
assertEquals ( false , calEventSoap0 . isTimeZoneSensitive ( ) )
assertEquals ( 0 , calEventSoap0 . getFirstReminder ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , calEventSoap0 . getRepeating ( ) )
assertNull ( calEventSoap0 . getLocation ( ) )
assertEquals ( 43L , calEventSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , calEventSoap0 . getSecondReminder ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( false , calEventSoap0 . isTimeZoneSensitive ( ) )
assertEquals ( "J zO & 6\"8U%eXU^4Gp" , calEventSoap0 . getUuid ( ) )
assertEquals ( false , calEventSoap0 . isAllDay ( ) )
assertEquals ( false , calEventSoap0 . isTimeZoneSensitive ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , calEventSoap0 . getTimeZoneSensitive ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( - 987 , calEventSoap0 . getFirstReminder ( ) )
assertNull ( string0 )
assertNotNull ( calEventSoapArray0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertNull ( calEvent0 )
assertEquals ( "com . liferay . portlet . calendar . model . CalEvent" , string0 )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertEquals ( " { uuid = null , eventId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , title = null , description = null , location = null , startDate = 0 , endDate = 0 , durationHour = 0 , durationMinute = 0 , allDay = false , timeZoneSensitive = false , type = null , repeating = false , recurrence = null , remindBy = 0 , firstReminder = 0 , secondReminder = 0 } " , string0 )
assertEquals ( 0L , calEventCacheModel0 . eventId )
assertEquals ( false , calEventCacheModel0 . timeZoneSensitive )
assertEquals ( " { uuid = null , eventId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , title = null , description = null , location = null , startDate = 0 , endDate = 0 , durationHour = 0 , durationMinute = 0 , allDay = false , timeZoneSensitive = false , type = Z%2hWUv , repeating = false , recurrence = null , remindBy = 0 , firstReminder = 0 , secondReminder = 0 } " , calEventCacheModel0 . toString ( ) )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "event" , string0 )
assertEquals ( " / common / date . png" , string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "com . liferay . portlet . calendar . model . CalEvent" , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( calEventServiceUtil0 )
assertNull ( calEventService0 )
assertNull ( calEventLocalService0 )
assertNotNull ( calEventServiceSoap0 )
assertNotNull ( actionUtil0 )
assertNull ( date0 )
assertNull ( sCProductEntrySoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertNull ( sCProductEntrySoap0 . getPageURL ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 6L ) , sCProductEntrySoap0 . getProductEntryId ( ) )
assertNull ( sCProductEntrySoap0 . getRepoArtifactId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( sCProductEntrySoap0 . getLongDescription ( ) )
assertEquals ( 0L , long0 )
assertNull ( sCProductEntrySoap0 . getRepoGroupId ( ) )
assertNull ( sCProductEntrySoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 424L , sCProductEntrySoap0 . getUserId ( ) )
assertNull ( sCProductEntrySoap0 . getShortDescription ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( sCProductEntrySoap0 . getRepoGroupId ( ) )
assertEquals ( 305L , sCProductEntrySoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 0L , sCProductEntrySoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( sCProductEntrySoap0 . getRepoGroupId ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , sCProductEntrySoap0 . getUserId ( ) )
assertEquals ( 0L , sCProductEntrySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 305L , sCProductEntrySoap0 . getCompanyId ( ) )
assertNotNull ( sCProductEntrySoapArray0 )
assertNull ( string0 )
assertEquals ( 0L , sCProductVersionSoap0 . getUserId ( ) )
assertNull ( date0 )
assertNull ( sCProductVersionSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , sCProductVersionSoap0 . getProductVersionId ( ) )
assertEquals ( ( - 426L ) , sCProductVersionSoap0 . getCompanyId ( ) )
assertNull ( sCProductVersionSoap0 . getVersion ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( sCProductVersionSoap0 . getVersion ( ) )
assertNull ( sCProductVersionSoap0 . getChangeLog ( ) )
assertNull ( sCProductVersionSoap0 . getDownloadPageURL ( ) )
assertEquals ( 0L , sCProductVersionSoap0 . getProductVersionId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , sCProductVersionSoap0 . getRepoStoreArtifact ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 863L ) , sCProductVersionSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( sCProductVersionSoap0 . getChangeLog ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( sCProductVersionSoapArray0 )
assertEquals ( 6 , sCFrameworkVersionSoap0 . getPriority ( ) )
assertEquals ( 0L , sCFrameworkVersionSoap0 . getFrameworkVersionId ( ) )
assertEquals ( 0 , sCFrameworkVersionSoap0 . getPriority ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( false , sCFrameworkVersionSoap0 . getActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , sCFrameworkVersionSoap0 . getGroupId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 912L , sCFrameworkVersionSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( true , sCFrameworkVersionSoap0 . getActive ( ) )
assertEquals ( 912L , sCFrameworkVersionSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , sCFrameworkVersionSoap0 . getGroupId ( ) )
assertEquals ( 0L , sCFrameworkVersionSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , sCFrameworkVersionSoap0 . getCompanyId ( ) )
assertNotNull ( sCFrameworkVersionSoapArray0 )
assertNull ( sCProductVersion0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductVersion" , string0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductVersion" , sCProductVersionWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductScreenshot" , class0 . getCanonicalName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductScreenshot" , string0 )
assertNull ( sCProductScreenshot0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductScreenshot" , sCProductScreenshotWrapper0 . getModelClassName ( ) )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( sCFrameworkVersion0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , string0 )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , sCProductScreenshotSoap0 . getThumbnailId ( ) )
assertEquals ( 0L , sCProductScreenshotSoap0 . getProductEntryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1799L ) , sCProductScreenshotSoap0 . getFullImageId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , sCProductScreenshotSoap0 . getThumbnailId ( ) )
assertEquals ( 0L , sCProductScreenshotSoap0 . getThumbnailId ( ) )
assertEquals ( 0L , sCProductScreenshotSoap0 . getGroupId ( ) )
assertEquals ( - 1799 , sCProductScreenshotSoap0 . getPriority ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( sCProductScreenshotSoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , sCLicenseSoap0 . getRecommended ( ) )
assertEquals ( false , sCLicenseSoap0 . getRecommended ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 723L ) , sCLicenseSoap0 . getLicenseId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , sCLicenseSoap0 . getRecommended ( ) )
assertEquals ( false , sCLicenseSoap0 . getActive ( ) )
assertEquals ( false , sCLicenseSoap0 . isOpenSource ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNotNull ( sCLicenseSoapArray0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , string0 )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( sCLicense0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseWrapper0 . getModelClassName ( ) )
assertNull ( sCProductEntry0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductEntry" , string0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCProductEntry" , sCProductEntryWrapper0 . getModelClassName ( ) )
assertEquals ( " { frameworkVersionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , url = null , active = false , priority = 0 } " , string0 )
assertEquals ( false , sCFrameworkVersionCacheModel0 . active )
assertEquals ( 0L , sCFrameworkVersionCacheModel0 . companyId )
assertEquals ( " { productVersionId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , productEntryId = 0 , version = null , changeLog = null , downloadPageURL = null , directDownloadURL = null , repoStoreArtifact = false } " , string0 )
assertEquals ( 0L , sCProductVersionCacheModel0 . createDate )
assertEquals ( 0L , sCProductVersionCacheModel0 . productVersionId )
assertEquals ( 0L , sCProductVersionCacheModel0 . userId )
assertEquals ( " { licenseId = 0 , name = null , url = null , openSource = false , active = false , recommended = false } " , string0 )
assertEquals ( 0L , sCLicenseCacheModel0 . licenseId )
assertEquals ( false , sCLicenseCacheModel0 . recommended )
assertEquals ( false , sCLicenseCacheModel0 . recommended )
assertEquals ( 0L , sCProductScreenshotCacheModel0 . productScreenshotId )
assertEquals ( " { productScreenshotId = 0 , companyId = 0 , groupId = 0 , productEntryId = 0 , thumbnailId = 0 , fullImageId = 0 , priority = 0 } " , string0 )
assertEquals ( " { productEntryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , type = null , tags = null , shortDescription = null , longDescription = null , pageURL = null , author = null , repoGroupId = null , repoArtifactId = null } " , string0 )
assertEquals ( 0L , sCProductEntryCacheModel0 . createDate )
assertEquals ( 0L , sCProductEntryCacheModel0 . createDate )
assertEquals ( 0L , sCProductEntryCacheModel0 . userId )
assertEquals ( 0L , sCProductEntryCacheModel0 . productEntryId )
assertNotNull ( sCLicenseServiceUtil0 )
assertNull ( sCProductVersionService0 )
assertNotNull ( sCLicenseLocalServiceUtil0 )
assertNotNull ( sCFrameworkVersionLocalServiceUtil0 )
assertNotNull ( sCFrameworkVersionServiceUtil0 )
assertNull ( sCFrameworkVersionService0 )
assertNull ( sCProductEntryService0 )
assertNull ( sCFrameworkVersionLocalService0 )
assertNull ( sCLicenseLocalService0 )
assertNotNull ( sCProductVersionServiceUtil0 )
assertNull ( sCProductScreenshotLocalService0 )
assertNull ( sCProductEntryLocalService0 )
assertNull ( sCProductVersionLocalService0 )
assertNotNull ( sCProductEntryServiceUtil0 )
assertNull ( sCLicenseService0 )
assertNull ( userFinder0 )
assertNull ( sCProductEntryService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( sCProductVersionPersistence0 )
assertNull ( sCProductVersionLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , string0 )
assertNull ( resourceLocalService0 )
assertNull ( sCFrameworkVersionLocalService0 )
assertNull ( sCProductVersionService0 )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseService0 )
assertNull ( sCLicensePersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductScreenshotPersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCProductEntryPersistence0 )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCProductScreenshotLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( sCFrameworkVersionPersistence0 )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isLocalClass ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionService0 )
assertNull ( sCProductEntryLocalService0 )
assertNull ( sCLicenseLocalService0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicensePersistence0 )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCProductScreenshotPersistence0 )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseService0 )
assertNull ( sCProductScreenshotLocalService0 )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCFrameworkVersionLocalService0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , string0 )
assertNull ( sCProductEntryLocalService0 )
assertNull ( string0 )
assertEquals ( "" , sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCFrameworkVersionService0 )
assertNull ( counterLocalService0 )
assertNull ( sCProductEntryPersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductVersionPersistence0 )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalService0 )
assertNull ( sCProductVersionService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductVersionLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( sCFrameworkVersionPersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductEntryService0 )
assertNull ( resourceLocalService0 )
assertNull ( sCFrameworkVersionLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCFrameworkVersion" , sCFrameworkVersionLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductEntryService0 )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCProductEntryLocalService0 )
assertNull ( sCProductVersionPersistence0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , string0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductEntryPersistence0 )
assertNull ( userPersistence0 )
assertNull ( sCProductScreenshotLocalService0 )
assertNull ( sCLicensePersistence0 )
assertNull ( userService0 )
assertNull ( sCProductVersionLocalService0 )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCProductVersionService0 )
assertNull ( string0 )
assertNull ( userLocalService0 )
assertNull ( sCProductScreenshotPersistence0 )
assertNull ( resourceLocalService0 )
assertNull ( sCFrameworkVersionService0 )
assertNull ( sCFrameworkVersionLocalService0 )
assertNull ( sCLicenseLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCFrameworkVersionPersistence0 )
assertNull ( sCLicenseService0 )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( sCFrameworkVersionLocalService0 )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( resourceLocalService0 )
assertNull ( sCProductVersionLocalService0 )
assertNull ( sCFrameworkVersionService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseLocalService0 )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "R ] QG | _Av . c ( u_G" , sCLicenseServiceWrapper0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseService0 )
assertNull ( sCProductScreenshotPersistence0 )
assertNull ( sCProductEntryLocalService0 )
assertNull ( sCLicensePersistence0 )
assertNull ( sCProductEntryPersistence0 )
assertNull ( sCProductScreenshotLocalService0 )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , class0 . getName ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( sCProductVersionPersistence0 )
assertNull ( sCFrameworkVersionPersistence0 )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( sCLicenseServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , string0 )
assertNull ( sCProductVersionService0 )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . softwarecatalog . model . SCLicense" , sCLicenseServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( userLocalService0 )
assertNull ( sCProductEntryService0 )
assertNotNull ( sCProductVersionServiceHttp0 )
assertNotNull ( sCLicenseServiceSoap0 )
assertNotNull ( sCProductEntryServiceHttp0 )
assertNotNull ( sCProductEntryServiceSoap0 )
assertNotNull ( sCLicenseServiceHttp0 )
assertNotNull ( sCProductVersionServiceSoap0 )
assertNotNull ( sCProductEntryPermission0 )
assertNotNull ( sCUtil0 )
assertNull ( productEntryNameComparator0 )
assertNotNull ( productEntryCreateDateComparator0 )
assertNotNull ( productEntryModifiedDateComparator0 )
assertEquals ( "SCProductEntry . name DESC" , productEntryNameComparator0 . getOrderBy ( ) )
assertNotNull ( productEntryTypeComparator0 )
assertEquals ( false , boolean0 )
assertEquals ( true , productEntryNameComparator0 . isAscending ( ) )
assertEquals ( "SCProductEntry . name DESC" , string0 )
assertEquals ( true , productEntryNameComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "SCProductEntry . createDate DESC" , string0 )
assertEquals ( "SCProductEntry . createDate ASC" , string0 )
assertEquals ( true , productEntryModifiedDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "SCProductEntry . modifiedDate DESC" , string0 )
assertEquals ( true , productEntryModifiedDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , productEntryTypeComparator0 . isAscending ( ) )
assertEquals ( "SCProductEntry . type_ DESC" , string0 )
assertEquals ( "SCProductEntry . type_ ASC" , string0 )
assertNotNull ( viewAction0 )
assertNotNull ( actionUtil0 )
assertNotNull ( actionUtil0 )
assertEquals ( true , passwordPolicyNameComparator0 . isAscending ( ) )
assertEquals ( "PasswordPolicy . name DESC" , passwordPolicyNameComparator0 . toString ( ) )
assertEquals ( "PasswordPolicy . description DESC" , passwordPolicyDescriptionComparator0 . getOrderBy ( ) )
assertEquals ( "PasswordPolicy . name DESC" , passwordPolicyNameComparator0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertNotNull ( editPagesAction0 )
assertNotNull ( actionUtil0 )
assertNotNull ( viewAction0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsFlag" , string0 )
assertNull ( announcementsFlag0 )
assertEquals ( true , class0 . isInterface ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsFlag" , announcementsFlagWrapper0 . getModelClassName ( ) )
assertEquals ( 0L , announcementsFlagSoap0 . getUserId ( ) )
assertEquals ( 0 , announcementsFlagSoap0 . getValue ( ) )
assertEquals ( - 9 , announcementsFlagSoap0 . getValue ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , announcementsFlagSoap0 . getEntryId ( ) )
assertNull ( date0 )
assertEquals ( 0L , announcementsFlagSoap0 . getPrimaryKey ( ) )
assertNotNull ( announcementsFlagSoapArray0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , string0 )
assertNull ( announcementsDelivery0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , announcementsDeliverySoap0 . isWebsite ( ) )
assertEquals ( true , announcementsDeliverySoap0 . isEmail ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , announcementsDeliverySoap0 . getUserId ( ) )
assertEquals ( 8L , announcementsDeliverySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , announcementsDeliverySoap0 . isEmail ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , announcementsDeliverySoap0 . getDeliveryId ( ) )
assertEquals ( false , announcementsDeliverySoap0 . isSms ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( announcementsDeliverySoapArray0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsEntry" , class0 . getCanonicalName ( ) )
assertNull ( announcementsEntry0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsEntry" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( false , announcementsEntrySoap0 . getAlert ( ) )
assertNull ( announcementsEntrySoap0 . getType ( ) )
assertEquals ( 0L , announcementsEntrySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , announcementsEntrySoap0 . getClassNameId ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( false , announcementsEntrySoap0 . isAlert ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( announcementsEntrySoap0 . getTitle ( ) )
assertNull ( string0 )
assertEquals ( 0 , announcementsEntrySoap0 . getPriority ( ) )
assertEquals ( ( - 1310L ) , announcementsEntrySoap0 . getClassNameId ( ) )
assertNull ( announcementsEntrySoap0 . getTitle ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( announcementsEntrySoap0 . getContent ( ) )
assertNull ( announcementsEntrySoap0 . getUserName ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 3L , announcementsEntrySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , announcementsEntrySoap0 . getClassPK ( ) )
assertEquals ( ( - 1310L ) , announcementsEntrySoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , announcementsEntrySoap0 . getClassNameId ( ) )
assertNull ( string0 )
assertEquals ( 0L , announcementsEntrySoap0 . getClassPK ( ) )
assertNull ( announcementsEntrySoap0 . getUserName ( ) )
assertNotNull ( announcementsEntrySoapArray0 )
assertEquals ( " { uuid = null , entryId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , title = null , content = null , url = null , type = null , displayDate = 0 , expirationDate = 0 , priority = 0 , alert = false } " , string0 )
assertEquals ( 0L , announcementsEntryCacheModel0 . classNameId )
assertEquals ( 0L , announcementsEntryCacheModel0 . userId )
assertEquals ( 0L , announcementsEntryCacheModel0 . modifiedDate )
assertEquals ( 0L , announcementsEntryCacheModel0 . companyId )
assertNotNull ( string0 )
assertEquals ( " { deliveryId = 0 , companyId = 0 , userId = 0 , type = null , email = false , sms = false , website = false } " , string0 )
assertEquals ( false , announcementsDeliveryCacheModel0 . website )
assertNull ( announcementsFlagService0 )
assertNull ( announcementsEntryLocalService0 )
assertNotNull ( announcementsDeliveryServiceUtil0 )
assertNull ( announcementsEntryService0 )
assertNotNull ( announcementsFlagServiceUtil0 )
assertNull ( announcementsDeliveryService0 )
assertNotNull ( announcementsEntryServiceUtil0 )
assertNull ( announcementsFlagLocalService0 )
assertNull ( announcementsEntryPersistence0 )
assertNull ( announcementsEntryLocalService0 )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , string0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsEntryFinder0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryLocalService0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( announcementsDeliveryPersistence0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsFlagPersistence0 )
assertNull ( announcementsEntryService0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertNull ( announcementsDeliveryService0 )
assertNull ( announcementsFlagService0 )
assertEquals ( "'B [ 3C > " , announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsFlagLocalService0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertNull ( resourceLocalService0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( announcementsEntryFinder0 )
assertNull ( announcementsDeliveryLocalService0 )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , string0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsEntryLocalService0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsFlagLocalService0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryPersistence0 )
assertNull ( announcementsFlagPersistence0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsEntryService0 )
assertEquals ( "com . liferay . portlet . announcements . model . AnnouncementsDelivery" , announcementsDeliveryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertEquals ( "hot_id" , announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsFlagService0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsEntryPersistence0 )
assertNull ( userService0 )
assertNull ( userPersistence0 )
assertNull ( announcementsDeliveryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( announcementsDeliveryService0 )
assertNull ( resourceLocalService0 )
assertNull ( announcementsDeliveryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( "com . liferay . portal . model . User" , string0 )
assertNotNull ( string0 )
assertNotNull ( usersControlPanelEntry0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portal . model . Organization" , string0 )
assertEquals ( "com . liferay . portal . model . Layout" , string0 )
assertEquals ( " / common / page . png" , string0 )
assertNotNull ( actionUtil0 )
assertNotNull ( findUserAction0 )
assertNotNull ( findUserAction0 )
assertNotNull ( findUserAction0 )
assertEquals ( false , groupNameComparator0 . isAscending ( ) )
assertNotNull ( longArray0 )
assertNotNull ( longArray0 )
assertEquals ( true , organizationNameComparator0 . isAscending ( ) )
assertEquals ( "orgName DESC" , organizationNameComparator0 . getOrderBy ( ) )
assertEquals ( "orgType DESC , orgName DESC" , organizationTypeComparator0 . toString ( ) )
assertEquals ( "Role_ . name DESC" , roleNameComparator0 . getOrderBy ( ) )
assertEquals ( false , roleNameComparator0 . isAscending ( ) )
assertEquals ( "UserGroup . description DESC , UserGroup . name DESC" , userGroupDescriptionComparator0 . toString ( ) )
assertEquals ( true , userGroupNameComparator0 . isAscending ( ) )
assertEquals ( "lastName ASC , firstName ASC , middleName ASC" , userLastNameComparator0 . getOrderBy ( ) )
assertEquals ( false , userEmailAddressComparator0 . isAscending ( ) )
assertEquals ( "jobTitle DESC , lastName DESC , firstName DESC , middleName DESC" , userJobTitleComparator0 . getOrderBy ( ) )
assertEquals ( false , userScreenNameComparator0 . isAscending ( ) )
assertNull ( actionRequestWrapper0 . getRemoteUser ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFolder" , string0 )
assertEquals ( " / common / folder . png" , string0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntry" , string0 )
assertEquals ( " / common / clip . png" , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( configurationActionImpl0 )
assertEquals ( false , boolean0 )
assertNotNull ( actionUtil0 )
assertNotNull ( findFolderAction0 )
assertNotNull ( findFolderAction0 )
assertEquals ( "fileEntryId" , string0 )
assertNotNull ( string0 )
assertEquals ( " / document_library_display / view_file_entry" , string0 )
assertEquals ( ( - 2L ) , dLFileVersionSoap0 . getFileEntryTypeId ( ) )
assertEquals ( 10 , dLFileVersionSoap0 . getStatus ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getCompanyId ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getSize ( ) )
assertNull ( string0 )
assertEquals ( 0L , dLFileVersionSoap0 . getFolderId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 31L ) , dLFileVersionSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0 , dLFileVersionSoap0 . getStatus ( ) )
assertEquals ( 1169L , dLFileVersionSoap0 . getFileVersionId ( ) )
assertNull ( date0 )
assertEquals ( 0L , dLFileVersionSoap0 . getFileEntryId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( dLFileVersionSoap0 . getExtension ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , dLFileVersionSoap0 . getFolderId ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getUserId ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( dLFileVersionSoap0 . getTitle ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getFileEntryId ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getCompanyId ( ) )
assertEquals ( 0L , dLFileVersionSoap0 . getFileEntryId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( dLFileVersionSoap0 . getChangeLog ( ) )
assertEquals ( ( - 5L ) , dLFileVersionSoap0 . getSize ( ) )
assertNull ( dLFileVersionSoap0 . getVersion ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( dLFileVersionSoap0 . getTitle ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 7L , dLFileVersionSoap0 . getGroupId ( ) )
assertEquals ( 0 , dLFileVersionSoap0 . getStatus ( ) )
assertNull ( string0 )
assertEquals ( 0L , dLFileVersionSoap0 . getFileEntryTypeId ( ) )
assertNull ( dLFileVersionSoap0 . getChecksum ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileVersionSoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( dLFileVersionSoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , dLFileRankSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , dLFileRankSoap0 . getFileEntryId ( ) )
assertEquals ( false , dLFileRankSoap0 . isActive ( ) )
assertEquals ( 502L , dLFileRankSoap0 . getFileEntryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 502L , dLFileRankSoap0 . getUserId ( ) )
assertEquals ( 502L , dLFileRankSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileRankSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( dLFileRankSoapArray0 )
assertNull ( dLFileShortcut0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileShortcut" , string0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileShortcut" , class0 . getCanonicalName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLContentDataBlobModel0 . getContentId ( ) )
assertEquals ( 0L , dLContentDataBlobModel0 . getContentId ( ) )
assertEquals ( 0L , dLContentDataBlobModel0 . getContentId ( ) )
assertEquals ( 0L , dLContentDataBlobModel0 . getContentId ( ) )
assertNull ( blob0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLContent" , string0 )
assertNull ( dLContent0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileEntryMetadataSoap0 . getDDMStructureId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 1876L , dLFileEntryMetadataSoap0 . getFileEntryId ( ) )
assertEquals ( 0L , dLFileEntryMetadataSoap0 . getDDMStorageId ( ) )
assertEquals ( 1876L , dLFileEntryMetadataSoap0 . getFileVersionId ( ) )
assertEquals ( 0L , dLFileEntryMetadataSoap0 . getFileEntryMetadataId ( ) )
assertEquals ( 1876L , dLFileEntryMetadataSoap0 . getFileEntryTypeId ( ) )
assertEquals ( 0L , dLFileEntryMetadataSoap0 . getDDMStructureId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( dLFileEntryMetadataSoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 31 , dLFileEntrySoap0 . getReadCount ( ) )
assertEquals ( ( - 1L ) , dLFileEntrySoap0 . getVersionUserId ( ) )
assertNull ( dLFileEntrySoap0 . getMimeType ( ) )
assertNull ( dLFileEntrySoap0 . getExtension ( ) )
assertNull ( dLFileEntrySoap0 . getVersion ( ) )
assertEquals ( ( - 1280L ) , dLFileEntrySoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( dLFileEntrySoap0 . getTitle ( ) )
assertNull ( dLFileEntrySoap0 . getExtraSettings ( ) )
assertNull ( dLFileEntrySoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileEntrySoap0 . getFileEntryId ( ) )
assertEquals ( true , dLFileEntrySoap0 . isManualCheckInRequired ( ) )
assertNull ( dLFileEntrySoap0 . getExtraSettings ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1280L ) , dLFileEntrySoap0 . getRepositoryId ( ) )
assertEquals ( 0L , dLFileEntrySoap0 . getCustom1ImageId ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( dLFileEntrySoap0 . getVersionUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "l^O2@ + T7kng" , dLFileEntrySoap0 . getVersion ( ) )
assertEquals ( ( - 29L ) , dLFileEntrySoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 29L ) , dLFileEntrySoap0 . getFolderId ( ) )
assertNull ( dLFileEntrySoap0 . getUuid ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( dLFileEntrySoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , dLFileEntrySoap0 . getSize ( ) )
assertEquals ( "gow%u9J" , dLFileEntrySoap0 . getExtension ( ) )
assertNull ( string0 )
assertEquals ( 0L , dLFileEntrySoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , dLFileEntrySoap0 . getRepositoryId ( ) )
assertEquals ( 0L , dLFileEntrySoap0 . getCustom1ImageId ( ) )
assertNull ( dLFileEntrySoap0 . getExtension ( ) )
assertNull ( string0 )
assertNull ( dLFileEntrySoap0 . getDescription ( ) )
assertNull ( date0 )
assertNotNull ( dLFileEntrySoapArray0 )
assertEquals ( ( - 249L ) , dLFileEntryTypeSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , dLFileEntryTypeSoap0 . getCompanyId ( ) )
assertEquals ( ( - 249L ) , dLFileEntryTypeSoap0 . getCompanyId ( ) )
assertEquals ( 0L , dLFileEntryTypeSoap0 . getFileEntryTypeId ( ) )
assertNull ( dLFileEntryTypeSoap0 . getUuid ( ) )
assertEquals ( 1695L , dLFileEntryTypeSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileEntryTypeSoap0 . getUserId ( ) )
assertNull ( dLFileEntryTypeSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileEntryTypeSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 1695L , dLFileEntryTypeSoap0 . getGroupId ( ) )
assertNotNull ( dLFileEntryTypeSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( "_w4YDQ_ ; ! } Z + s5d" , dLContentSoap0 . getVersion ( ) )
assertEquals ( 0L , dLContentSoap0 . getRepositoryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1742L , dLContentSoap0 . getContentId ( ) )
assertEquals ( 0L , dLContentSoap0 . getPrimaryKey ( ) )
assertNull ( blob0 )
assertEquals ( 1742L , dLContentSoap0 . getRepositoryId ( ) )
assertEquals ( 0L , dLContentSoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1742L , dLContentSoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLContentSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( dLContentSoapArray0 )
assertEquals ( 0L , dLFileShortcutSoap0 . getStatusByUserId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 12L ) , dLFileShortcutSoap0 . getToFileEntryId ( ) )
assertEquals ( 0L , dLFileShortcutSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0 , dLFileShortcutSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1057L , dLFileShortcutSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 12L ) , dLFileShortcutSoap0 . getFolderId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileShortcutSoap0 . getGroupId ( ) )
assertNull ( dLFileShortcutSoap0 . getUserName ( ) )
assertNull ( dLFileShortcutSoap0 . getUserName ( ) )
assertNull ( string0 )
assertEquals ( 0L , dLFileShortcutSoap0 . getFolderId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , dLFileShortcutSoap0 . getActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLFileShortcutSoap0 . getGroupId ( ) )
assertEquals ( - 50 , dLFileShortcutSoap0 . getStatus ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( false , dLFileShortcutSoap0 . getActive ( ) )
assertEquals ( ( - 12L ) , dLFileShortcutSoap0 . getCompanyId ( ) )
assertNull ( dLFileShortcutSoap0 . getUuid ( ) )
assertNotNull ( dLFileShortcutSoapArray0 )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 1624L , dLFolderSoap0 . getPrimaryKey ( ) )
assertEquals ( false , dLFolderSoap0 . getHidden ( ) )
assertEquals ( true , dLFolderSoap0 . getMountPoint ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0 , dLFolderSoap0 . getStatus ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , dLFolderSoap0 . getParentFolderId ( ) )
assertEquals ( false , dLFolderSoap0 . getOverrideFileEntryTypes ( ) )
assertNull ( dLFolderSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , dLFolderSoap0 . getParentFolderId ( ) )
assertEquals ( 1624L , dLFolderSoap0 . getCompanyId ( ) )
assertNull ( dLFolderSoap0 . getStatusByUserName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , dLFolderSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , dLFolderSoap0 . getOverrideFileEntryTypes ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , dLFolderSoap0 . isMountPoint ( ) )
assertEquals ( 0L , dLFolderSoap0 . getStatusByUserId ( ) )
assertEquals ( 1527L , dLFolderSoap0 . getStatusByUserId ( ) )
assertEquals ( 1527L , dLFolderSoap0 . getRepositoryId ( ) )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , dLFolderSoap0 . getMountPoint ( ) )
assertEquals ( false , dLFolderSoap0 . isOverrideFileEntryTypes ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1527L , dLFolderSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( false , dLFolderSoap0 . getHidden ( ) )
assertEquals ( 515 , dLFolderSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( dLFolderSoapArray0 )
assertNull ( string0 )
assertNull ( dLSyncSoap0 . getVersion ( ) )
assertNull ( string0 )
assertEquals ( ( - 2067L ) , dLSyncSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( dLSyncSoap0 . getName ( ) )
assertNull ( dLSyncSoap0 . getDescription ( ) )
assertNull ( string0 )
assertEquals ( 0L , dLSyncSoap0 . getParentFolderId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1146L ) , dLSyncSoap0 . getParentFolderId ( ) )
assertEquals ( ( - 2067L ) , dLSyncSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( dLSyncSoap0 . getType ( ) )
assertNull ( dLSyncSoap0 . getDescription ( ) )
assertNull ( date0 )
assertNull ( dLSyncSoap0 . getName ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 1L , dLSyncSoap0 . getRepositoryId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dLSyncSoap0 . getRepositoryId ( ) )
assertEquals ( 0L , dLSyncSoap0 . getParentFolderId ( ) )
assertNotNull ( dLSyncSoapArray0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "Thu Jan 01 00 : 59 : 58 GMT 1970" , date1 . toString ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFolder" , string0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFolder" , dLFolderConstants0 . getClassName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 542L , long0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileVersion" , string0 )
assertNull ( dLFileVersion0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertNull ( dLFileEntryType0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntryType" , string0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntryMetadata" , string0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertNull ( dLFileEntryMetadata0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntryMetadata" , dLFileEntryMetadataWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileRank" , string0 )
assertNull ( dLFileRank0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "DLFolder" , class0 . getSimpleName ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFolder" , string0 )
assertNull ( dLFolder0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertNull ( dLFileEntry0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntry" , string0 )
assertEquals ( " { uuid = null , fileVersionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , repositoryId = 0 , folderId = 0 , fileEntryId = 0 , extension = null , mimeType = null , title = null , description = null , changeLog = null , extraSettings = null , fileEntryTypeId = 0 , version = null , size = 0 , checksum = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0 , dLFileVersionCacheModel0 . status )
assertEquals ( 0L , dLFileVersionCacheModel0 . statusDate )
assertEquals ( 0 , dLFileVersionCacheModel0 . status )
assertEquals ( 0L , dLFileVersionCacheModel0 . companyId )
assertEquals ( " { fileRankId = 0 , groupId = 0 , companyId = 0 , userId = 0 , createDate = 0 , fileEntryId = 0 , active = false } " , string0 )
assertEquals ( " { syncId = 0 , companyId = 0 , createDate = 0 , modifiedDate = 0 , fileId = 0 , fileUuid = null , repositoryId = 0 , parentFolderId = 0 , name = null , description = null , event = null , type = null , version = null } " , string0 )
assertEquals ( 0L , dLSyncCacheModel0 . syncId )
assertEquals ( 0L , dLSyncCacheModel0 . repositoryId )
assertEquals ( 0L , dLSyncCacheModel0 . repositoryId )
assertEquals ( 0L , dLSyncCacheModel0 . companyId )
assertEquals ( " { uuid = null , fileEntryMetadataId = 0 , DDMStorageId = 0 , DDMStructureId = 0 , fileEntryTypeId = 0 , fileEntryId = 0 , fileVersionId = 0 } " , string0 )
assertEquals ( 0L , dLFileEntryMetadataCacheModel0 . fileVersionId )
assertEquals ( " { uuid = null , fileEntryTypeId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , dLFileEntryTypeCacheModel0 . createDate )
assertEquals ( " { uuid = null , fileEntryTypeId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , description = null } " , dLFileEntryTypeCacheModel0 . toString ( ) )
assertEquals ( 0L , dLFileEntryTypeCacheModel0 . modifiedDate )
assertEquals ( " { uuid = null , folderId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , repositoryId = 0 , mountPoint = false , parentFolderId = 0 , name = null , description = null , lastPostDate = 0 , defaultFileEntryTypeId = 0 , hidden = false , overrideFileEntryTypes = false , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( false , dLFolderCacheModel0 . overrideFileEntryTypes )
assertEquals ( 0L , dLFolderCacheModel0 . folderId )
assertEquals ( false , dLFolderCacheModel0 . mountPoint )
assertEquals ( " { uuid = null , fileEntryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , versionUserId = 0 , versionUserName = null , createDate = 0 , modifiedDate = 0 , repositoryId = 0 , folderId = 0 , name = null , extension = null , mimeType = null , title = null , description = null , extraSettings = null , fileEntryTypeId = 0 , version = null , size = 0 , readCount = 0 , smallImageId = 0 , largeImageId = 0 , custom1ImageId = 0 , custom2ImageId = 0 , manualCheckInRequired = false } " , string0 )
assertEquals ( 0L , dLFileEntryCacheModel0 . custom2ImageId )
assertEquals ( 0L , dLFileEntryCacheModel0 . custom2ImageId )
assertEquals ( " { contentId = 0 , groupId = 0 , companyId = 0 , repositoryId = 0 , path = null , version = null , size = 0 } " , string0 )
assertEquals ( 0L , dLContentCacheModel0 . contentId )
assertEquals ( 0L , dLContentCacheModel0 . repositoryId )
assertEquals ( " { uuid = null , fileShortcutId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , repositoryId = 0 , folderId = 0 , toFileEntryId = 0 , active = false , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , dLFileShortcutCacheModel0 . repositoryId )
assertEquals ( 0L , dLFileShortcutCacheModel0 . statusByUserId )
assertEquals ( 0L , dLFileShortcutCacheModel0 . statusByUserId )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( folderUtil0 )
assertNotNull ( stringArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( fileEntryUtil0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntry" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "document" , string0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . documentlibrary . model . DLFileEntry" , string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "document" , string0 )
assertNotNull ( dLFileShortcutLocalServiceUtil0 )
assertNotNull ( dLFileShortcutServiceUtil0 )
assertNull ( dLFileShortcutLocalService0 )
assertNull ( dLFolderService0 )
assertNotNull ( dLFolderLocalServiceUtil0 )
assertNull ( dLAppHelperLocalService0 )
assertNotNull ( dLFileVersionServiceUtil0 )
assertNotNull ( dLAppServiceUtil0 )
assertNotNull ( dLFolderServiceUtil0 )
assertNull ( dLFileShortcutService0 )
assertNull ( dLSyncLocalService0 )
assertNotNull ( dLSyncServiceUtil0 )
assertNull ( dLSyncService0 )
assertNull ( dLFileVersionService0 )
assertNull ( dLFileVersionLocalService0 )
assertNotNull ( dLAppHelperLocalServiceUtil0 )
assertNull ( dLAppLocalService0 )
assertNotNull ( dLAppLocalServiceUtil0 )
assertNull ( dLFolderLocalService0 )
assertNull ( dLFileRankLocalService0 )
assertNotNull ( dLFileVersionServiceHttp0 )
assertNotNull ( dLFolderServiceHttp0 )
assertNotNull ( dLSyncServiceHttp0 )
assertNotNull ( dLSyncServiceSoap0 )
assertNotNull ( dLFileEntryServiceHttp0 )
assertNotNull ( dLFileEntryTypeServiceHttp0 )
assertNotNull ( dLFileEntryServiceSoap0 )
assertNotNull ( dLFolderServiceSoap0 )
assertNotNull ( dLFileShortcutServiceHttp0 )
assertNotNull ( dLAppServiceSoap0 )
assertNotNull ( dLFileShortcutServiceSoap0 )
assertNotNull ( dLFileEntryTypeServiceSoap0 )
assertNotNull ( dLFileVersionServiceSoap0 )
assertNotNull ( dLFolderFinderUtil0 )
assertEquals ( true , boolean0 )
assertEquals ( 0L , long0 )
assertNotNull ( videoProcessorUtil0 )
assertNotNull ( jQTFastStart0 )
assertEquals ( true , boolean0 )
assertEquals ( true , dLAppHelperThreadLocal0 . isEnabled ( ) )
assertNull ( iContainer0 )
assertNotNull ( liferayVideoConverter0 )
assertNull ( iContainer0 )
assertNotNull ( rawMetadataProcessorUtil0 )
assertNotNull ( liferayAudioConverter0 )
assertNotNull ( liferayAudioConverter0 )
assertEquals ( 1915361385 , secureRandom0 . nextInt ( ) )
assertNotNull ( liferayVideoConverter0 )
assertNotNull ( liferayAudioConverter0 )
assertNotNull ( pDFProcessorUtil0 )
assertNotNull ( imageProcessorUtil0 )
assertEquals ( 0 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertNotNull ( file0 )
assertEquals ( " / tmp / liferay / document_preview / png . png" , string0 )
assertNotNull ( file0 )
assertEquals ( 0 , int0 )
assertNotNull ( file0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "png" , pDFProcessorImpl0 . getThumbnailType ( ) )
assertNotNull ( string0 )
assertEquals ( "png" , string0 )
assertEquals ( "png" , string0 )
assertEquals ( "png" , pDFProcessorImpl0 . getPreviewType ( ) )
assertEquals ( "png" , pDFProcessorImpl0 . getThumbnailType ( ) )
assertNotNull ( dLAppUtil0 )
assertEquals ( "" , string0 )
assertEquals ( 44100 , liferayAudioConverter0 . getAudioSampleRate ( ) )
assertEquals ( 44100 , int0 )
assertEquals ( 44100 , int0 )
assertEquals ( true , dLProcessorThreadLocal0 . isEnabled ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "readCount DESC" , string0 )
assertEquals ( "readCount ASC" , string0 )
assertEquals ( "DLContent . version DESC" , string0 )
assertEquals ( true , dLContentVersionComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "DLContent . version ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "modifiedDate DESC" , string0 )
assertEquals ( "modifiedDate ASC" , string0 )
assertEquals ( "title DESC" , string0 )
assertEquals ( true , repositoryModelNameComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "title ASC" , string0 )
assertEquals ( "size_ DESC" , string0 )
assertEquals ( true , repositoryModelSizeComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , repositoryModelSizeComparator0 . isAscending ( ) )
assertEquals ( true , repositoryModelCreateDateComparator0 . isAscending ( ) )
assertEquals ( "createDate DESC" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "createDate ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , fileRankCreateDateComparator0 . isAscending ( ) )
assertEquals ( "DLFileRank . createDate DESC" , string0 )
assertEquals ( true , fileRankCreateDateComparator0 . isAscending ( ) )
assertNotNull ( pDFProcessorMessageListener0 )
assertEquals ( false , antivirusScannerWrapper0 . isActive ( ) )
assertEquals ( false , antivirusScannerWrapper0 . isActive ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , antivirusScannerWrapper0 . isActive ( ) )
assertEquals ( true , antivirusScannerWrapper0 . isActive ( ) )
assertEquals ( false , antivirusScannerWrapper0 . isActive ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , antivirusScannerUtil0 . isActive ( ) )
assertEquals ( false , dummyAntivirusScannerImpl0 . isActive ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , dummyAntivirusScannerImpl0 . isActive ( ) )
assertEquals ( "folders" , string0 )
assertEquals ( "null folders" , string0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiPage" , string0 )
assertEquals ( " / common / pages . png" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( configurationActionImpl0 )
assertNotNull ( rSSAction0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( findPageAction0 )
assertNotNull ( findPageAction0 )
assertNotNull ( findPageAction0 )
assertNotNull ( findPageAction0 )
assertEquals ( false , boolean0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNull ( wikiPage0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiPage" , string0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( 0L , wikiPageResourceSoap0 . getNodeId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( wikiPageResourceSoap0 . getUuid ( ) )
assertEquals ( 0L , wikiPageResourceSoap0 . getNodeId ( ) )
assertNull ( string0 )
assertEquals ( 0L , wikiPageResourceSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNotNull ( wikiPageResourceSoapArray0 )
assertEquals ( 0L , wikiNodeSoap0 . getStatusByUserId ( ) )
assertNull ( date0 )
assertEquals ( ( - 22L ) , wikiNodeSoap0 . getCompanyId ( ) )
assertEquals ( 0L , wikiNodeSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 661L , wikiNodeSoap0 . getUserId ( ) )
assertNull ( date0 )
assertNull ( wikiNodeSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , wikiNodeSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 22 , wikiNodeSoap0 . getStatus ( ) )
assertNull ( string0 )
assertEquals ( 0L , wikiNodeSoap0 . getStatusByUserId ( ) )
assertEquals ( 0L , wikiNodeSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 857L ) , wikiNodeSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , wikiNodeSoap0 . getUserId ( ) )
assertEquals ( ( - 857L ) , wikiNodeSoap0 . getStatusByUserId ( ) )
assertEquals ( 661L , wikiNodeSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( wikiNodeSoap0 . getUuid ( ) )
assertEquals ( 0L , wikiNodeSoap0 . getUserId ( ) )
assertNotNull ( wikiNodeSoapArray0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiNode" , string0 )
assertEquals ( "interface com . liferay . portlet . wiki . model . WikiNode" , class0 . toString ( ) )
assertNull ( wikiNode0 )
assertEquals ( true , wikiPageSoap0 . getHead ( ) )
assertEquals ( 0L , long0 )
assertNull ( wikiPageSoap0 . getUserName ( ) )
assertNull ( wikiPageSoap0 . getParentTitle ( ) )
assertEquals ( 0L , wikiPageSoap0 . getPageId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 468L ) , wikiPageSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( wikiPageSoap0 . getUserName ( ) )
assertNull ( wikiPageSoap0 . getRedirectTitle ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( wikiPageSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertNull ( wikiPageSoap0 . getFormat ( ) )
assertEquals ( false , wikiPageSoap0 . getMinorEdit ( ) )
assertEquals ( true , wikiPageSoap0 . isMinorEdit ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , wikiPageSoap0 . getResourcePrimKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , wikiPageSoap0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 1478L ) , wikiPageSoap0 . getStatusByUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , wikiPageSoap0 . getResourcePrimKey ( ) )
assertEquals ( 0 . 0 , wikiPageSoap0 . getVersion ( ) , 0 . 01D )
assertEquals ( false , wikiPageSoap0 . getMinorEdit ( ) )
assertNull ( string0 )
assertNull ( wikiPageSoap0 . getRedirectTitle ( ) )
assertEquals ( false , wikiPageSoap0 . getMinorEdit ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0 , wikiPageSoap0 . getStatus ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( wikiPageSoap0 . getRedirectTitle ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , wikiPageSoap0 . getStatus ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertNull ( wikiPageSoap0 . getFormat ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertNotNull ( wikiPageSoapArray0 )
assertEquals ( " { uuid = null , pageId = 0 , resourcePrimKey = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , nodeId = 0 , title = null , version = 0 . 0 , minorEdit = false , content = null , summary = null , format = null , head = false , parentTitle = null , redirectTitle = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , wikiPageCacheModel0 . userId )
assertEquals ( 0L , wikiPageCacheModel0 . resourcePrimKey )
assertEquals ( 0L , wikiPageCacheModel0 . userId )
assertEquals ( " { uuid = null , pageId = 0 , resourcePrimKey = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , nodeId = 0 , title = null , version = 0 . 0 , minorEdit = false , content = null , summary = null , format = null , head = false , parentTitle = null , redirectTitle = , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , wikiPageCacheModel0 . toString ( ) )
assertEquals ( ( - 1L ) , wikiPageDisplayImpl0 . getUserId ( ) )
assertEquals ( ( - 377 . 0 ) , wikiPageDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 1688 . 8365414307157 ) , wikiPageDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 667L ) , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( 1 . 0 , wikiPageDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( ( - 740L ) , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( 857 . 1198322652755 , wikiPageDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( true , wikiPageDisplayImpl0 . isHead ( ) )
assertEquals ( 1L , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( ( - 1L ) , wikiPageDisplayImpl0 . getUserId ( ) )
assertEquals ( 1L , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( 1L , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( 1L , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( ( - 667L ) , wikiPageDisplayImpl0 . getNodeId ( ) )
assertEquals ( ( - 1L ) , wikiPageDisplayImpl0 . getUserId ( ) )
assertEquals ( true , wikiPageDisplayImpl0 . getHead ( ) )
assertEquals ( ( - 1L ) , wikiPageDisplayImpl0 . getUserId ( ) )
assertEquals ( "9_ , 8hhG ; l" , wikiPageDisplayImpl0 . getFormattedContent ( ) )
assertEquals ( " { uuid = null , nodeId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , description = null , lastPostDate = 0 , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , wikiNodeCacheModel0 . groupId )
assertEquals ( 0L , wikiNodeCacheModel0 . nodeId )
assertEquals ( 0 , wikiNodeCacheModel0 . status )
assertNotNull ( string0 )
assertEquals ( " { uuid = { uuid = null , resourcePrimKey = 0 , nodeId = 0 , title = null } , resourcePrimKey = 0 , nodeId = 0 , title = null } " , wikiPageResourceCacheModel0 . toString ( ) )
assertEquals ( " { uuid = null , resourcePrimKey = 0 , nodeId = 0 , title = null } " , wikiPageResourceCacheModel0 . toString ( ) )
assertEquals ( 2 , portletPreferencesImpl0 . size ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( "" , string0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiNode" , wikiNodeWrapper0 . getModelClassName ( ) )
assertEquals ( true , elementImpl0 . supportsParent ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertNull ( portletURL0 )
assertEquals ( " / common / pages . png" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , map0 . isEmpty ( ) )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( string0 )
assertNull ( list0 )
assertEquals ( 0 , dummyDataHandler0 . lookupWikiUserCount ( ) )
assertNull ( watchlist0 )
assertNull ( wikiFile0 )
assertNull ( namespace0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( list0 )
assertEquals ( 0 , int0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( namespace0 )
assertNull ( wikiUser0 )
assertEquals ( "zh" , locale0 . getLanguage ( ) )
assertNull ( topic0 )
assertEquals ( "ROLE_UPLOAD" , role0 . getAuthority ( ) )
assertNull ( list0 )
assertNull ( list0 )
assertEquals ( 0 , dummyDataHandler0 . lookupWikiUserCount ( ) )
assertEquals ( 0 , dummyDataHandler0 . lookupWikiUserCount ( ) )
assertEquals ( 0 , int0 )
assertNull ( wikiGroup0 )
assertNull ( interwiki0 . getInterwikiPattern ( ) )
assertEquals ( "en" , locale0 . getLanguage ( ) )
assertNull ( virtualWiki0 )
assertEquals ( 0 , dummyDataHandler0 . lookupWikiUserCount ( ) )
assertEquals ( 0 , dummyDataHandler0 . lookupWikiUserCount ( ) )
assertNull ( list0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertEquals ( "1DV1O" , string0 )
assertEquals ( "\" / dsaP1gQP" , string0 )
assertEquals ( 1 , list0 . size ( ) )
assertNotNull ( list0 )
assertEquals ( true , unsyncByteArrayInputStream0 . markSupported ( ) )
assertEquals ( true , collection0 . isEmpty ( ) )
assertEquals ( true , collection0 . isEmpty ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayAttachmentProvider" , liferayAttachmentProvider0 . getProviderInfo ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayAttachmentProvider" , string0 )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayAttachmentProvider" , liferayAttachmentProvider0 . getProviderInfo ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayAttachmentProvider" , liferayAttachmentProvider0 . getProviderInfo ( ) )
assertEquals ( " { } " , properties0 . toString ( ) )
assertEquals ( "Wiki . jsp" , string0 )
assertEquals ( "Wiki . jsp" , string0 )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , liferayPageProvider0 . getProviderInfo ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , liferayPageProvider0 . getProviderInfo ( ) )
assertEquals ( 0 , collection0 . size ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , string0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , liferayPageProvider0 . getProviderInfo ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , liferayPageProvider0 . getProviderInfo ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferayPageProvider" , liferayPageProvider0 . getProviderInfo ( ) )
assertNotNull ( groupArray0 )
assertEquals ( true , properties0 . isEmpty ( ) )
assertEquals ( " { } " , properties0 . toString ( ) )
assertEquals ( true , collection0 . isEmpty ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferaySearchProvider" , string0 )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferaySearchProvider" , liferaySearchProvider0 . getProviderInfo ( ) )
assertEquals ( "com . liferay . portlet . wiki . engines . jspwiki . LiferaySearchProvider" , liferaySearchProvider0 . getProviderInfo ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "\" : I } " , string0 )
assertEquals ( "null\n \n %%error \n [ CreoleFilterError ] : This page was not translated by the CreoleFilter due to the following error : null\n \n%%\n \n" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( " { } " , properties0 . toString ( ) )
assertEquals ( 0 , wikiPageNode0 . getChildASTNodesCount ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "section - date - date" , string0 )
assertEquals ( "" , imageNode0 . getLink ( ) )
assertEquals ( true , imageNode0 . hasAltCollectionNode ( ) )
assertEquals ( true , imageNode0 . isAbsoluteLink ( ) )
assertEquals ( false , treeNode1 . isRootNode ( ) )
assertEquals ( true , treeNode0 . isRootNode ( ) )
assertNotNull ( treeNode0 )
assertEquals ( "" , unformattedHeadingTextVisitor0 . getText ( ) )
assertEquals ( "" , string0 )
assertEquals ( "rC0" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "tZetPane" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "rC0" , unformattedLinksTextVisitor0 . getText ( ) )
assertEquals ( "" , unformattedHeadingTextVisitor0 . getText ( ) )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "36" , string0 )
assertEquals ( "wiki_node" , string0 )
assertNotNull ( string0 )
assertEquals ( "wiki_page" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiPage" , string0 )
assertEquals ( "36" , string0 )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "wiki" , string0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiNode" , string0 )
assertEquals ( "com . liferay . portlet . wiki . model . WikiPage" , string0 )
assertNull ( wikiNodeLocalService0 )
assertNotNull ( wikiNodeServiceUtil0 )
assertNull ( wikiNodeService0 )
assertNotNull ( wikiNodeLocalServiceUtil0 )
assertNotNull ( wikiPageLocalServiceUtil0 )
assertEquals ( true , wikiCacheThreadLocal0 . isClearCache ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "The process cannot access the file because it is being used by another process . " , string0 )
assertNotNull ( wikiUtil0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( pageVersionComparator0 )
assertNotNull ( pageCreateDateComparator0 )
assertNull ( pageCreateDateComparator0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "WikiPage . title DESC" , string0 )
assertEquals ( "WikiPage . title ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , pageVersionComparator0 . isAscending ( ) )
assertEquals ( "WikiPage . version DESC" , string0 )
assertEquals ( true , pageVersionComparator0 . isAscending ( ) )
assertEquals ( true , pageCreateDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "WikiPage . createDate DESC" , string0 )
assertEquals ( true , pageCreateDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( mediaWikiToCreoleTranslator0 )
assertNotNull ( mediaWikiToCreoleTranslator0 )
assertNotNull ( iFramePortlet0 )
assertNotNull ( configurationActionImpl0 )
assertNotNull ( iFrameUtil0 )
assertNotNull ( actionUtil0 )
assertNotNull ( actionUtil0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( assetRendererFactory0 )
assertNull ( assetTagStats0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , string0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetEntry" , string0 )
assertNull ( assetEntry0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , assetLinkSoap0 . getUserId ( ) )
assertEquals ( 0L , assetLinkSoap0 . getLinkId ( ) )
assertEquals ( 0L , assetLinkSoap0 . getUserId ( ) )
assertEquals ( 9L , assetLinkSoap0 . getCompanyId ( ) )
assertEquals ( 0 , assetLinkSoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 9 , assetLinkSoap0 . getWeight ( ) )
assertEquals ( 59L , assetLinkSoap0 . getEntryId1 ( ) )
assertEquals ( - 60 , date0 . getTimezoneOffset ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 59 , assetLinkSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( assetLinkSoapArray0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( portletURL0 )
assertNull ( string0 )
assertEquals ( "view - in - context" , string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( portletURL0 )
assertEquals ( 0L , assetVocabularySoap0 . getGroupId ( ) )
assertEquals ( " ( 5WV / yi" , assetVocabularySoap0 . getTitle ( ) )
assertNull ( assetVocabularySoap0 . getSettings ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( assetVocabularySoap0 . getDescription ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , assetVocabularySoap0 . getVocabularyId ( ) )
assertNull ( date0 )
assertNull ( assetVocabularySoap0 . getSettings ( ) )
assertEquals ( 0L , assetVocabularySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( assetVocabularySoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , assetVocabularySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( assetVocabularySoap0 . getName ( ) )
assertNull ( assetVocabularySoap0 . getUuid ( ) )
assertNull ( assetVocabularySoap0 . getDescription ( ) )
assertNotNull ( assetVocabularySoapArray0 )
assertEquals ( 0L , assetEntryType0 . getClassNameId ( ) )
assertNull ( assetEntryType0 . getPortletId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( assetEntryType0 . getPortletId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , assetEntryType0 . getClassNameId ( ) )
assertNull ( string0 )
assertEquals ( true , class0 . isInterface ( ) )
assertNull ( assetTag0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , string0 )
assertEquals ( 1143L , assetTagPropertySoap0 . getTagId ( ) )
assertEquals ( 720L , assetTagPropertySoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , assetTagPropertySoap0 . getTagPropertyId ( ) )
assertNull ( assetTagPropertySoap0 . getKey ( ) )
assertEquals ( 720L , assetTagPropertySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( assetTagPropertySoap0 . getValue ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( assetTagPropertySoap0 . getValue ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( assetTagPropertySoap0 . getValue ( ) )
assertNull ( assetTagPropertySoap0 . getKey ( ) )
assertNotNull ( assetTagPropertySoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , assetTagStatsSoap0 . getTagStatsId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 6L ) , assetTagStatsSoap0 . getTagId ( ) )
assertEquals ( 6 , assetTagStatsSoap0 . getAssetCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 6L ) , assetTagStatsSoap0 . getPrimaryKey ( ) )
assertNotNull ( assetTagStatsSoapArray0 )
assertNull ( assetTagProperty0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , string0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertNull ( assetRenderer0 )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecord" , dDLRecordAssetRendererFactory0 . getClassName ( ) )
assertNull ( map0 )
assertEquals ( true , calEventAssetRendererFactory0 . isSelectable ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( portletURL0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , string0 )
assertNull ( assetLink0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNotNull ( assetLinkConstants0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , assetTagSoap0 . getGroupId ( ) )
assertEquals ( 904L , assetTagSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 30L ) , assetTagSoap0 . getCompanyId ( ) )
assertEquals ( 0L , assetTagSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , assetTagSoap0 . getTagId ( ) )
assertNull ( assetTagSoap0 . getName ( ) )
assertEquals ( 0L , assetTagSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 904 , assetTagSoap0 . getAssetCount ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( ( - 30L ) , assetTagSoap0 . getGroupId ( ) )
assertNotNull ( assetTagSoapArray0 )
assertEquals ( " { tagPropertyId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , tagId = 0 , key = null , value = null } " , string0 )
assertEquals ( 0L , assetTagPropertyCacheModel0 . createDate )
assertEquals ( 0L , assetTagPropertyCacheModel0 . companyId )
assertEquals ( 0L , assetTagPropertyCacheModel0 . tagId )
assertEquals ( " { linkId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , entryId1 = 0 , entryId2 = 0 , type = 0 , weight = 0 } " , string0 )
assertEquals ( 0L , assetLinkCacheModel0 . userId )
assertEquals ( 0L , assetLinkCacheModel0 . entryId2 )
assertEquals ( " { uuid = null , vocabularyId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , title = null , description = null , settings = null } " , string0 )
assertEquals ( 0L , assetVocabularyCacheModel0 . modifiedDate )
assertEquals ( 0L , assetVocabularyCacheModel0 . modifiedDate )
assertEquals ( " { uuid = null , vocabularyId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = DXCN & , title = null , description = null , settings = null } " , assetVocabularyCacheModel0 . toString ( ) )
assertEquals ( " { tagId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , assetCount = 0 } " , string0 )
assertEquals ( 0L , assetTagCacheModel0 . createDate )
assertEquals ( 0L , assetTagCacheModel0 . tagId )
assertEquals ( 0L , assetTagCacheModel0 . groupId )
assertEquals ( " { entryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , classUuid = null , classTypeId = 0 , visible = false , startDate = 0 , endDate = 0 , publishDate = 0 , expirationDate = 0 , mimeType = null , title = null , description = null , summary = null , url = null , layoutUuid = null , height = 0 , width = 0 , priority = 0 . 0 , viewCount = 0 } " , string0 )
assertEquals ( 0 , assetEntryCacheModel0 . width )
assertEquals ( 0 , assetEntryCacheModel0 . height )
assertEquals ( 0 , assetEntryCacheModel0 . height )
assertEquals ( 0 , assetEntryCacheModel0 . viewCount )
assertEquals ( 0 , assetEntryCacheModel0 . width )
assertEquals ( " { uuid = null , categoryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentCategoryId = 0 , leftCategoryId = 0 , rightCategoryId = 0 , name = null , title = null , description = null , vocabularyId = 0 } " , string0 )
assertEquals ( " { uuid = L0az9 , categoryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentCategoryId = 0 , leftCategoryId = 0 , rightCategoryId = 0 , name = null , title = null , description = null , vocabularyId = 0 } " , assetCategoryCacheModel0 . toString ( ) )
assertEquals ( 0L , assetCategoryCacheModel0 . categoryId )
assertEquals ( 0L , assetCategoryCacheModel0 . rightCategoryId )
assertEquals ( 0 , assetTagStatsCacheModel0 . assetCount )
assertEquals ( " { tagStatsId = 0 , tagId = 0 , classNameId = 0 , assetCount = 0 } " , string0 )
assertEquals ( " { categoryPropertyId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , categoryId = 0 , key = null , value = null } " , string0 )
assertEquals ( 0L , assetCategoryPropertyCacheModel0 . categoryPropertyId )
assertEquals ( 0L , assetCategoryPropertyCacheModel0 . createDate )
assertEquals ( 0L , assetCategoryPropertyCacheModel0 . companyId )
assertNotNull ( assetCategoryPropertyServiceUtil0 )
assertNotNull ( assetVocabularyLocalServiceUtil0 )
assertNull ( assetCategoryService0 )
assertNull ( assetEntryLocalService0 )
assertNotNull ( assetEntryLocalServiceUtil0 )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( assetCategoryLocalService0 )
assertNotNull ( assetCategoryServiceUtil0 )
assertNotNull ( assetTagLocalServiceUtil0 )
assertNotNull ( assetTagServiceUtil0 )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetTagPropertyService0 )
assertNull ( assetTagStatsLocalService0 )
assertNotNull ( assetTagStatsLocalServiceUtil0 )
assertNull ( assetTagService0 )
assertNull ( assetCategoryPropertyService0 )
assertNotNull ( assetCategoryLocalServiceUtil0 )
assertNull ( assetEntryService0 )
assertNotNull ( assetTagPropertyServiceUtil0 )
assertNotNull ( assetEntryServiceUtil0 )
assertNull ( assetLinkLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( assetCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "kL = mhh ! kQU" , assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , string0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyKeyFinder0 )
assertNull ( groupLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( assetEntryFinder0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupFinder0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( userService0 )
assertNull ( userLocalService0 )
assertNull ( assetVocabularyLocalService0 )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( assetTagPersistence0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetLinkFinder0 )
assertNull ( assetEntryService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalService0 )
assertNull ( assetLinkPersistence0 )
assertNull ( groupPersistence0 )
assertNull ( assetEntryLocalService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( assetTagService0 )
assertNull ( groupService0 )
assertNull ( userPersistence0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryPersistence0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagFinder0 )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetCategoryFinder0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetLinkLocalService0 )
assertNull ( assetTagPropertyService0 )
assertNull ( assetVocabularyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetVocabulary" , assetVocabularyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagService0 )
assertNull ( resourceLocalService0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryPersistence0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( assetCategoryPersistence0 )
assertNull ( assetTagPropertyKeyFinder0 )
assertNull ( assetLinkFinder0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( userService0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyLocalService0 )
assertNull ( assetEntryService0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyService0 )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalService0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryService0 )
assertNull ( assetTagStatsLocalService0 )
assertNull ( assetCategoryPropertyFinder0 )
assertEquals ( "" , assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , class0 . getCanonicalName ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetLinkLocalService0 )
assertNull ( assetCategoryPropertyPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( assetTagFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , string0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetVocabularyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryFinder0 )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPersistence0 )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetEntryLocalService0 )
assertNull ( userFinder0 )
assertNull ( assetLinkPersistence0 )
assertNull ( assetTagServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetLinkPersistence0 )
assertNull ( assetEntryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , string0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetTagPropertyService0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertNull ( resourceLocalService0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPersistence0 )
assertNull ( counterLocalService0 )
assertNull ( assetLinkLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkFinder0 )
assertNull ( assetTagLocalService0 )
assertNull ( assetTagService0 )
assertNull ( assetTagPropertyKeyFinder0 )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( userPersistence0 )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetCategoryPropertyService0 )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( assetVocabularyService0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyLocalService0 )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( assetCategoryLocalService0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetEntryService0 )
assertNull ( userFinder0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalService0 )
assertNull ( assetCategoryService0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryFinder0 )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , assetTagLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryLocalService0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( assetTagPersistence0 )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagFinder0 )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( assetTagPropertyService0 )
assertNull ( assetVocabularyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , string0 )
assertNull ( userFinder0 )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalService0 )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetCategoryService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryLocalService0 )
assertNull ( assetLinkPersistence0 )
assertNull ( string0 )
assertNull ( assetEntryService0 )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetTagStatsLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( userLocalService0 )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagService0 )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetEntryPersistence0 )
assertNull ( assetLinkFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "kA : I9YGcB ( o" , assetTagPropertyLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyKeyFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( counterLocalService0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPersistence0 )
assertNull ( assetEntryService0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetTagService0 )
assertNull ( assetTagPropertyPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , string0 )
assertNull ( assetTagLocalService0 )
assertNull ( assetTagPropertyKeyFinder0 )
assertNull ( string0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "" , assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( assetVocabularyService0 )
assertNull ( assetVocabularyLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPersistence0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryFinder0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "interface com . liferay . portlet . asset . model . AssetTagProperty" , class0 . toString ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkFinder0 )
assertNull ( assetLinkLocalService0 )
assertNull ( assetLinkPersistence0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryService0 )
assertNull ( assetEntryLocalService0 )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetEntryPersistence0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryLocalService0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( assetTagPropertyServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagProperty" , assetTagPropertyServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( assetCategoryPropertyService0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertNull ( assetVocabularyLocalService0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetTagFinder0 )
assertNull ( assetTagPersistence0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyService0 )
assertNull ( assetCategoryLocalService0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalService0 )
assertNull ( userLocalService0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( userPersistence0 )
assertNull ( assetEntryFinder0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( userFinder0 )
assertNull ( assetLinkLocalService0 )
assertNull ( assetTagStatsLocalService0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkFinder0 )
assertNull ( assetTagPropertyFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPersistence0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( assetEntryLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , string0 )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetLinkPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( assetVocabularyService0 )
assertNull ( assetTagPropertyService0 )
assertNull ( assetTagService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( assetCategoryFinder0 )
assertNull ( assetTagPropertyKeyFinder0 )
assertNull ( assetCategoryService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetLink" , assetLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( assetLinkLocalService0 )
assertNull ( assetTagPropertyService0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertNull ( assetTagService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetVocabularyService0 )
assertNull ( assetTagPersistence0 )
assertNull ( assetTagPropertyKeyFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , string0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetVocabularyLocalService0 )
assertNull ( assetCategoryFinder0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryLocalService0 )
assertNull ( assetVocabularyFinder0 )
assertNull ( assetVocabularyPersistence0 )
assertNull ( assetTagStatsPersistence0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyPersistence0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyService0 )
assertNull ( assetCategoryPropertyFinder0 )
assertNull ( assetEntryService0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertEquals ( "WFSu8 . j" , assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryFinder0 )
assertNull ( assetTagLocalService0 )
assertNull ( assetTagPropertyFinder0 )
assertNull ( assetCategoryService0 )
assertEquals ( "interface com . liferay . portlet . asset . model . AssetTagStats" , class0 . toString ( ) )
assertNull ( assetTagPropertyLocalService0 )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetLinkPersistence0 )
assertNull ( assetTagFinder0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetCategoryPropertyLocalService0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetCategoryPersistence0 )
assertNull ( assetTagStatsLocalService0 )
assertNull ( assetTagStatsLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryPersistence0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTagStats" , assetTagStatsLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagPropertyPersistence0 )
assertNull ( assetCategoryLocalService0 )
assertNotNull ( assetTagPropertyServiceSoap0 )
assertNotNull ( assetCategoryPropertyServiceHttp0 )
assertNotNull ( assetEntryServiceSoap0 )
assertNotNull ( assetTagServiceHttp0 )
assertNotNull ( assetTagServiceSoap0 )
assertNotNull ( assetCategoryServiceSoap0 )
assertNotNull ( assetCategoryPropertyServiceSoap0 )
assertNotNull ( assetEntryServiceHttp0 )
assertNotNull ( assetTagPropertyServiceHttp0 )
assertNotNull ( assetVocabularyServiceSoap0 )
assertNotNull ( assetPermission0 )
assertNotNull ( assetTagPermission0 )
assertNotNull ( assetVocabularyPermission0 )
assertNotNull ( baseAssetEntryValidator0 )
assertNotNull ( assetUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "singleton - map" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "AssetTag . assetCount DESC" , string0 )
assertEquals ( true , assetTagCountComparator0 . isAscending ( ) )
assertNotNull ( assetTagNameComparator0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertNotNull ( actionUtil0 )
assertNotNull ( adminUtil0 )
assertNotNull ( cleanUpPermissionsUtil0 )
assertNotNull ( omniadminUtil0 )
assertNotNull ( xSLContentUtil0 )
assertEquals ( "com . liferay . portal . model . User" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " / common / user_icon . png" , string0 )
assertNull ( portletURL0 )
assertEquals ( false , boolean0 )
assertEquals ( "user" , string0 )
assertEquals ( " / common / user_icon . png" , string0 )
assertNotNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portal . model . User" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( configurationAction0 )
assertNotNull ( actionUtil0 )
assertNotNull ( portletConfigurationUtil0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( 0 , portletPreferencesImpl0 . size ( ) )
assertEquals ( 0 . 0 , currency0 . getRate ( ) , 0 . 01D )
assertEquals ( "" , currency0 . getSymbol ( ) )
assertEquals ( ( - 1248 . 1065786152005 ) , currency0 . getRate ( ) , 0 . 01D )
assertEquals ( 0 . 0 , currency0 . getRate ( ) , 0 . 01D )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "EUR" , string0 )
assertEquals ( "G ; q" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( 1200000L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( true , trashEntryList0 . isApproximate ( ) )
assertEquals ( 1 , trashEntryList0 . getCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , trashEntryList0 . getCount ( ) )
assertNull ( trashEntrySoapArray0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , class0 . getName ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , string0 )
assertNull ( trashEntry0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , trashVersionSoap0 . getEntryId ( ) )
assertEquals ( 0 , trashVersionSoap0 . getStatus ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , trashVersionSoap0 . getEntryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , trashVersionSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , trashVersionSoap0 . getEntryId ( ) )
assertNotNull ( trashVersionSoapArray0 )
assertNull ( string0 )
assertEquals ( ( - 16L ) , trashEntrySoap0 . getUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , trashEntrySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , trashEntrySoap0 . getEntryId ( ) )
assertEquals ( ( - 8L ) , trashEntrySoap0 . getClassNameId ( ) )
assertNull ( date0 )
assertEquals ( 0L , trashEntrySoap0 . getCompanyId ( ) )
assertEquals ( 0L , trashEntrySoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 8L ) , trashEntrySoap0 . getClassPK ( ) )
assertEquals ( 1 , trashEntrySoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , trashEntrySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , trashEntrySoap0 . getEntryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( trashEntrySoapArray0 )
assertNotNull ( string0 )
assertEquals ( " { entryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , classNameId = 0 , classPK = 0 , typeSettings = null , status = 0 } " , string0 )
assertEquals ( 0L , trashEntryCacheModel0 . classPK )
assertEquals ( 0L , trashEntryCacheModel0 . userId )
assertEquals ( 0L , trashEntryCacheModel0 . companyId )
assertNotNull ( trashEntryServiceUtil0 )
assertNull ( trashEntryService0 )
assertNull ( trashEntryLocalService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( counterLocalService0 )
assertNull ( groupPersistence0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertEquals ( "" , trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( groupService0 )
assertNull ( userLocalService0 )
assertNull ( trashEntryLocalService0 )
assertNull ( userPersistence0 )
assertNull ( trashVersionPersistence0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryPersistence0 )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , string0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupLocalService0 )
assertNull ( groupFinder0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( trashEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( trashEntryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupFinder0 )
assertNull ( counterLocalService0 )
assertNull ( trashEntryPersistence0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryService0 )
assertNull ( resourceLocalService0 )
assertNull ( trashEntryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( trashEntryLocalService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( trashVersionPersistence0 )
assertNull ( trashEntryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( false , class0 . isEnum ( ) )
assertNull ( groupLocalService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( trashEntryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , trashEntryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . trash . model . TrashEntry" , string0 )
assertNull ( trashEntryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupPersistence0 )
assertNotNull ( trashEntryServiceHttp0 )
assertNotNull ( trashEntryServiceSoap0 )
assertEquals ( "nodeId" , string0 )
assertEquals ( "groovy . util . ConfigSlurper$_parse_closure4 / 0" , string0 )
assertNotNull ( entryCreateDateComparator0 )
assertNull ( entryCreateDateComparator0 )
assertEquals ( false , entryUserNameComparator0 . isAscending ( ) )
assertEquals ( "classNameId DESC" , entryTypeComparator0 . getOrderBy ( ) )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "classNameId DESC" , entryTypeComparator0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "classNameId DESC" , string0 )
assertEquals ( true , entryTypeComparator0 . isAscending ( ) )
assertEquals ( "TrashEntry . userName DESC" , entryUserNameComparator0 . getOrderBy ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "TrashEntry . userName DESC" , string0 )
assertEquals ( true , entryUserNameComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "TrashEntry . createDate DESC" , string0 )
assertEquals ( true , entryCreateDateComparator0 . isAscending ( ) )
assertNotNull ( actionUtil0 )
assertEquals ( " / common / folder . png" , string0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , string0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , string0 )
assertNotNull ( findEntryAction0 )
assertNotNull ( findEntryAction0 )
assertNotNull ( actionUtil0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( " , 0O ) 7" , bookmarksEntrySoap0 . getUserName ( ) )
assertEquals ( 0L , bookmarksEntrySoap0 . getFolderId ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 11L ) , bookmarksEntrySoap0 . getResourceBlockId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , bookmarksEntrySoap0 . getVisits ( ) )
assertNull ( bookmarksEntrySoap0 . getDescription ( ) )
assertEquals ( 0L , bookmarksEntrySoap0 . getGroupId ( ) )
assertEquals ( 0L , bookmarksEntrySoap0 . getEntryId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( - 11 , bookmarksEntrySoap0 . getVisits ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 14L ) , bookmarksEntrySoap0 . getFolderId ( ) )
assertEquals ( 0L , bookmarksEntrySoap0 . getResourceBlockId ( ) )
assertEquals ( - 11 , bookmarksEntrySoap0 . getPriority ( ) )
assertEquals ( ( - 11L ) , bookmarksEntrySoap0 . getEntryId ( ) )
assertNull ( bookmarksEntrySoap0 . getDescription ( ) )
assertNull ( bookmarksEntrySoap0 . getUuid ( ) )
assertEquals ( 0 , bookmarksEntrySoap0 . getPriority ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( bookmarksEntrySoapArray0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , string0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertNull ( bookmarksEntry0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , class0 . getCanonicalName ( ) )
assertNull ( bookmarksFolder0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( ( - 966L ) , bookmarksFolderSoap0 . getCompanyId ( ) )
assertNull ( bookmarksFolderSoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( 1558L , bookmarksFolderSoap0 . getGroupId ( ) )
assertNull ( bookmarksFolderSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , bookmarksFolderSoap0 . getFolderId ( ) )
assertEquals ( 0L , bookmarksFolderSoap0 . getCompanyId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 1558L , bookmarksFolderSoap0 . getResourceBlockId ( ) )
assertEquals ( 1558L , bookmarksFolderSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , bookmarksFolderSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( bookmarksFolderSoap0 . getUserName ( ) )
assertNull ( string0 )
assertEquals ( 0L , bookmarksFolderSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , bookmarksFolderSoap0 . getPrimaryKey ( ) )
assertNotNull ( bookmarksFolderSoapArray0 )
assertEquals ( " { uuid = null , entryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , resourceBlockId = 0 , folderId = 0 , name = null , url = null , description = null , visits = 0 , priority = 0 } " , string0 )
assertEquals ( 0 , bookmarksEntryCacheModel0 . visits )
assertEquals ( " { uuid = null , entryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , resourceBlockId = 0 , folderId = 0 , name = null , url = null , description = null , visits = 0 , priority = 0 } " , bookmarksEntryCacheModel0 . toString ( ) )
assertEquals ( 0 , bookmarksEntryCacheModel0 . priority )
assertEquals ( " { uuid = null , folderId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , resourceBlockId = 0 , parentFolderId = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , bookmarksFolderCacheModel0 . userId )
assertEquals ( 0L , bookmarksFolderCacheModel0 . resourceBlockId )
assertEquals ( 0L , bookmarksFolderCacheModel0 . folderId )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , bookmarksPortletDataHandlerImpl0 . isPublishToLiveByDefault ( ) )
assertEquals ( " / ratings / star_hover . png" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "bookmark" , string0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( bookmarksEntryLocalService0 )
assertNull ( bookmarksFolderService0 )
assertNotNull ( bookmarksFolderServiceUtil0 )
assertNotNull ( bookmarksEntryServiceUtil0 )
assertNull ( bookmarksEntryService0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( socialActivityFinder0 )
assertNull ( socialActivityPersistence0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksEntryFinder0 )
assertNull ( bookmarksFolderLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderService0 )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryLocalService0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( expandoValuePersistence0 )
assertNull ( assetLinkPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( assetEntryService0 )
assertEquals ( "" , bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( expandoValueService0 )
assertNull ( portletPreferencesLocalService0 )
assertNull ( userLocalService0 )
assertNull ( assetTagPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( socialActivityLocalService0 )
assertNull ( assetEntryFinder0 )
assertNull ( bookmarksFolderPersistence0 )
assertNull ( assetTagService0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksEntryPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( portletPreferencesFinder0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( expandoValueLocalService0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( portletPreferencesService0 )
assertNull ( assetLinkFinder0 )
assertNull ( subscriptionLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( assetEntryLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( portletPreferencesPersistence0 )
assertNull ( subscriptionPersistence0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryPersistence0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , class0 . getCanonicalName ( ) )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , string0 )
assertNull ( bookmarksEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetLinkLocalService0 )
assertNull ( assetTagFinder0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksEntry" , bookmarksEntryServiceImpl0 . getModelClassName ( ) )
assertNull ( expandoValueLocalService0 )
assertNull ( expandoValuePersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderPersistence0 )
assertNull ( userLocalService0 )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksEntryPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderLocalService0 )
assertNull ( subscriptionLocalService0 )
assertNull ( subscriptionPersistence0 )
assertNull ( groupLocalService0 )
assertNull ( expandoValueService0 )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderService0 )
assertNull ( counterLocalService0 )
assertNull ( bookmarksEntryService0 )
assertNull ( bookmarksEntryLocalService0 )
assertNull ( resourceLocalService0 )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "DQ#k = < A" , bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryFinder0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , string0 )
assertNull ( groupFinder0 )
assertNull ( userService0 )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupPersistence0 )
assertNull ( bookmarksEntryPersistence0 )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , string0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertEquals ( "" , bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( expandoValuePersistence0 )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksFolderService0 )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( bookmarksEntryService0 )
assertNull ( expandoValueService0 )
assertNull ( groupPersistence0 )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( string0 )
assertNull ( groupService0 )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . bookmarks . model . BookmarksFolder" , bookmarksFolderServiceImpl0 . getModelClassName ( ) )
assertNull ( subscriptionLocalService0 )
assertNull ( userFinder0 )
assertNull ( bookmarksEntryFinder0 )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( subscriptionPersistence0 )
assertNull ( bookmarksEntryLocalService0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNull ( bookmarksFolderServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( expandoValueLocalService0 )
assertNull ( bookmarksFolderPersistence0 )
assertNull ( bookmarksFolderLocalService0 )
assertNull ( groupFinder0 )
assertNotNull ( bookmarksFolderServiceSoap0 )
assertNotNull ( bookmarksFolderServiceHttp0 )
assertNotNull ( bookmarksEntryServiceHttp0 )
assertNotNull ( bookmarksEntryServiceSoap0 )
assertEquals ( false , boolean0 )
assertEquals ( false , entryNameComparator0 . isAscending ( ) )
assertEquals ( "BookmarksEntry . name DESC" , string0 )
assertEquals ( "BookmarksEntry . name ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "BookmarksEntry . visits DESC" , string0 )
assertEquals ( "BookmarksEntry . visits ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "BookmarksEntry . priority DESC" , string0 )
assertEquals ( "BookmarksEntry . priority ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "BookmarksEntry . createDate DESC" , string0 )
assertEquals ( "BookmarksEntry . createDate ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "BookmarksEntry . modifiedDate DESC" , string0 )
assertEquals ( "BookmarksEntry . modifiedDate ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "BookmarksEntry . url DESC" , string0 )
assertEquals ( true , entryURLComparator0 . isAscending ( ) )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , shoppingItemFieldSoap0 . getPrimaryKey ( ) )
assertNull ( shoppingItemFieldSoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , shoppingItemFieldSoap0 . getItemFieldId ( ) )
assertNull ( string0 )
assertNull ( shoppingItemFieldSoap0 . getValues ( ) )
assertEquals ( 0L , shoppingItemFieldSoap0 . getItemFieldId ( ) )
assertNotNull ( shoppingItemFieldSoapArray0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , string0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( shoppingCoupon0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertNull ( shoppingOrderSoap0 . getBillingFirstName ( ) )
assertNull ( shoppingOrderSoap0 . getNumber ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( ( - 45 . 52257094724528 ) , shoppingOrderSoap0 . getShipping ( ) , 0 . 01D )
assertEquals ( 0 . 0 , shoppingOrderSoap0 . getPpPaymentGross ( ) , 0 . 01D )
assertNull ( string0 )
assertEquals ( 0L , shoppingOrderSoap0 . getCompanyId ( ) )
assertEquals ( 0L , shoppingOrderSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( false , shoppingOrderSoap0 . isInsure ( ) )
assertNull ( shoppingOrderSoap0 . getCcVerNumber ( ) )
assertNull ( string0 )
assertEquals ( 0L , shoppingOrderSoap0 . getGroupId ( ) )
assertNull ( shoppingOrderSoap0 . getBillingState ( ) )
assertEquals ( false , shoppingOrderSoap0 . getInsure ( ) )
assertEquals ( 0 . 0 , shoppingOrderSoap0 . getShipping ( ) , 0 . 01D )
assertNull ( shoppingOrderSoap0 . getShippingZip ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( shoppingOrderSoap0 . getShippingCompany ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , shoppingOrderSoap0 . isSendShippingEmail ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1036L ) , shoppingOrderSoap0 . getGroupId ( ) )
assertNull ( shoppingOrderSoap0 . getBillingPhone ( ) )
assertNull ( date0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( shoppingOrderSoap0 . getShippingCountry ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , shoppingOrderSoap0 . getUserId ( ) )
assertNull ( shoppingOrderSoap0 . getNumber ( ) )
assertEquals ( false , boolean0 )
assertNull ( shoppingOrderSoap0 . getComments ( ) )
assertEquals ( true , shoppingOrderSoap0 . getShipToBilling ( ) )
assertEquals ( 1L , shoppingOrderSoap0 . getOrderId ( ) )
assertNull ( shoppingOrderSoap0 . getBillingStreet ( ) )
assertNull ( string0 )
assertNull ( shoppingOrderSoap0 . getShippingCountry ( ) )
assertEquals ( 0 . 0 , shoppingOrderSoap0 . getInsurance ( ) , 0 . 01D )
assertNull ( string0 )
assertEquals ( 55 , date0 . getSeconds ( ) )
assertNull ( string0 )
assertNull ( shoppingOrderSoap0 . getShippingStreet ( ) )
assertEquals ( false , shoppingOrderSoap0 . getSendOrderEmail ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( shoppingOrderSoap0 . getCcName ( ) )
assertNull ( string0 )
assertNull ( shoppingOrderSoap0 . getBillingState ( ) )
assertEquals ( true , shoppingOrderSoap0 . isRequiresShipping ( ) )
assertNull ( string0 )
assertEquals ( 113 , date0 . getYear ( ) )
assertNull ( shoppingOrderSoap0 . getBillingStreet ( ) )
assertNull ( shoppingOrderSoap0 . getShippingStreet ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( shoppingOrderSoap0 . getBillingCompany ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( ( - 45 . 52257094724528 ) , shoppingOrderSoap0 . getCouponDiscount ( ) , 0 . 01D )
assertNull ( shoppingOrderSoap0 . getCcType ( ) )
assertEquals ( false , shoppingOrderSoap0 . isInsure ( ) )
assertEquals ( 52 , shoppingOrderSoap0 . getCcExpMonth ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , shoppingOrderSoap0 . getTax ( ) , 0 . 01D )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , shoppingOrderSoap0 . getShipping ( ) , 0 . 01D )
assertEquals ( 22 , shoppingOrderSoap0 . getCcExpYear ( ) )
assertEquals ( false , shoppingOrderSoap0 . isSendShippingEmail ( ) )
assertEquals ( ( - 56L ) , shoppingOrderSoap0 . getCompanyId ( ) )
assertEquals ( false , shoppingOrderSoap0 . isRequiresShipping ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , shoppingOrderSoap0 . getInsure ( ) )
assertNull ( shoppingOrderSoap0 . getAltShipping ( ) )
assertNull ( shoppingOrderSoap0 . getBillingLastName ( ) )
assertEquals ( 14 . 183066240664298 , shoppingOrderSoap0 . getTax ( ) , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( string0 )
assertEquals ( 1L , shoppingOrderSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( shoppingOrderSoapArray0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItem" , string0 )
assertNull ( shoppingItem0 )
assertEquals ( false , class0 . isArray ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItem" , shoppingItemWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemPrice" , string0 )
assertNull ( shoppingItemPrice0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( ( - 1268L ) , shoppingOrderItemSoap0 . getOrderItemId ( ) )
assertNull ( string0 )
assertEquals ( 0 . 0 , shoppingOrderItemSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( 0 . 0 , shoppingOrderItemSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( "R" , shoppingOrderItemSoap0 . getSku ( ) )
assertNull ( shoppingOrderItemSoap0 . getSku ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 255 , shoppingOrderItemSoap0 . getQuantity ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0 , shoppingOrderItemSoap0 . getQuantity ( ) )
assertNull ( string0 )
assertNull ( shoppingOrderItemSoap0 . getDescription ( ) )
assertEquals ( 0 , int0 )
assertNull ( shoppingOrderItemSoap0 . getItemId ( ) )
assertEquals ( 0L , shoppingOrderItemSoap0 . getOrderItemId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( shoppingOrderItemSoapArray0 )
assertEquals ( - 1008 , shoppingItemPriceSoap0 . getStatus ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , shoppingItemPriceSoap0 . getMinQuantity ( ) )
assertEquals ( 0L , shoppingItemPriceSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , shoppingItemPriceSoap0 . getShipping ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( 0 , shoppingItemPriceSoap0 . getMaxQuantity ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( false , shoppingItemPriceSoap0 . getUseShippingFormula ( ) )
assertEquals ( ( - 1008 . 0 ) , shoppingItemPriceSoap0 . getDiscount ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , shoppingItemPriceSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( false , shoppingItemPriceSoap0 . isTaxable ( ) )
assertEquals ( false , shoppingItemPriceSoap0 . isUseShippingFormula ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( shoppingItemPriceSoapArray0 )
assertEquals ( 0 . 0 , shoppingItemSoap0 . getDiscount ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , shoppingItemSoap0 . getStockQuantity ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , shoppingItemSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( false , shoppingItemSoap0 . isMediumImage ( ) )
assertNull ( string0 )
assertEquals ( false , shoppingItemSoap0 . getSale ( ) )
assertEquals ( false , shoppingItemSoap0 . isLargeImage ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( ( - 1276L ) , shoppingItemSoap0 . getMediumImageId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 573 , shoppingItemSoap0 . getMaxQuantity ( ) )
assertEquals ( false , shoppingItemSoap0 . getFields ( ) )
assertEquals ( false , shoppingItemSoap0 . getRequiresShipping ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , shoppingItemSoap0 . isFields ( ) )
assertEquals ( false , shoppingItemSoap0 . isUseShippingFormula ( ) )
assertNull ( string0 )
assertEquals ( false , shoppingItemSoap0 . getTaxable ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 804 , shoppingItemSoap0 . getMinQuantity ( ) )
assertEquals ( false , boolean0 )
assertNull ( shoppingItemSoap0 . getSku ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , shoppingItemSoap0 . getSale ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 21L , shoppingItemSoap0 . getLargeImageId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , shoppingItemSoap0 . getSmallImageId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , shoppingItemSoap0 . getSmallImage ( ) )
assertEquals ( 0 , shoppingItemSoap0 . getStockQuantity ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , shoppingItemSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( false , shoppingItemSoap0 . isSmallImage ( ) )
assertNull ( shoppingItemSoap0 . getLargeImageURL ( ) )
assertEquals ( 0 . 0 , shoppingItemSoap0 . getPrice ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , shoppingItemSoap0 . getShipping ( ) , 0 . 01D )
assertNull ( shoppingItemSoap0 . getName ( ) )
assertEquals ( false , shoppingItemSoap0 . getFeatured ( ) )
assertEquals ( false , shoppingItemSoap0 . getSmallImage ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , shoppingItemSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( false , shoppingItemSoap0 . isLargeImage ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , shoppingItemSoap0 . isTaxable ( ) )
assertEquals ( 0L , shoppingItemSoap0 . getLargeImageId ( ) )
assertNull ( shoppingItemSoap0 . getDescription ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1276L ) , shoppingItemSoap0 . getGroupId ( ) )
assertNotNull ( shoppingItemSoapArray0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingOrder" , string0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertNull ( shoppingOrder0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , string0 )
assertNull ( shoppingItemField0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertNull ( shoppingCouponSoap0 . getUserName ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( shoppingCouponSoap0 . getCode ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( shoppingCouponSoap0 . getLimitSkus ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( true , shoppingCouponSoap0 . getActive ( ) )
assertEquals ( 6L , shoppingCouponSoap0 . getCouponId ( ) )
assertNull ( date0 )
assertEquals ( 6L , shoppingCouponSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , shoppingCouponSoap0 . getMinOrder ( ) , 0 . 01D )
assertEquals ( 0L , shoppingCouponSoap0 . getGroupId ( ) )
assertNull ( shoppingCouponSoap0 . getLimitCategories ( ) )
assertNull ( string0 )
assertNull ( shoppingCouponSoap0 . getDescription ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( shoppingCouponSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , shoppingCouponSoap0 . isActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , shoppingCouponSoap0 . getCompanyId ( ) )
assertEquals ( ( - 1750L ) , shoppingCouponSoap0 . getUserId ( ) )
assertNull ( shoppingCouponSoap0 . getCode ( ) )
assertNull ( shoppingCouponSoap0 . getDescription ( ) )
assertEquals ( 0L , shoppingCouponSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , shoppingCouponSoap0 . getDiscount ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertNotNull ( shoppingCouponSoapArray0 )
assertEquals ( "ShoppingCategory" , class0 . getSimpleName ( ) )
assertNull ( shoppingCategory0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , string0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingOrderItem" , class0 . getCanonicalName ( ) )
assertNull ( shoppingOrderItem0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingOrderItem" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( false , class0 . isArray ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , string0 )
assertNull ( shoppingCart0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , shoppingCartSoap0 . getInsure ( ) )
assertEquals ( 0L , shoppingCartSoap0 . getCompanyId ( ) )
assertNull ( shoppingCartSoap0 . getUserName ( ) )
assertEquals ( 0L , shoppingCartSoap0 . getGroupId ( ) )
assertEquals ( 0L , shoppingCartSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( - 1 , shoppingCartSoap0 . getAltShipping ( ) )
assertNull ( string0 )
assertEquals ( false , shoppingCartSoap0 . getInsure ( ) )
assertEquals ( 0L , long0 )
assertNull ( shoppingCartSoap0 . getCouponCodes ( ) )
assertEquals ( 0L , shoppingCartSoap0 . getPrimaryKey ( ) )
assertEquals ( 12L , shoppingCartSoap0 . getUserId ( ) )
assertEquals ( 12L , shoppingCartSoap0 . getCompanyId ( ) )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNotNull ( shoppingCartSoapArray0 )
assertEquals ( ( - 72L ) , shoppingCategorySoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( shoppingCategorySoap0 . getName ( ) )
assertNull ( date0 )
assertEquals ( 0L , shoppingCategorySoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , shoppingCategorySoap0 . getPrimaryKey ( ) )
assertEquals ( ( - 72L ) , shoppingCategorySoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , shoppingCategorySoap0 . getCategoryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 72L ) , shoppingCategorySoap0 . getParentCategoryId ( ) )
assertEquals ( ( - 36L ) , shoppingCategorySoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , shoppingCategorySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , shoppingCategorySoap0 . getPrimaryKey ( ) )
assertNotNull ( shoppingCategorySoapArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( " { itemFieldId = 0 , itemId = 0 , name = , values = null , description = null } " , shoppingItemFieldCacheModel0 . toString ( ) )
assertEquals ( 0L , shoppingItemFieldCacheModel0 . itemId )
assertEquals ( 0L , shoppingItemFieldCacheModel0 . itemId )
assertEquals ( " { orderItemId = 0 , orderId = 0 , itemId = null , sku = null , name = null , description = null , properties = null , price = 0 . 0 , quantity = 0 , shippedDate = 0 } " , string0 )
assertEquals ( 0 , shoppingOrderItemCacheModel0 . quantity )
assertEquals ( 0 , shoppingOrderItemCacheModel0 . quantity )
assertEquals ( 0 , shoppingOrderItemCacheModel0 . quantity )
assertEquals ( " { couponId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , code = null , name = null , description = null , startDate = 0 , endDate = 0 , active = false , limitCategories = null , limitSkus = null , minOrder = 0 . 0 , discount = 0 . 0 , discountType = null } " , string0 )
assertEquals ( false , shoppingCouponCacheModel0 . active )
assertEquals ( 0L , shoppingCouponCacheModel0 . groupId )
assertEquals ( 0L , shoppingCouponCacheModel0 . endDate )
assertEquals ( 0L , shoppingCouponCacheModel0 . startDate )
assertEquals ( 0L , shoppingCouponCacheModel0 . endDate )
assertEquals ( " { cartId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , itemIds = null , couponCodes = null , altShipping = 0 , insure = false } " , string0 )
assertEquals ( 0L , shoppingCartCacheModel0 . groupId )
assertEquals ( 0L , shoppingCartCacheModel0 . cartId )
assertEquals ( false , shoppingCartCacheModel0 . insure )
assertEquals ( " { orderId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , number = null , tax = 0 . 0 , shipping = 0 . 0 , altShipping = null , requiresShipping = false , insure = false , insurance = 0 . 0 , couponCodes = null , couponDiscount = 0 . 0 , billingFirstName = null , billingLastName = null , billingEmailAddress = null , billingCompany = null , billingStreet = null , billingCity = null , billingState = null , billingZip = null , billingCountry = null , billingPhone = null , shipToBilling = false , shippingFirstName = null , shippingLastName = null , shippingEmailAddress = null , shippingCompany = null , shippingStreet = null , shippingCity = null , shippingState = null , shippingZip = null , shippingCountry = null , shippingPhone = null , ccName = null , ccType = null , ccNumber = null , ccExpMonth = 0 , ccExpYear = 0 , ccVerNumber = null , comments = null , ppTxnId = null , ppPaymentStatus = null , ppPaymentGross = 0 . 0 , ppReceiverEmail = null , ppPayerEmail = null , sendOrderEmail = false , sendShippingEmail = false } " , string0 )
assertEquals ( 0L , shoppingOrderCacheModel0 . userId )
assertEquals ( 0 . 0 , shoppingOrderCacheModel0 . couponDiscount , 0 . 01D )
assertEquals ( 0 , shoppingOrderCacheModel0 . ccExpMonth )
assertEquals ( 0L , shoppingOrderCacheModel0 . groupId )
assertEquals ( false , shoppingOrderCacheModel0 . sendShippingEmail )
assertEquals ( 0L , shoppingOrderCacheModel0 . companyId )
assertEquals ( 0 . 0 , shoppingOrderCacheModel0 . tax , 0 . 01D )
assertEquals ( 0L , shoppingOrderCacheModel0 . createDate )
assertEquals ( 0 . 0 , shoppingOrderCacheModel0 . couponDiscount , 0 . 01D )
assertEquals ( false , shoppingOrderCacheModel0 . shipToBilling )
assertEquals ( 0 , shoppingOrderCacheModel0 . ccExpYear )
assertEquals ( " { orderId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , number = null , tax = 0 . 0 , shipping = 0 . 0 , altShipping = null , requiresShipping = false , insure = false , insurance = 0 . 0 , couponCodes = null , couponDiscount = 0 . 0 , billingFirstName = null , billingLastName = null , billingEmailAddress = null , billingCompany = null , billingStreet = null , billingCity = null , billingState = null , billingZip = null , billingCountry = null , billingPhone = null , shipToBilling = false , shippingFirstName = , shippingLastName = null , shippingEmailAddress = null , shippingCompany = null , shippingStreet = null , shippingCity = null , shippingState = null , shippingZip = null , shippingCountry = null , shippingPhone = null , ccName = null , ccType = null , ccNumber = null , ccExpMonth = 0 , ccExpYear = 0 , ccVerNumber = null , comments = null , ppTxnId = null , ppPaymentStatus = null , ppPaymentGross = 0 . 0 , ppReceiverEmail = null , ppPayerEmail = null , sendOrderEmail = false , sendShippingEmail = false } " , shoppingOrderCacheModel0 . toString ( ) )
assertEquals ( 0 . 0 , shoppingOrderCacheModel0 . shipping , 0 . 01D )
assertEquals ( 0 . 0 , shoppingOrderCacheModel0 . shipping , 0 . 01D )
assertEquals ( false , shoppingOrderCacheModel0 . insure )
assertEquals ( false , shoppingOrderCacheModel0 . requiresShipping )
assertEquals ( " { itemPriceId = 0 , itemId = 0 , minQuantity = 0 , maxQuantity = 0 , price = 0 . 0 , discount = 0 . 0 , taxable = false , shipping = 0 . 0 , useShippingFormula = false , status = 0 } " , string0 )
assertEquals ( " { categoryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentCategoryId = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , shoppingCategoryCacheModel0 . parentCategoryId )
assertEquals ( 0L , shoppingCategoryCacheModel0 . groupId )
assertEquals ( 0L , shoppingCategoryCacheModel0 . userId )
assertEquals ( " { itemId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , categoryId = 0 , sku = null , name = null , description = null , properties = null , fields = false , fieldsQuantities = null , minQuantity = 0 , maxQuantity = 0 , price = 0 . 0 , discount = 0 . 0 , taxable = false , shipping = 0 . 0 , useShippingFormula = false , requiresShipping = false , stockQuantity = 0 , featured = false , sale = false , smallImage = false , smallImageId = 0 , smallImageURL = null , mediumImage = false , mediumImageId = 0 , mediumImageURL = null , largeImage = false , largeImageId = 0 , largeImageURL = null } " , string0 )
assertEquals ( 0L , shoppingItemCacheModel0 . groupId )
assertEquals ( false , shoppingItemCacheModel0 . sale )
assertNull ( shoppingOrderItemLocalService0 )
assertNull ( shoppingCartLocalService0 )
assertNull ( shoppingItemPriceLocalService0 )
assertNotNull ( shoppingItemPriceLocalServiceUtil0 )
assertNotNull ( shoppingItemServiceUtil0 )
assertNull ( shoppingOrderService0 )
assertNull ( shoppingItemFieldLocalService0 )
assertNull ( shoppingOrderLocalService0 )
assertNotNull ( shoppingOrderItemLocalServiceUtil0 )
assertNull ( shoppingCategoryLocalService0 )
assertNotNull ( shoppingItemLocalServiceUtil0 )
assertNotNull ( shoppingOrderLocalServiceUtil0 )
assertNull ( shoppingCouponService0 )
assertNull ( shoppingItemService0 )
assertNotNull ( shoppingCouponServiceUtil0 )
assertNotNull ( shoppingCategoryServiceUtil0 )
assertNotNull ( shoppingOrderServiceUtil0 )
assertNull ( shoppingCategoryService0 )
assertNull ( shoppingItemFinder0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalService0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponFinder0 )
assertNull ( shoppingOrderLocalService0 )
assertNull ( shoppingItemFieldLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPriceLocalService0 )
assertNull ( resourceLocalService0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( counterLocalService0 )
assertEquals ( "WJT } UNP@%S" , shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingCategoryService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , string0 )
assertNull ( shoppingItemService0 )
assertNull ( shoppingCategoryPersistence0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( userPersistence0 )
assertNull ( shoppingCouponLocalService0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemPersistence0 )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemLocalService0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPricePersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderFinder0 )
assertNull ( shoppingOrderService0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemFieldPersistence0 )
assertNull ( shoppingCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartPersistence0 )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingItemField" , shoppingItemFieldLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderItemPersistence0 )
assertNull ( shoppingOrderItemLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( shoppingItemFieldPersistence0 )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingCategoryPersistence0 )
assertEquals ( " One - shot delete : " , shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponService0 )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , string0 )
assertNull ( shoppingItemPricePersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPersistence0 )
assertNull ( shoppingOrderLocalService0 )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( string0 )
assertNull ( userFinder0 )
assertNull ( shoppingItemService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderPersistence0 )
assertNull ( shoppingCouponLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryLocalService0 )
assertNull ( shoppingItemFinder0 )
assertNull ( shoppingItemLocalService0 )
assertNull ( shoppingOrderService0 )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( shoppingItemFieldLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPriceLocalService0 )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartPersistence0 )
assertNull ( userService0 )
assertNull ( shoppingOrderFinder0 )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponFinder0 )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( shoppingCategoryService0 )
assertNull ( shoppingOrderItemPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldPersistence0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , string0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderItemLocalService0 )
assertNull ( shoppingCategoryLocalService0 )
assertNull ( shoppingCouponFinder0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemService0 )
assertNull ( shoppingCategoryPersistence0 )
assertNull ( shoppingCouponLocalService0 )
assertNull ( shoppingItemPriceLocalService0 )
assertNull ( shoppingOrderItemPersistence0 )
assertNull ( userPersistence0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPersistence0 )
assertNull ( shoppingCouponService0 )
assertNull ( shoppingItemPricePersistence0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "$" , shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( shoppingItemFinder0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertNull ( shoppingItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderFinder0 )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( string0 )
assertNull ( shoppingCartPersistence0 )
assertNull ( shoppingOrderService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldLocalService0 )
assertNull ( shoppingOrderLocalService0 )
assertNull ( shoppingOrderPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderService0 )
assertNull ( userPersistence0 )
assertNull ( shoppingCouponFinder0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPriceLocalService0 )
assertNull ( shoppingCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( shoppingOrderItemPersistence0 )
assertNull ( shoppingCouponService0 )
assertNull ( shoppingItemPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderItemLocalService0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalService0 )
assertNull ( shoppingOrderLocalService0 )
assertNull ( shoppingCategoryService0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartPersistence0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderFinder0 )
assertNull ( counterLocalService0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryPersistence0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , string0 )
assertNull ( shoppingCartLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldPersistence0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPricePersistence0 )
assertNull ( shoppingItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFinder0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( userService0 )
assertNull ( shoppingOrderPersistence0 )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingItemFieldLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCoupon" , shoppingCouponLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderPersistence0 )
assertNull ( shoppingItemPricePersistence0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderItemPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderService0 )
assertNull ( shoppingItemPriceLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , string0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryService0 )
assertNull ( userService0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryPersistence0 )
assertNull ( userFinder0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingOrderLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFinder0 )
assertNull ( shoppingCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , class0 . getCanonicalName ( ) )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingCartPersistence0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemService0 )
assertNull ( shoppingItemLocalService0 )
assertNull ( shoppingOrderFinder0 )
assertNull ( shoppingItemFieldLocalService0 )
assertNull ( shoppingItemPersistence0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponService0 )
assertNull ( string0 )
assertNull ( shoppingCouponLocalService0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponFinder0 )
assertNull ( shoppingCartLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCategory" , shoppingCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemPriceLocalService0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponLocalService0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFinder0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponPersistence0 )
assertNull ( shoppingItemPersistence0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCouponFinder0 )
assertNull ( shoppingOrderService0 )
assertNull ( string0 )
assertNull ( shoppingOrderFinder0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingOrderItemPersistence0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertNull ( shoppingItemPricePersistence0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertNull ( shoppingCouponService0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemFieldLocalService0 )
assertEquals ( true , class0 . isInterface ( ) )
assertNull ( shoppingOrderPersistence0 )
assertNull ( userLocalService0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingItemService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( shoppingItemFieldPersistence0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertNull ( shoppingCartPersistence0 )
assertNull ( shoppingItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , string0 )
assertNull ( userPersistence0 )
assertNull ( shoppingOrderLocalService0 )
assertNull ( shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( shoppingOrderItemLocalService0 )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . shopping . model . ShoppingCart" , shoppingCartLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( shoppingCategoryLocalService0 )
assertNotNull ( shoppingCouponServiceHttp0 )
assertNotNull ( shoppingCategoryServiceSoap0 )
assertNotNull ( shoppingOrderServiceHttp0 )
assertNotNull ( shoppingItemServiceSoap0 )
assertNotNull ( shoppingOrderServiceSoap0 )
assertNotNull ( shoppingItemServiceHttp0 )
assertNotNull ( shoppingCouponServiceSoap0 )
assertNotNull ( shoppingCategoryServiceHttp0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( shoppingCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNotNull ( fieldConstants0 )
assertEquals ( - 60 , date0 . getTimezoneOffset ( ) )
assertEquals ( false , ( boolean ) boolean0 )
assertEquals ( "" , string0 )
assertEquals ( 0 . 0 , ( double ) double0 , 0 . 01D )
assertEquals ( 0 . 0F , ( float ) float0 , 0 . 01F )
assertEquals ( 0 , ( int ) integer0 )
assertEquals ( 0L , ( long ) long0 )
assertEquals ( 0 , ( int ) integer0 )
assertEquals ( ( short ) 0 , ( short ) short0 )
assertNull ( object0 )
assertNotNull ( expandoValueBeanResolver0 )
assertEquals ( "expando" , string0 )
assertEquals ( StorageType . XML , storageType0 )
assertEquals ( StorageType . EXPANDO , storageType0 )
assertSame ( documentLibraryFieldRenderer1 , documentLibraryFieldRenderer0 )
assertNotNull ( documentLibraryFieldRenderer0 )
assertNull ( storageAdapter0 )
assertEquals ( "OR" , logicalOperator1 . name ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( LogicalOperator . OR , junctionImpl1 . getLogicalOperator ( ) )
assertEquals ( " ! = " , string0 )
assertEquals ( " ! = " , string0 )
assertEquals ( "" , fieldConditionImpl0 . getName ( ) )
assertEquals ( LogicalOperator . AND , junctionImpl0 . getLogicalOperator ( ) )
assertEquals ( ComparisonOperator . NOT_EQUALS , fieldConditionImpl0 . getComparisonOperator ( ) )
assertEquals ( false , fieldConditionImpl0 . isJunction ( ) )
assertEquals ( "" , fieldConditionImpl0 . getName ( ) )
assertEquals ( false , fieldConditionImpl0 . isJunction ( ) )
assertEquals ( LogicalOperator . OR , junctionImpl0 . getLogicalOperator ( ) )
assertEquals ( ComparisonOperator . NOT_IN , fieldConditionImpl0 . getComparisonOperator ( ) )
assertEquals ( ComparisonOperator . LESS_THAN , fieldConditionImpl0 . getComparisonOperator ( ) )
assertEquals ( false , fieldConditionImpl0 . isJunction ( ) )
assertEquals ( ComparisonOperator . EQUALS , fieldConditionImpl0 . getComparisonOperator ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "wGa - ] + F ( * " , string0 )
assertSame ( comparisonOperator1 , comparisonOperator0 )
assertEquals ( "EQUALS" , string0 )
assertNotNull ( getTemplateAction0 )
assertNotNull ( actionUtil0 )
assertNull ( dDMStructureLink0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , string0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( dDMTemplateSoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMTemplateSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 441L ) , dDMTemplateSoap0 . getClassNameId ( ) )
assertNull ( dDMTemplateSoap0 . getScript ( ) )
assertNull ( date0 )
assertNull ( dDMTemplateSoap0 . getScript ( ) )
assertEquals ( ( - 1937L ) , dDMTemplateSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( dDMTemplateSoap0 . getScript ( ) )
assertEquals ( 0L , long0 )
assertNull ( dDMTemplateSoap0 . getType ( ) )
assertEquals ( ( - 441L ) , dDMTemplateSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , dDMTemplateSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( dDMTemplateSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMTemplateSoap0 . getGroupId ( ) )
assertNull ( dDMTemplateSoap0 . getMode ( ) )
assertNull ( dDMTemplateSoap0 . getUserName ( ) )
assertNull ( string0 )
assertNull ( dDMTemplateSoap0 . getUuid ( ) )
assertNull ( dDMTemplateSoap0 . getScript ( ) )
assertEquals ( 0L , dDMTemplateSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertNotNull ( dDMTemplateSoapArray0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructure" , string0 )
assertNull ( dDMStructure0 )
assertNull ( dDMTemplate0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMTemplate" , string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMStorageLinkSoap0 . getStructureId ( ) )
assertEquals ( 0L , dDMStorageLinkSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMStorageLinkSoap0 . getPrimaryKey ( ) )
assertEquals ( 1361L , dDMStorageLinkSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1361L , dDMStorageLinkSoap0 . getStructureId ( ) )
assertNotNull ( dDMStorageLinkSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1101L ) , dDMStructureLinkSoap0 . getStructureLinkId ( ) )
assertEquals ( ( - 1101L ) , dDMStructureLinkSoap0 . getClassPK ( ) )
assertEquals ( 0L , dDMStructureLinkSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1101L ) , dDMStructureLinkSoap0 . getStructureId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( dDMStructureLinkSoapArray0 )
assertNull ( dDMStorageLink0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStorageLink" , string0 )
assertEquals ( "interface com . liferay . portlet . dynamicdatamapping . model . DDMStorageLink" , class0 . toString ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStorageLink" , dDMStorageLinkWrapper0 . getModelClassName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 6L ) , dDMStructureSoap0 . getClassNameId ( ) )
assertNull ( string0 )
assertEquals ( - 275 , dDMStructureSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , dDMStructureSoap0 . getPrimaryKey ( ) )
assertNull ( dDMStructureSoap0 . getStructureKey ( ) )
assertNull ( dDMStructureSoap0 . getXsd ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , dDMStructureSoap0 . getParentStructureId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMStructureSoap0 . getClassNameId ( ) )
assertEquals ( 0L , dDMStructureSoap0 . getStructureId ( ) )
assertNull ( dDMStructureSoap0 . getXsd ( ) )
assertNull ( dDMStructureSoap0 . getXsd ( ) )
assertNull ( string0 )
assertEquals ( 0L , dDMStructureSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( dDMStructureSoap0 . getUserName ( ) )
assertEquals ( 0L , dDMStructureSoap0 . getCompanyId ( ) )
assertEquals ( 401L , dDMStructureSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 275L ) , dDMStructureSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 1248L ) , dDMStructureSoap0 . getParentStructureId ( ) )
assertNotNull ( dDMStructureSoapArray0 )
assertNull ( dDMContent0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMContent" , class0 . getName ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMContent" , string0 )
assertNull ( dDMContentSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMContentSoap0 . getContentId ( ) )
assertNull ( dDMContentSoap0 . getUserName ( ) )
assertNull ( string0 )
assertNull ( dDMContentSoap0 . getXml ( ) )
assertEquals ( 0L , long0 )
assertNull ( dDMContentSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 459L , dDMContentSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDMContentSoap0 . getCompanyId ( ) )
assertNull ( dDMContentSoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( dDMContentSoap0 . getXml ( ) )
assertEquals ( 0L , dDMContentSoap0 . getGroupId ( ) )
assertEquals ( 459L , dDMContentSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertNotNull ( dDMContentSoapArray0 )
assertEquals ( " { uuid = null , templateId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , templateKey = null , name = null , description = null , type = null , mode = null , language = null , script = null } " , string0 )
assertEquals ( 0L , dDMTemplateCacheModel0 . userId )
assertEquals ( 0L , dDMTemplateCacheModel0 . groupId )
assertEquals ( 0L , dDMTemplateCacheModel0 . userId )
assertEquals ( 0L , dDMTemplateCacheModel0 . templateId )
assertEquals ( " { uuid = null , storageLinkId = 0 , classNameId = 0 , classPK = 0 , structureId = 0 } " , string0 )
assertEquals ( 0L , dDMStorageLinkCacheModel0 . storageLinkId )
assertEquals ( " { uuid = null , contentId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , description = null , xml = null } " , string0 )
assertEquals ( 0L , dDMContentCacheModel0 . groupId )
assertEquals ( 0L , dDMContentCacheModel0 . modifiedDate )
assertEquals ( 0L , dDMContentCacheModel0 . groupId )
assertEquals ( " { uuid = null , structureId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentStructureId = 0 , classNameId = 0 , structureKey = null , name = null , description = null , xsd = null , storageType = null , type = 0 } " , string0 )
assertEquals ( 0 , dDMStructureCacheModel0 . type )
assertEquals ( 0L , dDMStructureCacheModel0 . structureId )
assertEquals ( 0L , dDMStructureCacheModel0 . structureId )
assertEquals ( 0L , dDMStructureCacheModel0 . createDate )
assertNotNull ( string0 )
assertEquals ( 0L , dDMStructureLinkCacheModel0 . structureLinkId )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( dDMTemplateServiceUtil0 )
assertNotNull ( dDMStructureLinkLocalServiceUtil0 )
assertNull ( dDMTemplateService0 )
assertNotNull ( dDMContentLocalServiceUtil0 )
assertNotNull ( dDMStructureLocalServiceUtil0 )
assertNull ( dDMStorageLinkLocalService0 )
assertNull ( dDMStructureLinkLocalService0 )
assertNull ( dDMStructureFinder0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMTemplatePersistence0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMStructureLinkLocalService0 )
assertNull ( dDMTemplateFinder0 )
assertNull ( dDMStructureLocalService0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStructureLinkPersistence0 )
assertNull ( dDMStorageLinkLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( userFinder0 )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( dDMTemplateLocalService0 )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( dDMStorageLinkPersistence0 )
assertNull ( resourceLocalService0 )
assertNull ( dDMTemplateService0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , string0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMContentLocalService0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMStructurePersistence0 )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( dDMContentPersistence0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNull ( userService0 )
assertNull ( dDMStructureService0 )
assertNull ( dDMStructureLinkLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatamapping . model . DDMStructureLink" , dDMStructureLinkLocalServiceImpl0 . getModelClassName ( ) )
assertNotNull ( dDMTemplateUtil0 )
assertNotNull ( dDMStructurePermission0 )
assertNotNull ( dDMPermission0 )
assertNotNull ( dDMTemplatePermission0 )
assertNull ( dDMWebDAVStorageImpl0 . getRootPath ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( structureIdComparator0 )
assertNull ( structureIdComparator0 )
assertNotNull ( structureModifiedDateComparator0 )
assertEquals ( "DDMTemplate . templateId DESC" , templateIdComparator0 . getOrderBy ( ) )
assertNull ( templateIdComparator0 )
assertNotNull ( templateModifiedDateComparator0 )
assertNotNull ( dDMTemplateHelperImpl0 )
assertEquals ( 0 , jSONObjectImpl0 . length ( ) )
assertEquals ( "' [ vH^_DEU * ho > k" , string0 )
assertEquals ( "" , locale0 . getVariant ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "DDMTemplate . modifiedDate DESC" , string0 )
assertEquals ( true , templateModifiedDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "DDMStructure . structureKey DESC" , string0 )
assertEquals ( "DDMStructure . structureKey ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "DDMStructure . modifiedDate DESC" , string0 )
assertEquals ( "DDMStructure . modifiedDate ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "DDMStructure . structureId DESC" , string0 )
assertEquals ( true , structureIdComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "DDMTemplate . templateId DESC" , templateIdComparator0 . toString ( ) )
assertEquals ( "DDMTemplate . templateId DESC" , string0 )
assertEquals ( "DDMTemplate . templateId ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . assetcategoriesnavigation" , string0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetCategory" , string0 )
assertEquals ( "asset . categories . navigation . display . templates . help" , string0 )
assertNotNull ( viewChartAction0 )
assertNotNull ( actionUtil0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( pollsChoiceSoap0 . getDescription ( ) )
assertEquals ( 0L , pollsChoiceSoap0 . getQuestionId ( ) )
assertEquals ( ( - 1L ) , pollsChoiceSoap0 . getChoiceId ( ) )
assertNull ( string0 )
assertEquals ( ( - 1L ) , pollsChoiceSoap0 . getQuestionId ( ) )
assertNull ( pollsChoiceSoap0 . getDescription ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNotNull ( pollsChoiceSoapArray0 )
assertEquals ( 31L , pollsQuestionSoap0 . getCompanyId ( ) )
assertEquals ( 1066L , pollsQuestionSoap0 . getUserId ( ) )
assertEquals ( 0L , pollsQuestionSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 1066L , pollsQuestionSoap0 . getGroupId ( ) )
assertNull ( pollsQuestionSoap0 . getUserName ( ) )
assertNull ( date0 )
assertEquals ( 0L , pollsQuestionSoap0 . getQuestionId ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( pollsQuestionSoap0 . getTitle ( ) )
assertNull ( pollsQuestionSoap0 . getUuid ( ) )
assertEquals ( 17L , pollsQuestionSoap0 . getPrimaryKey ( ) )
assertNull ( pollsQuestionSoap0 . getTitle ( ) )
assertEquals ( 0L , pollsQuestionSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( pollsQuestionSoap0 . getUserName ( ) )
assertNotNull ( pollsQuestionSoapArray0 )
assertNull ( pollsChoice0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , class0 . getCanonicalName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , string0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , string0 )
assertNull ( pollsVote0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNull ( date0 )
assertEquals ( ( - 10L ) , pollsVoteSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , pollsVoteSoap0 . getCompanyId ( ) )
assertEquals ( 0L , pollsVoteSoap0 . getUserId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , pollsVoteSoap0 . getCompanyId ( ) )
assertNull ( pollsVoteSoap0 . getUserName ( ) )
assertEquals ( 0L , pollsVoteSoap0 . getVoteId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , pollsVoteSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , pollsVoteSoap0 . getQuestionId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 10L ) , pollsVoteSoap0 . getChoiceId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNotNull ( pollsVoteSoapArray0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , string0 )
assertNull ( pollsQuestion0 )
assertEquals ( " { uuid = null , choiceId = 0 , questionId = 0 , name = null , description = null } " , string0 )
assertEquals ( " { uuid = ZF , choiceId = 0 , questionId = 0 , name = null , description = null } " , pollsChoiceCacheModel0 . toString ( ) )
assertEquals ( 0L , pollsChoiceCacheModel0 . choiceId )
assertEquals ( " { uuid = null , questionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , title = null , description = null , expirationDate = 0 , lastVoteDate = 0 } " , string0 )
assertEquals ( 0L , pollsQuestionCacheModel0 . modifiedDate )
assertEquals ( 0L , pollsQuestionCacheModel0 . lastVoteDate )
assertEquals ( " { voteId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , questionId = 0 , choiceId = 0 , voteDate = 0 } " , string0 )
assertEquals ( 0L , pollsVoteCacheModel0 . createDate )
assertEquals ( 0L , pollsVoteCacheModel0 . modifiedDate )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNull ( pollsChoiceLocalService0 )
assertNotNull ( pollsVoteLocalServiceUtil0 )
assertNull ( pollsChoiceService0 )
assertNotNull ( pollsChoiceServiceUtil0 )
assertNotNull ( pollsChoiceLocalServiceUtil0 )
assertNotNull ( pollsQuestionServiceUtil0 )
assertNull ( pollsQuestionService0 )
assertNotNull ( pollsVoteServiceUtil0 )
assertNull ( pollsVoteLocalService0 )
assertNull ( pollsVoteService0 )
assertNull ( pollsChoiceService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVotePersistence0 )
assertNull ( pollsVoteService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionLocalService0 )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , string0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( pollsQuestionPersistence0 )
assertNull ( pollsChoicePersistence0 )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertEquals ( "7eF" , pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceFinder0 )
assertNull ( pollsChoiceLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertEquals ( false , class0 . isEnum ( ) )
assertNull ( pollsChoiceServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( pollsQuestionService0 )
assertNull ( pollsVoteLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceService0 )
assertNull ( userFinder0 )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "#Ak > y#ay" , pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionLocalService0 )
assertNull ( userPersistence0 )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , string0 )
assertNull ( pollsQuestionPersistence0 )
assertNull ( pollsVotePersistence0 )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceLocalService0 )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVoteLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoicePersistence0 )
assertNull ( userService0 )
assertNull ( resourceLocalService0 )
assertNull ( pollsQuestionService0 )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceFinder0 )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( pollsVoteService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVoteServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsVote" , pollsVoteServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( pollsVoteLocalService0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceFinder0 )
assertNull ( string0 )
assertNull ( pollsVotePersistence0 )
assertNull ( pollsVoteService0 )
assertNull ( pollsQuestionLocalService0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoicePersistence0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( userService0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionService0 )
assertNull ( resourceLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , string0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsQuestionPersistence0 )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsQuestionServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsQuestion" , pollsQuestionServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceLocalService0 )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVoteService0 )
assertNull ( userPersistence0 )
assertEquals ( true , class0 . isInterface ( ) )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsQuestionPersistence0 )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceFinder0 )
assertNull ( pollsChoicePersistence0 )
assertNull ( pollsVoteLocalService0 )
assertNull ( pollsChoiceLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsVotePersistence0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsQuestionLocalService0 )
assertNull ( string0 )
assertNull ( userService0 )
assertNull ( pollsChoiceService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsQuestionService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , string0 )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertEquals ( "com . liferay . portlet . polls . model . PollsChoice" , pollsChoiceLocalServiceImpl0 . getModelClassName ( ) )
assertNotNull ( pollsVoteServiceSoap0 )
assertNotNull ( pollsVoteServiceHttp0 )
assertNotNull ( pollsQuestionServiceHttp0 )
assertNotNull ( pollsQuestionServiceSoap0 )
assertNull ( pollsChoiceLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNotNull ( pollsUtil0 )
assertNull ( flagsEntryService0 )
assertNotNull ( flagsEntryServiceUtil0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( string0 )
assertNull ( userGroupRolePersistence0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetEntryService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userGroupLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupLocalService0 )
assertNull ( userGroupRoleFinder0 )
assertNull ( assetEntryLocalService0 )
assertNull ( flagsEntryService0 )
assertNull ( assetEntryPersistence0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userGroupService0 )
assertNull ( layoutLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( rolePersistence0 )
assertNull ( roleFinder0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( resourceLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupService0 )
assertNull ( userFinder0 )
assertNull ( roleService0 )
assertNull ( companyLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( roleLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userGroupPersistence0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mailService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userGroupFinder0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( companyPersistence0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( companyService0 )
assertNull ( groupPersistence0 )
assertNull ( counterLocalService0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( layoutService0 )
assertNull ( assetEntryFinder0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userGroupRoleService0 )
assertNull ( layoutPersistence0 )
assertNull ( userService0 )
assertNull ( groupFinder0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( layoutFinder0 )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( flagsEntryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( userGroupRoleLocalService0 )
assertNotNull ( flagsEntryServiceHttp0 )
assertNotNull ( flagsEntryServiceSoap0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( flagsRequest0 . getClassName ( ) )
assertEquals ( 0L , flagsRequest0 . getClassPK ( ) )
assertEquals ( 0L , flagsRequest0 . getClassPK ( ) )
assertNull ( flagsRequest0 . getContentTitle ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( serviceContext0 )
assertNull ( flagsRequest0 . getComments ( ) )
assertEquals ( " { className = null , classPK = 0 , comments = null , contentTitle = , contentURL = null , reason = null , reportedUserId = 0 , reporterEmailAddress = null , serviceContext = null } " , flagsRequest0 . toString ( ) )
assertNull ( flagsRequest0 . getContentURL ( ) )
assertEquals ( 0L , flagsRequest0 . getReportedUserId ( ) )
assertEquals ( " { className = : y7Jz . a , classPK = 0 , comments = null , contentTitle = : y7Jz . a , contentURL = : y7Jz . a , reason = : y7Jz . a , reportedUserId = 1457 , reporterEmailAddress = : y7Jz . a , serviceContext = null } " , flagsRequest0 . toString ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " { className = null , classPK = 0 , comments = null , contentTitle = null , contentURL = null , reason = null , reportedUserId = - 1008 , reporterEmailAddress = null , serviceContext = null } " , flagsRequest0 . toString ( ) )
assertEquals ( " { className = null , classPK = 0 , comments = null , contentTitle = null , contentURL = null , reason = null , reportedUserId = 0 , reporterEmailAddress = null , serviceContext = null } " , string0 )
assertNull ( inputStream0 )
assertEquals ( "com . liferay . portlet . portalsettings . action . EditCompanyLogoAction" , string0 )
assertNotNull ( actionUtil0 )
assertNull ( string0 )
assertEquals ( "u3 [ > , y0 * wXx5ZusqN" , string0 )
assertNotNull ( sitesUtil0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , portletPreferencesImpl0 . getPlid ( ) )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , conversion0 . getToValue ( ) , 0 . 01D )
assertEquals ( 0 . 0 , conversion0 . getToValue ( ) , 0 . 01D )
assertEquals ( ( - 956 . 8856589948573 ) , conversion0 . getFromValue ( ) , 0 . 01D )
assertEquals ( 1501 . 323290528418 , conversion0 . getToValue ( ) , 0 . 01D )
assertEquals ( 0 , conversion0 . getFromId ( ) )
assertEquals ( 0 , conversion0 . getToId ( ) )
assertNotNull ( converterUtil0 )
assertEquals ( 0 . 0 , conversion0 . getToValue ( ) , 0 . 01D )
assertEquals ( 2 , conversion0 . getType ( ) )
assertEquals ( 0 . 0 , conversion0 . getToValue ( ) , 0 . 01D )
assertEquals ( 1 , conversion0 . getToId ( ) )
assertEquals ( ( - 459 . 67 ) , double0 , 0 . 01D )
assertEquals ( 2 . 9999999997 , double0 , 0 . 01D )
assertEquals ( 4 . 0 , double0 , 0 . 01D )
assertEquals ( 1853 . 1402512713896 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( resourceRequestImpl0 . getCacheability ( ) )
assertEquals ( "" , unicodeProperties0 . toSortedString ( ) )
assertNull ( string0 )
assertNull ( mDRActionSoap0 . getType ( ) )
assertNull ( mDRActionSoap0 . getUuid ( ) )
assertEquals ( 0L , mDRActionSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1304L ) , mDRActionSoap0 . getCompanyId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mDRActionSoap0 . getGroupId ( ) )
assertNull ( mDRActionSoap0 . getUserName ( ) )
assertEquals ( ( - 13L ) , mDRActionSoap0 . getClassPK ( ) )
assertNull ( mDRActionSoap0 . getUserName ( ) )
assertNull ( mDRActionSoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( mDRActionSoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( mDRActionSoap0 . getUserName ( ) )
assertNull ( mDRActionSoap0 . getType ( ) )
assertEquals ( ( - 1396L ) , mDRActionSoap0 . getClassNameId ( ) )
assertNull ( mDRActionSoap0 . getTypeSettings ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 10L ) , mDRActionSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( mDRActionSoapArray0 )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getRuleGroupInstanceId ( ) )
assertNull ( date0 )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getUserId ( ) )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getCompanyId ( ) )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getRuleGroupInstanceId ( ) )
assertEquals ( 0L , long0 )
assertNull ( mDRRuleGroupInstanceSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getRuleGroupId ( ) )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , mDRRuleGroupInstanceSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getRuleGroupInstanceId ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( "9bBH = R < H" , mDRRuleGroupInstanceSoap0 . getUserName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mDRRuleGroupInstanceSoap0 . getUserId ( ) )
assertEquals ( 0 , mDRRuleGroupInstanceSoap0 . getPriority ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( mDRRuleGroupInstanceSoapArray0 )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( mDRRuleSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( mDRRuleSoap0 . getUserName ( ) )
assertNull ( mDRRuleSoap0 . getType ( ) )
assertEquals ( ( - 670L ) , mDRRuleSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , mDRRuleSoap0 . getRuleId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( mDRRuleSoap0 . getDescription ( ) )
assertEquals ( ( - 17L ) , mDRRuleSoap0 . getCompanyId ( ) )
assertEquals ( 1895L , mDRRuleSoap0 . getGroupId ( ) )
assertEquals ( 0L , mDRRuleSoap0 . getCompanyId ( ) )
assertEquals ( 0L , mDRRuleSoap0 . getRuleId ( ) )
assertEquals ( 1895L , mDRRuleSoap0 . getRuleGroupId ( ) )
assertNull ( string0 )
assertNull ( mDRRuleSoap0 . getUserName ( ) )
assertEquals ( 0L , mDRRuleSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNotNull ( mDRRuleSoapArray0 )
assertEquals ( "com . liferay . portlet . mobiledevicerules . model . MDRRule" , string0 )
assertNull ( mDRRule0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertEquals ( "com . liferay . portlet . mobiledevicerules . model . MDRRuleGroup" , string0 )
assertNull ( mDRRuleGroup0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . mobiledevicerules . model . MDRAction" , string0 )
assertNull ( mDRAction0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( ( - 1450L ) , mDRRuleGroupSoap0 . getUserId ( ) )
assertEquals ( 1L , mDRRuleGroupSoap0 . getPrimaryKey ( ) )
assertNull ( mDRRuleGroupSoap0 . getDescription ( ) )
assertEquals ( ( - 1450L ) , mDRRuleGroupSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , mDRRuleGroupSoap0 . getRuleGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( mDRRuleGroupSoap0 . getName ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( mDRRuleGroupSoap0 . getUserName ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mDRRuleGroupSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertEquals ( 0L , mDRRuleGroupSoap0 . getCompanyId ( ) )
assertEquals ( 1099L , mDRRuleGroupSoap0 . getGroupId ( ) )
assertNotNull ( mDRRuleGroupSoapArray0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertEquals ( "com . liferay . portlet . mobiledevicerules . model . MDRRuleGroupInstance" , string0 )
assertNull ( mDRRuleGroupInstance0 )
assertEquals ( " { uuid = null , ruleId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , ruleGroupId = 0 , name = null , description = null , type = null , typeSettings = null } " , string0 )
assertEquals ( 0L , mDRRuleCacheModel0 . createDate )
assertEquals ( 0L , mDRRuleCacheModel0 . groupId )
assertEquals ( 0L , mDRRuleCacheModel0 . userId )
assertEquals ( " { uuid = null , actionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , ruleGroupInstanceId = 0 , name = null , description = null , type = null , typeSettings = null } " , string0 )
assertEquals ( 0L , mDRActionCacheModel0 . createDate )
assertEquals ( 0L , mDRActionCacheModel0 . companyId )
assertEquals ( 0L , mDRActionCacheModel0 . modifiedDate )
assertEquals ( 0L , mDRActionCacheModel0 . userId )
assertEquals ( " { uuid = null , ruleGroupInstanceId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , ruleGroupId = 0 , priority = 0 } " , string0 )
assertEquals ( 0L , mDRRuleGroupInstanceCacheModel0 . ruleGroupInstanceId )
assertEquals ( 0L , mDRRuleGroupInstanceCacheModel0 . createDate )
assertEquals ( 0L , mDRRuleGroupInstanceCacheModel0 . ruleGroupId )
assertEquals ( " { uuid = null , ruleGroupId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , mDRRuleGroupCacheModel0 . groupId )
assertEquals ( 0L , mDRRuleGroupCacheModel0 . createDate )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( mDRActionLocalServiceUtil0 )
assertNotNull ( mDRRuleServiceSoap0 )
assertEquals ( true , boolean0 )
assertEquals ( true , ruleGroupInstancePriorityComparator0 . isAscending ( ) )
assertEquals ( "MDRRuleGroupInstance . priority DESC" , string0 )
assertEquals ( "MDRRuleGroupInstance . priority ASC" , string0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , ratingsEntrySoap0 . getScore ( ) , 0 . 01D )
assertEquals ( 0L , ratingsEntrySoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , ratingsEntrySoap0 . getCompanyId ( ) )
assertEquals ( 3 . 0 , ratingsEntrySoap0 . getScore ( ) , 0 . 01D )
assertEquals ( 0 . 0 , ratingsEntrySoap0 . getScore ( ) , 0 . 01D )
assertEquals ( 0L , ratingsEntrySoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0L , ratingsEntrySoap0 . getEntryId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 3L , ratingsEntrySoap0 . getUserId ( ) )
assertEquals ( 3L , ratingsEntrySoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNotNull ( ratingsEntrySoapArray0 )
assertNull ( ratingsEntry0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portlet . ratings . model . RatingsEntry" , string0 )
assertEquals ( "com . liferay . portlet . ratings . model . RatingsStats" , string0 )
assertEquals ( "RatingsStats" , class0 . getSimpleName ( ) )
assertNull ( ratingsStats0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( 0L , ratingsStatsSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , ratingsStatsSoap0 . getTotalEntries ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , ratingsStatsSoap0 . getTotalScore ( ) , 0 . 01D )
assertEquals ( 0L , ratingsStatsSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , ratingsStatsSoap0 . getTotalScore ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , ratingsStatsSoap0 . getAverageScore ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertNotNull ( ratingsStatsSoapArray0 )
assertEquals ( " { entryId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , score = 0 . 0 } " , string0 )
assertEquals ( 0L , ratingsEntryCacheModel0 . companyId )
assertEquals ( 0L , ratingsEntryCacheModel0 . userId )
assertEquals ( " { statsId = 0 , classNameId = 0 , classPK = 0 , totalEntries = 0 , totalScore = 0 . 0 , averageScore = 0 . 0 } " , string0 )
assertEquals ( 0L , ratingsStatsCacheModel0 . statsId )
assertNull ( ratingsEntryService0 )
assertNull ( ratingsStatsLocalService0 )
assertNull ( ratingsEntryLocalService0 )
assertNotNull ( ratingsEntryServiceUtil0 )
assertNotNull ( ratingsEntryServiceHttp0 )
assertNotNull ( ratingsEntryServiceSoap0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecord" , dDLRecordConstants0 . getClassName ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecord" , string0 )
assertEquals ( 0L , dDLRecordSetSoap0 . getCompanyId ( ) )
assertEquals ( 0L , dDLRecordSetSoap0 . getRecordSetId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , dDLRecordSetSoap0 . getMinDisplayRows ( ) )
assertNull ( dDLRecordSetSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDLRecordSetSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , dDLRecordSetSoap0 . getScope ( ) )
assertEquals ( 0L , dDLRecordSetSoap0 . getCompanyId ( ) )
assertNull ( date0 )
assertNull ( dDLRecordSetSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 5L , dDLRecordSetSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( dDLRecordSetSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , dDLRecordSetSoap0 . getScope ( ) )
assertEquals ( 0 , dDLRecordSetSoap0 . getScope ( ) )
assertEquals ( 0 , dDLRecordSetSoap0 . getScope ( ) )
assertEquals ( 0L , dDLRecordSetSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNotNull ( dDLRecordSetSoapArray0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 32 , dDLRecordVersionSoap0 . getDisplayIndex ( ) )
assertEquals ( 858L , dDLRecordVersionSoap0 . getRecordSetId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDLRecordVersionSoap0 . getGroupId ( ) )
assertNull ( dDLRecordVersionSoap0 . getVersion ( ) )
assertEquals ( 6L , dDLRecordVersionSoap0 . getDDMStorageId ( ) )
assertEquals ( 0L , dDLRecordVersionSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDLRecordVersionSoap0 . getStatusByUserId ( ) )
assertEquals ( ( - 72L ) , dDLRecordVersionSoap0 . getStatusByUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 72 , dDLRecordVersionSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 32L , dDLRecordVersionSoap0 . getCompanyId ( ) )
assertEquals ( ( - 15L ) , dDLRecordVersionSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDLRecordVersionSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 15L ) , dDLRecordVersionSoap0 . getGroupId ( ) )
assertNull ( dDLRecordVersionSoap0 . getVersion ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , dDLRecordVersionSoap0 . getRecordVersionId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertNotNull ( dDLRecordVersionSoapArray0 )
assertNull ( dDLRecordVersion0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecordVersion" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( ( - 195L ) , dDLRecordSoap0 . getUserId ( ) )
assertNull ( dDLRecordSoap0 . getVersion ( ) )
assertEquals ( 0 , dDLRecordSoap0 . getDisplayIndex ( ) )
assertNull ( dDLRecordSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , dDLRecordSoap0 . getVersionUserId ( ) )
assertEquals ( 0L , dDLRecordSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( ( - 195L ) , dDLRecordSoap0 . getRecordSetId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( dDLRecordSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( ( - 195L ) , dDLRecordSoap0 . getCompanyId ( ) )
assertEquals ( 0L , dDLRecordSoap0 . getGroupId ( ) )
assertEquals ( - 195 , dDLRecordSoap0 . getDisplayIndex ( ) )
assertNull ( dDLRecordSoap0 . getVersion ( ) )
assertNull ( string0 )
assertEquals ( 0L , dDLRecordSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( dDLRecordSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( dDLRecordSoapArray0 )
assertEquals ( " { uuid = null , recordId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , versionUserId = 0 , versionUserName = null , createDate = 0 , modifiedDate = 0 , DDMStorageId = 0 , recordSetId = 0 , version = null , displayIndex = 0 } " , string0 )
assertEquals ( 0L , dDLRecordCacheModel0 . createDate )
assertEquals ( 0L , dDLRecordCacheModel0 . modifiedDate )
assertEquals ( " { uuid = null , recordSetId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , DDMStructureId = 0 , recordSetKey = null , name = null , description = null , minDisplayRows = 0 , scope = 0 } " , string0 )
assertEquals ( 0 , dDLRecordSetCacheModel0 . minDisplayRows )
assertEquals ( 0 , dDLRecordSetCacheModel0 . minDisplayRows )
assertEquals ( 0L , dDLRecordSetCacheModel0 . userId )
assertEquals ( " { recordVersionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , DDMStorageId = 0 , recordSetId = 0 , recordId = 0 , version = null , displayIndex = 0 , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , dDLRecordVersionCacheModel0 . statusDate )
assertEquals ( 0L , dDLRecordVersionCacheModel0 . groupId )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , elementImpl0 . isReadOnly ( ) )
assertEquals ( "\n < ^O & ! ; | hp [ & xmlns = \"^O & ! ; | hp [ & \" / > " , elementImpl0 . formattedString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( " / common / history . png" , string0 )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecord" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . dynamicdatalists . model . DDLRecord" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "record" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertNotNull ( dDLRecordAssetRenderer0 )
assertNull ( string0 )
assertEquals ( false , userDataElement0 . isTextOnly ( ) )
assertEquals ( "xml" , string0 )
assertEquals ( DDLExportFormat . XML , dDLExportFormat0 )
assertEquals ( DDLExportFormat . CSV , dDLExportFormat0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( invitationUtil0 )
assertNotNull ( configurationActionImpl0 )
assertEquals ( "" , whois0 . getResults ( ) )
assertEquals ( "" , whois0 . getDomain ( ) )
assertEquals ( "" , string0 )
assertNull ( whois0 . getDomain ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , dNSLookup0 . getDomain ( ) )
assertEquals ( "" , string0 )
assertNull ( dNSLookup0 . getResults ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , dNSLookup0 . getResults ( ) )
assertNotNull ( dNSLookup0 )
assertEquals ( 86400000L , long0 )
assertNotNull ( networkUtil0 )
assertEquals ( 86400000L , long0 )
assertEquals ( " / blogs / blogs . png" , string0 )
assertEquals ( "com . liferay . portlet . blogs . model . BlogsEntry" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( findEntryAction0 )
assertNotNull ( configurationActionImpl0 )
assertNotNull ( rSSAction0 )
assertNotNull ( actionUtil0 )
assertEquals ( "com . liferay . portlet . blogs . model . BlogsEntry" , string0 )
assertEquals ( false , class0 . isEnum ( ) )
assertNull ( blogsEntry0 )
assertEquals ( " { } " , hashtable0 . toString ( ) )
assertEquals ( false , blogsEntrySoap0 . getAllowPingbacks ( ) )
assertNull ( date0 )
assertEquals ( false , blogsEntrySoap0 . getSmallImage ( ) )
assertEquals ( 18L , blogsEntrySoap0 . getEntryId ( ) )
assertEquals ( 19L , blogsEntrySoap0 . getSmallImageId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( blogsEntrySoap0 . getTitle ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , blogsEntrySoap0 . getSmallImageId ( ) )
assertEquals ( false , blogsEntrySoap0 . getSmallImage ( ) )
assertNull ( string0 )
assertNull ( blogsEntrySoap0 . getContent ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( blogsEntrySoap0 . getStatusByUserName ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( blogsEntrySoap0 . getDescription ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , blogsEntrySoap0 . getUserId ( ) )
assertEquals ( false , blogsEntrySoap0 . isAllowTrackbacks ( ) )
assertEquals ( 911 , blogsEntrySoap0 . getStatus ( ) )
assertNull ( string0 )
assertEquals ( 18L , blogsEntrySoap0 . getUserId ( ) )
assertEquals ( 0L , blogsEntrySoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 1845L , blogsEntrySoap0 . getCompanyId ( ) )
assertEquals ( 2028L , blogsEntrySoap0 . getGroupId ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( blogsEntrySoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , blogsEntrySoap0 . getAllowTrackbacks ( ) )
assertNull ( string0 )
assertEquals ( 0L , blogsEntrySoap0 . getPrimaryKey ( ) )
assertEquals ( false , blogsEntrySoap0 . isAllowTrackbacks ( ) )
assertNull ( blogsEntrySoap0 . getTrackbacks ( ) )
assertNull ( blogsEntrySoap0 . getStatusByUserName ( ) )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertNotNull ( blogsEntrySoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , blogsStatsUserSoap0 . getRatingsAverageScore ( ) , 0 . 01D )
assertEquals ( 1709L , blogsStatsUserSoap0 . getGroupId ( ) )
assertEquals ( 1709 , blogsStatsUserSoap0 . getRatingsTotalEntries ( ) )
assertEquals ( 0 , blogsStatsUserSoap0 . getEntryCount ( ) )
assertEquals ( 0 , blogsStatsUserSoap0 . getEntryCount ( ) )
assertEquals ( 599 . 3961499210144 , blogsStatsUserSoap0 . getRatingsTotalScore ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , blogsStatsUserSoap0 . getRatingsAverageScore ( ) , 0 . 01D )
assertEquals ( 599 . 3961499210144 , blogsStatsUserSoap0 . getRatingsAverageScore ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 0 , blogsStatsUserSoap0 . getEntryCount ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( blogsStatsUserSoapArray0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNull ( blogsStatsUser0 )
assertEquals ( "com . liferay . portlet . blogs . model . BlogsStatsUser" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( " { uuid = null , entryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , title = null , urlTitle = null , description = null , content = null , displayDate = 0 , allowPingbacks = false , allowTrackbacks = false , trackbacks = null , smallImage = false , smallImageId = 0 , smallImageURL = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( false , blogsEntryCacheModel0 . allowPingbacks )
assertEquals ( false , blogsEntryCacheModel0 . allowTrackbacks )
assertEquals ( false , blogsEntryCacheModel0 . allowPingbacks )
assertEquals ( 0L , blogsEntryCacheModel0 . entryId )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertEquals ( " / blogs / blogs . png" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "blog" , string0 )
assertNotNull ( string0 )
assertEquals ( " / blogs / blogs . png" , string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "blog" , string0 )
assertNull ( string0 )
assertEquals ( "pingback . ping" , string0 )
assertEquals ( "pingback" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " { = = [ Ljava . lang . String ; @2727487f } " , hashtable0 . toString ( ) )
assertNotNull ( linkbackConsumerUtil0 )
assertEquals ( "BlogsStatsUser . lastPostDate DESC" , statsUserLastPostDateComparator0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "BlogsStatsUser . lastPostDate DESC" , string0 )
assertEquals ( "BlogsStatsUser . lastPostDate ASC" , string0 )
assertEquals ( "BlogsEntry . displayDate DESC , BlogsEntry . entryId DESC" , entryDisplayDateComparator0 . getOrderBy ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "BlogsEntry . displayDate DESC , BlogsEntry . entryId DESC" , entryDisplayDateComparator0 . toString ( ) )
assertEquals ( "BlogsEntry . displayDate DESC , BlogsEntry . entryId DESC" , string0 )
assertEquals ( true , entryDisplayDateComparator0 . isAscending ( ) )
assertEquals ( "blogs" , string0 )
assertNull ( string0 )
assertEquals ( 0L , portletPreferencesImpl0 . getPlid ( ) )
assertEquals ( - 48 , amazonRankings0 . getSalesRank ( ) )
assertEquals ( ( - 1244 . 648123311427 ) , amazonRankings0 . getUsedPrice ( ) , 0 . 01D )
assertEquals ( ( - 1560 . 0832102266315 ) , amazonRankings0 . getThirdPartyNewPrice ( ) , 0 . 01D )
assertEquals ( ( - 460 . 62765681410065 ) , amazonRankings0 . getListPrice ( ) , 0 . 01D )
assertEquals ( 1 . 0 , amazonRankings0 . getUsedPrice ( ) , 0 . 01D )
assertEquals ( 0 . 0 , amazonRankings0 . getUsedPrice ( ) , 0 . 01D )
assertEquals ( 1372759316715L , date0 . getTime ( ) )
assertEquals ( 1372759317047L , date0 . getTime ( ) )
assertEquals ( 1372759317599L , date0 . getTime ( ) )
assertEquals ( "" , amazonRankings0 . getReleaseDateAsString ( ) )
assertEquals ( 1372759318189L , date0 . getTime ( ) )
assertEquals ( 1372759318473L , date0 . getTime ( ) )
assertEquals ( 1372759318780L , date0 . getTime ( ) )
assertEquals ( 1372759319150L , date0 . getTime ( ) )
assertEquals ( 1372759319482L , date0 . getTime ( ) )
assertEquals ( - 420 , amazonRankings0 . getSalesRank ( ) )
assertEquals ( 0 . 0 , amazonRankings0 . getUsedPrice ( ) , 0 . 01D )
assertEquals ( 1372759320340L , date0 . getTime ( ) )
assertEquals ( "K'Hsu" , amazonRankings0 . getCatalog ( ) )
assertEquals ( 1372759320953L , date0 . getTime ( ) )
assertEquals ( ( - 1525 . 0133140288092 ) , amazonRankings0 . getThirdPartyNewPrice ( ) , 0 . 01D )
assertEquals ( 0 . 0 , amazonRankings0 . getOurPrice ( ) , 0 . 01D )
assertEquals ( 1372759321800L , date0 . getTime ( ) )
assertEquals ( " < om7#uf8 } } 9 / S" , amazonRankings0 . getLargeImageURL ( ) )
assertEquals ( " + " , amazonRankings0 . getSmallImageURL ( ) )
assertEquals ( 1372759322515L , date0 . getTime ( ) )
assertEquals ( 717 . 2651480826187 , amazonRankings0 . getCollectiblePrice ( ) , 0 . 01D )
assertEquals ( 479 . 0 , amazonRankings0 . getOurPrice ( ) , 0 . 01D )
assertEquals ( 1372759323199L , date0 . getTime ( ) )
assertEquals ( 1372759323460L , date0 . getTime ( ) )
assertEquals ( 1372759323703L , date0 . getTime ( ) )
assertEquals ( "" , amazonRankings0 . getSmallImageURL ( ) )
assertEquals ( 1500 , amazonRankings0 . getSalesRank ( ) )
assertEquals ( 1372759324421L , date0 . getTime ( ) )
assertEquals ( 1372759324655L , date0 . getTime ( ) )
assertEquals ( "GlA } vj < ^vkAkpa$o" , amazonRankings1 . getLargeImageURL ( ) )
assertEquals ( 1372759325307L , date0 . getTime ( ) )
assertEquals ( 1200000L , long0 )
assertNotNull ( stringArray0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( element0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( amazonRankingsUtil0 )
assertNull ( amazonRankings0 )
assertNotNull ( amazonSignedRequestsUtil0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( portletDisplayTemplateUtil0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNotNull ( rolesAdminImpl0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . asset . model . AssetTag" , string0 )
assertEquals ( "com . liferay . portlet . assettagsnavigation" , string0 )
assertNotNull ( actionUtil0 )
assertNull ( serializable0 )
assertNull ( serializable0 )
assertEquals ( 1L , expandoValueSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( expandoValueSoap0 . getData ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , expandoValueSoap0 . getCompanyId ( ) )
assertEquals ( 0L , expandoValueSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , expandoValueSoap0 . getTableId ( ) )
assertEquals ( 1L , expandoValueSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1L , expandoValueSoap0 . getRowId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , expandoValueSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( expandoValueSoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( expandoColumnSoap0 . getName ( ) )
assertEquals ( 0L , expandoColumnSoap0 . getColumnId ( ) )
assertEquals ( 0L , expandoColumnSoap0 . getCompanyId ( ) )
assertEquals ( 0L , expandoColumnSoap0 . getColumnId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 9L ) , expandoColumnSoap0 . getTableId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 9L ) , expandoColumnSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 16 , expandoColumnSoap0 . getType ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( expandoColumnSoapArray0 )
assertEquals ( 0L , mBMessageCustomAttributesDisplay0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBMessageCustomAttributesDisplay0 . getClassNameId ( ) )
assertNull ( string0 )
assertEquals ( 890L , expandoTableSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 890L , expandoTableSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 890L , expandoTableSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , expandoTableSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( expandoTableSoapArray0 )
assertEquals ( 8L , expandoRowSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , expandoRowSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , expandoRowSoap0 . getCompanyId ( ) )
assertEquals ( 0L , expandoRowSoap0 . getClassPK ( ) )
assertEquals ( 8L , expandoRowSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( expandoRowSoapArray0 )
assertEquals ( "ExpandoValue" , class0 . getSimpleName ( ) )
assertNull ( expandoValue0 )
assertEquals ( "com . liferay . portlet . expando . model . ExpandoValue" , string0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( "com . liferay . portlet . expando . model . ExpandoRow" , string0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertNull ( expandoRow0 )
assertNull ( expandoTable0 )
assertEquals ( "com . liferay . portlet . expando . model . ExpandoTable" , string0 )
assertEquals ( "com . liferay . portlet . expando . model . ExpandoTable" , class0 . getName ( ) )
assertNotNull ( expandoColumnConstants0 )
assertNotNull ( boolean0 )
assertEquals ( false , ( boolean ) boolean0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0 . 0 , ( double ) double0 , 0 . 01D )
assertNotNull ( boolean0 )
assertEquals ( 0 . 0F , ( float ) float0 , 0 . 01F )
assertNotNull ( boolean0 )
assertEquals ( 0 , ( int ) integer0 )
assertNotNull ( string0 )
assertEquals ( 0L , ( long ) long0 )
assertNotNull ( short0 )
assertEquals ( 0 , ( int ) integer0 )
assertNotNull ( integer0 )
assertEquals ( ( short ) 0 , ( short ) short0 )
assertNotNull ( boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "custom . field . java . lang . String . array" , string0 )
assertEquals ( "custom . field . boolean" , string0 )
assertEquals ( "custom . field . boolean . array" , string0 )
assertEquals ( "custom . field . java . util . Date" , string0 )
assertEquals ( "custom . field . java . util . Date . array" , string0 )
assertEquals ( "custom . field . double" , string0 )
assertEquals ( "custom . field . double . array" , string0 )
assertEquals ( "custom . field . float" , string0 )
assertEquals ( "custom . field . float . array" , string0 )
assertEquals ( "custom . field . int" , string0 )
assertEquals ( "custom . field . int . array" , string0 )
assertEquals ( "custom . field . long" , string0 )
assertEquals ( "custom . field . long . array" , string0 )
assertEquals ( "custom . field . number" , string0 )
assertEquals ( "custom . field . number . array" , string0 )
assertEquals ( "custom . field . short" , string0 )
assertEquals ( "custom . field . short . array" , string0 )
assertEquals ( "custom . field . java . lang . String" , string0 )
assertEquals ( "Unknown" , string0 )
assertNull ( expandoColumn0 )
assertEquals ( "com . liferay . portlet . expando . model . ExpandoColumn" , string0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( " { columnId = 0 , companyId = 0 , tableId = 0 , name = null , type = 0 , defaultData = null , typeSettings = null } " , string0 )
assertEquals ( 0L , expandoColumnCacheModel0 . tableId )
assertEquals ( 0 , expandoColumnCacheModel0 . type )
assertEquals ( 0 , expandoColumnCacheModel0 . type )
assertEquals ( " { valueId = 0 , companyId = 0 , tableId = 0 , columnId = 0 , rowId = 0 , classNameId = 0 , classPK = 0 , data = null } " , string0 )
assertEquals ( 0L , expandoValueCacheModel0 . companyId )
assertEquals ( 0L , expandoValueCacheModel0 . tableId )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( expandoTableLocalService0 )
assertNull ( expandoRowLocalService0 )
assertNull ( expandoColumnService0 )
assertEquals ( false , boolean0 )
assertNotNull ( rSSAction0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticle" , string0 )
assertEquals ( " / common / history . png" , string0 )
assertNotNull ( getTemplateAction0 )
assertNotNull ( configurationActionImpl0 )
assertNotNull ( actionUtil0 )
assertNotNull ( getTemplateContentAction0 )
assertEquals ( "\n < k : k xmlns : k = \"k\" > \n\t < k / > \n < / k : k > " , elementImpl0 . formattedString ( ) )
assertEquals ( "com . liferay . portlet . journal . model . JournalStructure" , string0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( journalStructure0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( journalContentSearch0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalContentSearch" , string0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalArticleResourceSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( journalArticleResourceSoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( journalArticleResourceSoap0 . getUuid ( ) )
assertEquals ( 0L , journalArticleResourceSoap0 . getGroupId ( ) )
assertNotNull ( journalArticleResourceSoapArray0 )
assertNull ( journalTemplate0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalTemplate" , string0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalTemplate" , class0 . getCanonicalName ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 38 , journalFeedSoap0 . getDelta ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( journalFeedSoap0 . getName ( ) )
assertNull ( string0 )
assertNull ( journalFeedSoap0 . getOrderByCol ( ) )
assertNull ( journalFeedSoap0 . getTemplateId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( journalFeedSoap0 . getRendererTemplateId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , journalFeedSoap0 . getDelta ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalFeedSoap0 . getPrimaryKey ( ) )
assertNull ( journalFeedSoap0 . getTargetLayoutFriendlyUrl ( ) )
assertEquals ( 0 . 0 , journalFeedSoap0 . getFeedVersion ( ) , 0 . 01D )
assertNull ( date0 )
assertNull ( journalFeedSoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( journalFeedSoap0 . getName ( ) )
assertNull ( string0 )
assertNull ( journalFeedSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalFeedSoap0 . getUserId ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 0L , journalFeedSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( journalFeedSoap0 . getFeedType ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( journalFeedSoap0 . getFeedType ( ) )
assertEquals ( 0L , long0 )
assertNull ( journalFeedSoap0 . getStructureId ( ) )
assertNull ( journalFeedSoap0 . getFeedType ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( ( - 1100 . 5696459138355 ) , journalFeedSoap0 . getFeedVersion ( ) , 0 . 01D )
assertNull ( date0 )
assertEquals ( 0L , journalFeedSoap0 . getCompanyId ( ) )
assertNull ( journalFeedSoap0 . getUuid ( ) )
assertNull ( journalFeedSoap0 . getStructureId ( ) )
assertNull ( journalFeedSoap0 . getRendererTemplateId ( ) )
assertNotNull ( journalFeedSoapArray0 )
assertEquals ( 1L , journalFolderSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( "QDi0$A23Z ] DBs@m > " , journalFolderSoap0 . getUserName ( ) )
assertEquals ( 0L , journalFolderSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , journalFolderSoap0 . getParentFolderId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalFolderSoap0 . getParentFolderId ( ) )
assertEquals ( 0L , journalFolderSoap0 . getParentFolderId ( ) )
assertEquals ( 0L , journalFolderSoap0 . getGroupId ( ) )
assertNull ( journalFolderSoap0 . getName ( ) )
assertEquals ( 1L , journalFolderSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , journalFolderSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , journalFolderSoap0 . getCompanyId ( ) )
assertNotNull ( journalFolderSoapArray0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticleImage" , string0 )
assertNull ( journalArticleImage0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticleImage" , journalArticleImageWrapper0 . getModelClassName ( ) )
assertNull ( journalFeed0 )
assertEquals ( false , class0 . isArray ( ) )
assertEquals ( "com . liferay . portlet . journal . model . JournalFeed" , string0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalFeed" , journalFeedWrapper0 . getModelClassName ( ) )
assertEquals ( 103L , journalTemplateSoap0 . getGroupId ( ) )
assertNull ( journalTemplateSoap0 . getUuid ( ) )
assertEquals ( 0L , journalTemplateSoap0 . getGroupId ( ) )
assertEquals ( 0L , journalTemplateSoap0 . getUserId ( ) )
assertNull ( journalTemplateSoap0 . getSmallImageURL ( ) )
assertNull ( journalTemplateSoap0 . getUuid ( ) )
assertEquals ( "getBeanProperty" , journalTemplateSoap0 . getXsl ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalTemplateSoap0 . getId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , journalTemplateSoap0 . getSmallImageId ( ) )
assertEquals ( false , journalTemplateSoap0 . isCacheable ( ) )
assertNull ( string0 )
assertNull ( journalTemplateSoap0 . getStructureId ( ) )
assertNull ( string0 )
assertEquals ( false , journalTemplateSoap0 . isSmallImage ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalTemplateSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalTemplateSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( ( - 11L ) , journalTemplateSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalTemplateSoap0 . getGroupId ( ) )
assertEquals ( true , journalTemplateSoap0 . getSmallImage ( ) )
assertEquals ( true , journalTemplateSoap0 . isCacheable ( ) )
assertNotNull ( journalTemplateSoapArray0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticle" , string0 )
assertNull ( journalArticle0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , journalArticleImageSoap0 . getVersion ( ) , 0 . 01D )
assertEquals ( 20 . 0 , journalArticleImageSoap0 . getVersion ( ) , 0 . 01D )
assertNull ( journalArticleImageSoap0 . getArticleId ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalArticleImageSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( journalArticleImageSoap0 . getLanguageId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , journalArticleImageSoap0 . getTempImage ( ) )
assertEquals ( false , journalArticleImageSoap0 . getTempImage ( ) )
assertEquals ( 20L , journalArticleImageSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNotNull ( journalArticleImageSoapArray0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portlet . journal . model . JournalFolder" , string0 )
assertNull ( journalFolder0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( false , journalArticleSoap0 . getSmallImage ( ) )
assertEquals ( 4 , journalArticleSoap0 . getStatus ( ) )
assertEquals ( 6L , journalArticleSoap0 . getCompanyId ( ) )
assertNull ( journalArticleSoap0 . getType ( ) )
assertNull ( date0 )
assertEquals ( false , journalArticleSoap0 . isIndexable ( ) )
assertNull ( journalArticleSoap0 . getTitle ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 . 0 , journalArticleSoap0 . getVersion ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( false , journalArticleSoap0 . getIndexable ( ) )
assertNull ( string0 )
assertEquals ( false , journalArticleSoap0 . isSmallImage ( ) )
assertNull ( date0 )
assertNull ( date0 )
assertNull ( string0 )
assertNull ( journalArticleSoap0 . getTemplateId ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( journalArticleSoap0 . getType ( ) )
assertNull ( string0 )
assertNull ( journalArticleSoap0 . getLayoutUuid ( ) )
assertEquals ( 0L , journalArticleSoap0 . getFolderId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , journalArticleSoap0 . getClassNameId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , journalArticleSoap0 . getUserId ( ) )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( false , journalArticleSoap0 . getIndexable ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , journalArticleSoap0 . getVersion ( ) , 0 . 01D )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( journalArticleSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , journalArticleSoap0 . isIndexable ( ) )
assertEquals ( 6L , journalArticleSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 1415L , journalArticleSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , journalArticleSoap0 . getClassNameId ( ) )
assertNull ( journalArticleSoap0 . getArticleId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalArticleSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalArticleSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalArticleSoap0 . getClassNameId ( ) )
assertEquals ( 0L , journalArticleSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , journalArticleSoap0 . getPrimaryKey ( ) )
assertEquals ( 0 . 0 , journalArticleSoap0 . getVersion ( ) , 0 . 01D )
assertNull ( journalArticleSoap0 . getTemplateId ( ) )
assertEquals ( 0 , journalArticleSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , journalArticleSoap0 . getSmallImage ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( journalArticleSoap0 . getArticleId ( ) )
assertNotNull ( journalArticleSoapArray0 )
assertEquals ( 0L , journalContentSearchSoap0 . getGroupId ( ) )
assertEquals ( ( - 54L ) , journalContentSearchSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( true , journalContentSearchSoap0 . isPrivateLayout ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalContentSearchSoap0 . getCompanyId ( ) )
assertEquals ( ( - 54L ) , journalContentSearchSoap0 . getLayoutId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , journalContentSearchSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "d" , journalContentSearchSoap0 . getPortletId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( journalContentSearchSoapArray0 )
assertNull ( journalArticleResource0 )
assertEquals ( "interface com . liferay . portlet . journal . model . JournalArticleResource" , class0 . toString ( ) )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticleResource" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( journalStructureSoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , journalStructureSoap0 . getPrimaryKey ( ) )
assertEquals ( 18L , journalStructureSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalStructureSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( journalStructureSoap0 . getDescription ( ) )
assertNull ( string0 )
assertEquals ( 0L , journalStructureSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( ( - 1696L ) , journalStructureSoap0 . getCompanyId ( ) )
assertEquals ( 0L , journalStructureSoap0 . getUserId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( journalStructureSoap0 . getXsd ( ) )
assertNull ( string0 )
assertNull ( journalStructureSoap0 . getParentStructureId ( ) )
assertNull ( journalStructureSoap0 . getParentStructureId ( ) )
assertNull ( journalStructureSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , journalStructureSoap0 . getCompanyId ( ) )
assertNotNull ( journalStructureSoapArray0 )
assertEquals ( " { uuid = null , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , structureId = null , parentStructureId = null , name = null , description = null , xsd = null } " , string0 )
assertEquals ( " { uuid = log4j . throwableRenderer . , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , structureId = null , parentStructureId = null , name = null , description = null , xsd = null } " , journalStructureCacheModel0 . toString ( ) )
assertEquals ( " { uuid = null , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = NON_UNIQUE , createDate = 0 , modifiedDate = 0 , structureId = null , parentStructureId = null , name = null , description = null , xsd = null } " , journalStructureCacheModel0 . toString ( ) )
assertEquals ( " { uuid = null , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , structureId = NON_UNIQUE , parentStructureId = null , name = null , description = null , xsd = null } " , journalStructureCacheModel0 . toString ( ) )
assertEquals ( " { uuid = null , folderId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentFolderId = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , journalFolderCacheModel0 . groupId )
assertEquals ( 0L , journalFolderCacheModel0 . groupId )
assertEquals ( ( - 14L ) , journalArticleDisplayImpl0 . getCompanyId ( ) )
assertEquals ( ( - 1348L ) , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( 1097 . 0 , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( 7L , journalArticleDisplayImpl0 . getCompanyId ( ) )
assertEquals ( 1097 . 0 , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 1348L ) , journalArticleDisplayImpl0 . getCompanyId ( ) )
assertEquals ( 1097 . 0 , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( ( - 6L ) , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( 1 . 0 , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( 176L , journalArticleDisplayImpl0 . getId ( ) )
assertEquals ( 0L , journalArticleDisplayImpl0 . getSmallImageId ( ) )
assertEquals ( 176L , journalArticleDisplayImpl0 . getId ( ) )
assertEquals ( true , journalArticleDisplayImpl0 . isSmallImage ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getCompanyId ( ) )
assertEquals ( ( - 6L ) , journalArticleDisplayImpl0 . getCompanyId ( ) )
assertEquals ( 868 . 0 , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 6L ) , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( 1L , journalArticleDisplayImpl0 . getGroupId ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getId ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getId ( ) )
assertEquals ( false , journalArticleDisplayImpl0 . isSmallImage ( ) )
assertEquals ( ( - 14L ) , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getUserId ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( ( - 1348 . 0 ) , journalArticleDisplayImpl0 . getVersion ( ) , 0 . 01D )
assertEquals ( ( - 6L ) , journalArticleDisplayImpl0 . getId ( ) )
assertEquals ( true , journalArticleDisplayImpl0 . isSmallImage ( ) )
assertEquals ( 868L , journalArticleDisplayImpl0 . getSmallImageId ( ) )
assertEquals ( 1097L , journalArticleDisplayImpl0 . getResourcePrimKey ( ) )
assertEquals ( true , journalArticleDisplayImpl0 . isSmallImage ( ) )
assertEquals ( " { uuid = null , resourcePrimKey = 0 , groupId = 0 , articleId = null } " , string0 )
assertEquals ( 0L , journalArticleResourceCacheModel0 . groupId )
assertEquals ( 0L , journalArticleResourceCacheModel0 . groupId )
assertEquals ( " { uuid = null , id = 0 , resourcePrimKey = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , folderId = 0 , classNameId = 0 , classPK = 0 , articleId = null , version = 0 . 0 , title = null , urlTitle = null , description = null , content = null , type = null , structureId = null , templateId = null , layoutUuid = null , displayDate = 0 , expirationDate = 0 , reviewDate = 0 , indexable = false , smallImage = false , smallImageId = 0 , smallImageURL = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , journalArticleCacheModel0 . classNameId )
assertEquals ( " { uuid = null , id = 0 , resourcePrimKey = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , folderId = 0 , classNameId = 0 , classPK = 0 , articleId = sHCSO , version = 0 . 0 , title = null , urlTitle = null , description = null , content = null , type = null , structureId = null , templateId = null , layoutUuid = null , displayDate = 0 , expirationDate = 0 , reviewDate = 0 , indexable = false , smallImage = false , smallImageId = 0 , smallImageURL = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , journalArticleCacheModel0 . toString ( ) )
assertEquals ( 0L , journalArticleCacheModel0 . classNameId )
assertEquals ( 0L , journalArticleCacheModel0 . resourcePrimKey )
assertEquals ( " { uuid = null , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , feedId = null , name = null , description = null , type = null , structureId = null , templateId = null , rendererTemplateId = null , delta = 0 , orderByCol = null , orderByType = null , targetLayoutFriendlyUrl = null , targetPortletId = null , contentField = null , feedType = null , feedVersion = 0 . 0 } " , string0 )
assertEquals ( 0L , journalFeedCacheModel0 . companyId )
assertEquals ( 0L , journalFeedCacheModel0 . id )
assertEquals ( 0L , journalFeedCacheModel0 . id )
assertEquals ( 0L , journalFeedCacheModel0 . userId )
assertEquals ( " { uuid = null , id = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , templateId = null , structureId = null , name = null , description = null , xsl = null , langType = null , cacheable = false , smallImage = false , smallImageId = 0 , smallImageURL = null } " , string0 )
assertEquals ( 0L , journalTemplateCacheModel0 . createDate )
assertEquals ( 0L , journalTemplateCacheModel0 . groupId )
assertEquals ( 0L , journalTemplateCacheModel0 . companyId )
assertEquals ( false , journalTemplateCacheModel0 . smallImage )
assertEquals ( " { articleImageId = 0 , groupId = 0 , articleId = null , version = 0 . 0 , elInstanceId = null , elName = null , languageId = null , tempImage = false } " , string0 )
assertEquals ( " { articleImageId = 0 , groupId = 0 , articleId = { articleImageId = 0 , groupId = 0 , articleId = null , version = 0 . 0 , elInstanceId = null , elName = null , languageId = null , tempImage = false } , version = 0 . 0 , elInstanceId = null , elName = null , languageId = null , tempImage = false } " , journalArticleImageCacheModel0 . toString ( ) )
assertEquals ( 0L , journalArticleImageCacheModel0 . articleImageId )
assertEquals ( 0 . 0 , journalArticleImageCacheModel0 . version , 0 . 01D )
assertEquals ( " { contentSearchId = 0 , groupId = 0 , companyId = 0 , privateLayout = false , layoutId = 0 , portletId = null , articleId = null } " , string0 )
assertEquals ( 0L , journalContentSearchCacheModel0 . companyId )
assertEquals ( " { contentSearchId = 0 , groupId = 0 , companyId = 0 , privateLayout = false , layoutId = 0 , portletId = null , articleId = null } " , journalContentSearchCacheModel0 . toString ( ) )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "content" , string0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticle" , string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( " / common / history . png" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "view" , string0 )
assertEquals ( "com . liferay . portlet . journal . model . JournalArticle" , string0 )
assertEquals ( true , boolean0 )
assertNull ( journalArticle0 )
assertNull ( string0 )
assertNull ( journalArticleImageLocalService0 )
assertNull ( journalTemplateLocalService0 )
assertNotNull ( journalTemplateLocalServiceUtil0 )
assertNotNull ( journalFolderLocalServiceUtil0 )
assertNotNull ( journalTemplateServiceUtil0 )
assertNull ( journalFolderLocalService0 )
assertNotNull ( journalArticleImageLocalServiceUtil0 )
assertNull ( journalStructureLocalService0 )
assertNotNull ( journalFeedServiceUtil0 )
assertNull ( journalFeedService0 )
assertNotNull ( journalStructureServiceUtil0 )
assertNotNull ( journalFolderServiceUtil0 )
assertNull ( journalStructureService0 )
assertNull ( journalFeedLocalService0 )
assertNull ( journalFolderService0 )
assertNotNull ( journalArticleLocalServiceUtil0 )
assertNotNull ( journalTemplateServiceHttp0 )
assertNotNull ( journalTemplateServiceSoap0 )
assertNotNull ( journalPermission0 )
assertNotNull ( journalTemplatePermission0 )
assertNotNull ( journalStructurePermission0 )
assertNull ( transformer0 )
assertEquals ( "\u0007 ; h < [ 5a > vI" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , nonLazyElement0 . isTextOnly ( ) )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "VO" , string0 )
assertEquals ( "VO" , string0 )
assertEquals ( "VO" , string0 )
assertEquals ( "GLOBAL - PROPERTIES" , string0 )
assertEquals ( "ema . lArticleppoRequested6ody" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( source0 )
assertNull ( source0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( "null null" , string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "f & 4H2G" , string0 )
assertNotNull ( string0 )
assertEquals ( " < ! [ CDATA [ i_" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "createDate DESC" , string0 )
assertEquals ( "createDate ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "modifiedDate DESC" , string0 )
assertEquals ( true , articleModifiedDateComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "JournalArticle . articleId DESC , JournalArticle . version DESC" , string0 )
assertEquals ( "JournalArticle . articleId ASC , JournalArticle . version ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "title DESC" , string0 )
assertEquals ( true , articleTitleComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "JournalArticle . version DESC" , string0 )
assertEquals ( "JournalArticle . version ASC" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , articleDisplayDateComparator0 . isAscending ( ) )
assertEquals ( "displayDate DESC , version DESC" , string0 )
assertEquals ( true , articleDisplayDateComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "JournalArticle . reviewDate DESC , JournalArticle . version DESC" , string0 )
assertEquals ( true , articleReviewDateComparator0 . isAscending ( ) )
assertEquals ( "JournalStructure . id DESC" , string0 )
assertEquals ( true , structurePKComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "JournalStructure . id ASC" , string0 )
assertNull ( string0 )
assertEquals ( "web - content" , string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , unicodeProperties0 . size ( ) )
assertEquals ( " [ | = C34eKHSGeyJ } ) n } = [ | = C34eKHSGeyJ } ) n } \n" , unicodeProperties0 . toSortedString ( ) )
assertEquals ( "lfr - theme : 7f08p` : * " , string0 )
assertEquals ( "4d 6 * D < vXz@myX , " , string0 )
assertNotNull ( longArray0 )
assertEquals ( false , themeDisplay0 . isShowHomeIcon ( ) )
assertNotNull ( layoutsTreeUtil0 )
assertNotNull ( iGUtil0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertNotNull ( editLayoutBranchAction0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( viewAction0 )
assertNotNull ( configurationActionImpl0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( loginUtil0 )
assertNotNull ( translatorPortlet0 )
assertEquals ( "" , translation0 . getFromLanguageId ( ) )
assertEquals ( "_72Fu#T" , string0 )
assertEquals ( "_72Fu#T" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( translatorUtil0 )
assertNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( 7776000000L , long0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portal . model . Group" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMessage" , string0 )
assertEquals ( " / common / conversation . png" , string0 )
assertNotNull ( string0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( findMessageAction0 )
assertNotNull ( findMessageAction0 )
assertNotNull ( findMessageAction0 )
assertEquals ( " / message_boards / view" , string0 )
assertEquals ( "mbCategoryId" , string0 )
assertNotNull ( rSSAction0 )
assertNotNull ( actionUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( " / message_boards / view_message" , string0 )
assertEquals ( true , class0 . isInterface ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBThreadFlag" , string0 )
assertNull ( mBThreadFlag0 )
assertEquals ( 8 , map0 . size ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 21 , mBThreadSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 25 , mBThreadSoap0 . getMessageCount ( ) )
assertEquals ( - 1867 , mBThreadSoap0 . getViewCount ( ) )
assertEquals ( 0L , mBThreadSoap0 . getCategoryId ( ) )
assertEquals ( 0 , mBThreadSoap0 . getStatus ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , mBThreadSoap0 . getPriority ( ) , 0 . 01D )
assertEquals ( false , mBThreadSoap0 . getQuestion ( ) )
assertEquals ( 25L , mBThreadSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 21L , mBThreadSoap0 . getRootMessageId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadSoap0 . getStatusByUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0 , mBThreadSoap0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadSoap0 . getThreadId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1867L ) , mBThreadSoap0 . getStatusByUserId ( ) )
assertEquals ( "" , mBThreadSoap0 . getStatusByUserName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadSoap0 . getCompanyId ( ) )
assertEquals ( false , mBThreadSoap0 . getQuestion ( ) )
assertNotNull ( mBThreadSoapArray0 )
assertEquals ( 0L , mBStatsUserSoap0 . getGroupId ( ) )
assertEquals ( 0L , mBStatsUserSoap0 . getPrimaryKey ( ) )
assertEquals ( 0 , mBStatsUserSoap0 . getMessageCount ( ) )
assertEquals ( 0L , mBStatsUserSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , mBStatsUserSoap0 . getMessageCount ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( mBStatsUserSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadFlagSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , mBThreadFlagSoap0 . getThreadId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadFlagSoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBThreadFlagSoap0 . getThreadId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( mBThreadFlagSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBBanSoap0 . getPrimaryKey ( ) )
assertNull ( mBBanSoap0 . getUserName ( ) )
assertNull ( mBBanSoap0 . getUserName ( ) )
assertEquals ( 0L , mBBanSoap0 . getCompanyId ( ) )
assertEquals ( 0L , mBBanSoap0 . getGroupId ( ) )
assertEquals ( 0L , mBBanSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( mBBanSoap0 . getUserName ( ) )
assertNull ( string0 )
assertEquals ( 0L , mBBanSoap0 . getBanId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNotNull ( mBBanSoapArray0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertNull ( mBCategory0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBDiscussionSoap0 . getThreadId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBDiscussionSoap0 . getClassNameId ( ) )
assertEquals ( 0L , mBDiscussionSoap0 . getDiscussionId ( ) )
assertEquals ( 0L , mBDiscussionSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( mBDiscussionSoapArray0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertNull ( mBDiscussion0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBDiscussion" , string0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertNull ( mBCategorySoap0 . getName ( ) )
assertEquals ( 0L , mBCategorySoap0 . getPrimaryKey ( ) )
assertNull ( mBCategorySoap0 . getDisplayStyle ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , mBCategorySoap0 . getCategoryId ( ) )
assertEquals ( 0L , mBCategorySoap0 . getCategoryId ( ) )
assertNull ( mBCategorySoap0 . getUuid ( ) )
assertEquals ( - 1984 , mBCategorySoap0 . getMessageCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , mBCategorySoap0 . getThreadCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( - 1984 , mBCategorySoap0 . getThreadCount ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 742L ) , mBCategorySoap0 . getCompanyId ( ) )
assertEquals ( ( - 742L ) , mBCategorySoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( 0L , mBCategorySoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , mBCategorySoap0 . getGroupId ( ) )
assertEquals ( 1356L , mBCategorySoap0 . getParentCategoryId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "9 ] = TM , : h > O * Kv~b = " , mBCategorySoap0 . getUuid ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNotNull ( mBCategorySoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , mBMessageSoap0 . getAnonymous ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 524L , mBMessageSoap0 . getThreadId ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( mBMessageSoap0 . getSubject ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( 443L , mBMessageSoap0 . getCategoryId ( ) )
assertEquals ( 0L , mBMessageSoap0 . getMessageId ( ) )
assertEquals ( 0 . 0 , mBMessageSoap0 . getPriority ( ) , 0 . 01D )
assertNull ( mBMessageSoap0 . getUuid ( ) )
assertEquals ( 0L , mBMessageSoap0 . getCategoryId ( ) )
assertNull ( date0 )
assertEquals ( false , mBMessageSoap0 . isAllowPingbacks ( ) )
assertNull ( string0 )
assertNull ( mBMessageSoap0 . getBody ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBMessageSoap0 . getClassNameId ( ) )
assertEquals ( 0L , mBMessageSoap0 . getParentMessageId ( ) )
assertEquals ( false , mBMessageSoap0 . isAllowPingbacks ( ) )
assertEquals ( 0L , mBMessageSoap0 . getThreadId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 443 , mBMessageSoap0 . getStatus ( ) )
assertEquals ( 0L , mBMessageSoap0 . getClassNameId ( ) )
assertEquals ( 11L , mBMessageSoap0 . getRootMessageId ( ) )
assertEquals ( false , mBMessageSoap0 . getAnswer ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , mBMessageSoap0 . getClassPK ( ) )
assertEquals ( false , mBMessageSoap0 . isAnswer ( ) )
assertEquals ( true , mBMessageSoap0 . getAttachments ( ) )
assertEquals ( ( - 22L ) , mBMessageSoap0 . getClassPK ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mBMessageSoap0 . getCategoryId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 524L , mBMessageSoap0 . getUserId ( ) )
assertEquals ( 0L , mBMessageSoap0 . getCategoryId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 22L ) , mBMessageSoap0 . getGroupId ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNotNull ( mBMessageSoapArray0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , string0 )
assertNull ( mBBan0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNull ( mBThread0 )
assertEquals ( "interface com . liferay . portlet . messageboards . model . MBThread" , class0 . toString ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBThread" , string0 )
assertNull ( mBMessage0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMessage" , string0 )
assertEquals ( "MBMessage" , class0 . getSimpleName ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1275L ) , mBMailingListSoap0 . getGroupId ( ) )
assertEquals ( 0L , mBMailingListSoap0 . getGroupId ( ) )
assertEquals ( 0L , mBMailingListSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , mBMailingListSoap0 . isOutCustom ( ) )
assertEquals ( false , mBMailingListSoap0 . getOutUseSSL ( ) )
assertEquals ( false , mBMailingListSoap0 . getAllowAnonymous ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , mBMailingListSoap0 . getActive ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( mBMailingListSoap0 . getInPassword ( ) )
assertEquals ( 0L , mBMailingListSoap0 . getGroupId ( ) )
assertEquals ( false , mBMailingListSoap0 . isActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( mBMailingListSoap0 . getInUserName ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , mBMailingListSoap0 . isActive ( ) )
assertEquals ( 0L , mBMailingListSoap0 . getUserId ( ) )
assertEquals ( 18 , mBMailingListSoap0 . getInServerPort ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertNull ( mBMailingListSoap0 . getOutEmailAddress ( ) )
assertEquals ( 0 , mBMailingListSoap0 . getInReadInterval ( ) )
assertEquals ( 0L , mBMailingListSoap0 . getUserId ( ) )
assertEquals ( 0 , mBMailingListSoap0 . getOutServerPort ( ) )
assertEquals ( false , mBMailingListSoap0 . isActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertNull ( mBMailingListSoap0 . getEmailAddress ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( false , mBMailingListSoap0 . getAllowAnonymous ( ) )
assertEquals ( false , mBMailingListSoap0 . isInUseSSL ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 811L , mBMailingListSoap0 . getCompanyId ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( mBMailingListSoap0 . getUuid ( ) )
assertEquals ( ( - 1275L ) , mBMailingListSoap0 . getCategoryId ( ) )
assertEquals ( false , mBMailingListSoap0 . getOutUseSSL ( ) )
assertNotNull ( mBMailingListSoapArray0 )
assertNull ( mBStatsUser0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBStatsUser" , string0 )
assertEquals ( "MBStatsUser" , class0 . getSimpleName ( ) )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNotNull ( string0 )
assertNull ( list0 )
assertNotNull ( mBTreeWalkerImpl0 )
assertEquals ( "flat" , string0 )
assertNull ( mBCategory0 )
assertNull ( mBTreeWalkerImpl0 )
assertNull ( mBMessage0 )
assertNull ( mBThread0 )
assertNull ( mBMessage0 )
assertNull ( mBThread0 )
assertNull ( mBThread0 )
assertEquals ( " { banId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , banUserId = 0 } " , string0 )
assertEquals ( 0L , mBBanCacheModel0 . banId )
assertEquals ( 0L , mBBanCacheModel0 . companyId )
assertEquals ( " { uuid = null , categoryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentCategoryId = 0 , name = null , description = null , displayStyle = null , threadCount = 0 , messageCount = 0 , lastPostDate = 0 } " , string0 )
assertEquals ( 0L , mBCategoryCacheModel0 . createDate )
assertEquals ( 0L , mBCategoryCacheModel0 . createDate )
assertEquals ( 0L , mBCategoryCacheModel0 . companyId )
assertEquals ( " { uuid = null , messageId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , categoryId = 0 , threadId = 0 , rootMessageId = 0 , parentMessageId = 0 , subject = null , body = null , format = null , attachments = false , anonymous = false , priority = 0 . 0 , allowPingbacks = false , answer = false , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , mBMessageCacheModel0 . messageId )
assertEquals ( false , mBMessageCacheModel0 . allowPingbacks )
assertEquals ( 0L , mBMessageCacheModel0 . parentMessageId )
assertEquals ( 0 . 0 , mBMessageCacheModel0 . priority , 0 . 01D )
assertEquals ( " { discussionId = 0 , classNameId = 0 , classPK = 0 , threadId = 0 } " , string0 )
assertEquals ( 0L , mBDiscussionCacheModel0 . classNameId )
assertNotNull ( string0 )
assertNull ( list0 )
assertEquals ( " { threadId = 0 , groupId = 0 , companyId = 0 , categoryId = 0 , rootMessageId = 0 , rootMessageUserId = 0 , messageCount = 0 , viewCount = 0 , lastPostByUserId = 0 , lastPostDate = 0 , priority = 0 . 0 , question = false , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0L , mBThreadCacheModel0 . threadId )
assertEquals ( 0L , mBThreadCacheModel0 . companyId )
assertEquals ( " { uuid = null , mailingListId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , categoryId = 0 , emailAddress = null , inProtocol = null , inServerName = null , inServerPort = 0 , inUseSSL = false , inUserName = null , inPassword = null , inReadInterval = 0 , outEmailAddress = null , outCustom = false , outServerName = null , outServerPort = 0 , outUseSSL = false , outUserName = null , outPassword = null , allowAnonymous = false , active = false } " , string0 )
assertEquals ( 0L , mBMailingListCacheModel0 . groupId )
assertEquals ( false , mBMailingListCacheModel0 . allowAnonymous )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1L ) , long0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( 0L , long0 )
assertNull ( portletURL0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBDiscussion" , string0 )
assertEquals ( " / common / conversation . png" , string0 )
assertEquals ( " / common / conversation . png" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " / common / conversation . png" , string0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "message" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " / common / conversation . png" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( "discussion" , string0 )
assertNotNull ( string0 )
assertEquals ( "category" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( " / common / conversation . png" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBThread" , mBThreadTrashHandler0 . getClassName ( ) )
assertEquals ( "" , mBThreadTrashHandler0 . getSubcontainerModelName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBThread" , string0 )
assertNull ( mBMailingListLocalService0 )
assertNull ( mBStatsUserLocalService0 )
assertNotNull ( mBCategoryLocalServiceUtil0 )
assertNotNull ( mBThreadFlagLocalServiceUtil0 )
assertNull ( mBCategoryLocalService0 )
assertNull ( mBThreadFlagLocalService0 )
assertNull ( mBThreadLocalService0 )
assertNotNull ( mBCategoryServiceUtil0 )
assertNull ( mBCategoryService0 )
assertNotNull ( mBDiscussionLocalServiceUtil0 )
assertNull ( mBDiscussionLocalService0 )
assertNotNull ( mBBanServiceUtil0 )
assertNotNull ( mBThreadServiceUtil0 )
assertNotNull ( mBMessageServiceUtil0 )
assertNotNull ( mBThreadLocalServiceUtil0 )
assertNotNull ( mBBanLocalServiceUtil0 )
assertNull ( mBThreadService0 )
assertNull ( mBBanLocalService0 )
assertNull ( mBBanService0 )
assertNull ( mBMessageService0 )
assertNotNull ( mBStatsUserLocalServiceUtil0 )
assertNull ( userLocalService0 )
assertNull ( mBBanPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMessageLocalService0 )
assertNull ( mBThreadFlagLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadPersistence0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalService0 )
assertNull ( mBMessageService0 )
assertNull ( mBThreadFinder0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryService0 )
assertNull ( mBThreadService0 )
assertNull ( mBStatsUserPersistence0 )
assertNull ( mBCategoryFinder0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListLocalService0 )
assertNull ( mBThreadFlagPersistence0 )
assertNull ( resourceLocalService0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListPersistence0 )
assertNull ( userFinder0 )
assertNull ( mBStatsUserLocalService0 )
assertNull ( mBCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertNull ( mBDiscussionLocalService0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessagePersistence0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessageFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , class0 . getCanonicalName ( ) )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalService0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalService0 )
assertNull ( mBDiscussionPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , string0 )
assertNull ( mBMailingListLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBMailingList" , mBMailingListLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListPersistence0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBStatsUserLocalService0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListLocalService0 )
assertNull ( mBCategoryPersistence0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadService0 )
assertNull ( mBMessageFinder0 )
assertNull ( mBCategoryService0 )
assertNull ( resourceLocalService0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBThreadFinder0 )
assertNull ( mBMessageLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( userLocalService0 )
assertNull ( mBBanLocalService0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , string0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBDiscussionPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBDiscussionLocalService0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBThreadFlagPersistence0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMessagePersistence0 )
assertNull ( mBThreadPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryFinder0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessageService0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( mBBanServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadFlagLocalService0 )
assertNull ( userService0 )
assertNull ( mBStatsUserPersistence0 )
assertNull ( mBBanService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBDiscussionLocalService0 )
assertNull ( userFinder0 )
assertNull ( mBThreadFlagLocalService0 )
assertNull ( mBMessageLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , string0 )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( string0 )
assertNull ( mBMailingListPersistence0 )
assertNull ( mBDiscussionPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( " < nQR5s" , mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessageFinder0 )
assertNull ( mBMessageService0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( mBMessagePersistence0 )
assertNull ( mBThreadPersistence0 )
assertNull ( mBThreadService0 )
assertNull ( mBStatsUserLocalService0 )
assertNull ( mBBanService0 )
assertNull ( mBCategoryService0 )
assertNull ( mBCategoryFinder0 )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalService0 )
assertNull ( mBCategoryPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( mBThreadLocalService0 )
assertNull ( mBStatsUserPersistence0 )
assertNull ( userService0 )
assertNull ( mBBanLocalService0 )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadFlagPersistence0 )
assertNull ( mBBanPersistence0 )
assertNull ( mBMailingListLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBBan" , mBBanLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessageService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "oV ! J ) ( q ? & D~ - ~q" , mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( expandoValueService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( groupFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMessageLocalService0 )
assertNull ( mBCategoryFinder0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( expandoValuePersistence0 )
assertNull ( expandoValueLocalService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessagePersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( groupLocalService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( mBMessageFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBThreadPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBThreadLocalService0 )
assertNull ( mBThreadFlagLocalService0 )
assertNull ( assetTagLocalService0 )
assertNull ( mBBanLocalService0 )
assertNull ( groupPersistence0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMailingListPersistence0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagFinder0 )
assertNull ( groupService0 )
assertNull ( mBMailingListLocalService0 )
assertNull ( counterLocalService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagService0 )
assertNull ( mBCategoryService0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( userPersistence0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( subscriptionLocalService0 )
assertNull ( mBCategoryPersistence0 )
assertNull ( subscriptionPersistence0 )
assertNull ( mBThreadFinder0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBStatsUserPersistence0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBDiscussionPersistence0 )
assertNull ( string0 )
assertNull ( mBCategoryServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userLocalService0 )
assertNull ( mBThreadFlagPersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBStatsUserLocalService0 )
assertNull ( mBCategoryLocalService0 )
assertNull ( assetTagPersistence0 )
assertNull ( mBDiscussionLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadFlagLocalService0 )
assertNull ( mBCategoryFinder0 )
assertNull ( expandoValueLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBBanLocalService0 )
assertNull ( mBBanPersistence0 )
assertNull ( groupPersistence0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBDiscussionPersistence0 )
assertNull ( string0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterLocalService0 )
assertNull ( mBDiscussionLocalService0 )
assertNull ( mBStatsUserLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMessageService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBMessageFinder0 )
assertNull ( assetTagPersistence0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userPersistence0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( assetTagService0 )
assertNull ( groupService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMessageLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , string0 )
assertNull ( subscriptionLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( groupLocalService0 )
assertNull ( mBMessagePersistence0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryService0 )
assertNull ( groupFinder0 )
assertNull ( mBStatsUserPersistence0 )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( resourceLocalService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( userFinder0 )
assertNull ( assetTagLocalService0 )
assertNull ( mBThreadService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryPersistence0 )
assertNull ( mBMailingListPersistence0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBMailingListLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userService0 )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalService0 )
assertNull ( mBThreadLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBThreadFlagPersistence0 )
assertNull ( expandoValueService0 )
assertNull ( expandoValuePersistence0 )
assertNull ( mBThreadPersistence0 )
assertNull ( mBThreadFinder0 )
assertNull ( userLocalService0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( assetTagFinder0 )
assertNull ( mBBanService0 )
assertNull ( subscriptionPersistence0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . portlet . messageboards . model . MBCategory" , mBCategoryLocalServiceImpl0 . getModelClassName ( ) )
assertNotNull ( mBCategoryServiceSoap0 )
assertNotNull ( mBMessageServiceHttp0 )
assertNotNull ( mBThreadServiceHttp0 )
assertNotNull ( mBThreadServiceSoap0 )
assertNotNull ( mBMessageServiceSoap0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNotSame ( stringArray1 , stringArray0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategory0 )
assertNull ( mBCategory0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , long0 )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( mBCategoryLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNotNull ( mBThreadUtil0 )
assertNotNull ( mBMessagePermission0 )
assertNotNull ( mBPermission0 )
assertNotNull ( mBUtil0 )
assertNotNull ( string0 )
assertEquals ( "multipart / MM / d / yy h : mm a ; \r\n\tboundary = \" - - - - = _Part_174_688638456 . 1372778024701\"" , mimeMultipart0 . getContentType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( "ONP ) tIH3K ) L ONP ) tIH3K ) L" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "CMX7n ! e * 5 ; * " , mBMailMessage0 . getBody ( ) )
assertNotNull ( list0 )
assertEquals ( false , mailingListThreadLocal0 . isSourceMailingList ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "MBMessage . createDate DESC" , messageCreateDateComparator0 . toString ( ) )
assertEquals ( "MBMessage . createDate DESC" , string0 )
assertEquals ( "MBMessage . createDate ASC" , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "MBThread . lastPostDate DESC , MBThread . threadId DESC" , string0 )
assertEquals ( "MBThread . lastPostDate ASC , MBThread . threadId ASC" , string0 )
assertNotNull ( messageThreadComparator0 )
assertEquals ( - 2043 , mailingListRequest0 . getInServerPort ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , mailingListRequest0 . isInUseSSL ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 1583L , mailingListRequest0 . getCategoryId ( ) )
assertEquals ( false , mailingListRequest0 . isInUseSSL ( ) )
assertEquals ( 0L , long0 )
assertNull ( mailingListRequest0 . getInServerName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( ( - 444L ) , mailingListRequest0 . getGroupId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , mailingListRequest0 . getInServerPort ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , mailingListRequest0 . getCategoryId ( ) )
assertNull ( mailingListRequest0 . getInPassword ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( true , mailingListRequest0 . isAllowAnonymous ( ) )
assertNull ( mailingListRequest0 . getInUserName ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . size ( ) )
assertNotNull ( rSSUtil0 )
assertEquals ( 1200000L , long0 )
assertNull ( defaultThreadLocalBinder0 )
assertNotNull ( parallelRenderThreadLocalBinderUtil0 )
assertNull ( portlet0 )
assertNotNull ( callable0 )
assertEquals ( "f = 'u , > m & " , string0 )
assertEquals ( "" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "ACTION_PHASE" , actionURLLogic0 . getLifecycle ( ) )
assertEquals ( "ACTION_PHASE" , actionURLLogic0 . getLifecycle ( ) )
assertEquals ( "ACTION_PHASE" , string0 )
assertEquals ( " / > " , string0 )
assertEquals ( " < runtime - portlet" , string0 )
assertEquals ( " < / runtime - portlet > " , string0 )
assertEquals ( "RENDER_PHASE" , renderURLLogic0 . getLifecycle ( ) )
assertEquals ( "RENDER_PHASE" , string0 )
assertEquals ( "RENDER_PHASE" , renderURLLogic0 . getLifecycle ( ) )
assertEquals ( 1 , finiteStack0 . size ( ) )
assertEquals ( 0 , finiteStack0 . size ( ) )
assertEquals ( "visa" , string0 )
assertNotNull ( creditCard0 )
assertNull ( string0 )
assertEquals ( "4444414444414441" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( numberFormatUtil0 )
assertEquals ( "1 , 812" , string0 )
assertNotNull ( string0 )
assertEquals ( "X - LIFERAY - TIMEZONE - SENSITIVE : zWY%Aw LF~%\\\\8 + v . \r\n" , timeZoneSensitive1 . toString ( ) )
assertEquals ( false , timeZoneSensitive0 . isCalendarProperty ( ) )
assertEquals ( "X - LIFERAY - TIMEZONE - SENSITIVE : FALSE\r\n" , timeZoneSensitive0 . toString ( ) )
assertEquals ( "X - LIFERAY - TIMEZONE - SENSITIVE : TRUE\r\n" , timeZoneSensitive0 . toString ( ) )
assertNotNull ( propertyComparator0 )
assertNotNull ( propertyComparator0 )
assertEquals ( false , rSSThreadLocal0 . isExportRSS ( ) )
assertEquals ( true , boolean0 )
assertEquals ( " / 181 . 239 . 177 . 128" , string0 )
assertNotNull ( serializableUtil0 )
assertNotNull ( cookieUtil0 )
assertEquals ( " / ! 3GIf0TN^" , state0 . getId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "2" , simpleCounter0 . getString ( ) )
assertEquals ( ( - 47L ) , simpleCounter0 . get ( ) )
assertEquals ( 1 , integer0 . shortValue ( ) )
assertEquals ( " [ null ] " , finiteUniqueStack0 . toString ( ) )
assertEquals ( 255 , color0 . getAlpha ( ) )
assertNotNull ( colorUtil0 )
assertNotNull ( string0 )
assertNotNull ( color1 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertNotNull ( string0 )
assertNotNull ( autocomplete0 )
assertNotNull ( string0 )
assertEquals ( "zmZcih2T" , string0 )
assertEquals ( "1609" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "kaBJ51qo" , pwdGenerator0 . getPassword ( ) )
assertEquals ( "Ie1pewLwLcewwpecc1LIcwIwcqIpewIq1Ipepwcqqqw1cq11IIw11wqewwcpqwqqeIceecc1qIpweewpLcqpcwppeweLLpec1pIcqpcqcpepwqewpIq1LLqIc1wqcweepI1wqqcccwpIqc11cwwpLccqIwI1eq1eeqqpweeIpcecLcqIq1IwweeI1ecw1ccL1cpppw1wqewIpI1wpqccpwq1peIwwe1pLwpqLL1qqLw1eqLLeLcIweIqcwwLcIp1e1IeweppwIq1IpqLqIweeIcw1cLeeLqcqcIq1ccwcIwqqpcp1pqpc1ewLqLIqcpIcL1ewqcLqe11qLcL11LILeqwcI1cp1qIeLcILcIqeqwpwcpLqwpppweepIIpw1wqIIIqwcqecIp11cppepqcweI1qLwLecLeILeLwLIIwqcIIeecL1LqwqL1pL1LwLppIc1eIeqp1pqqeLe111II1wq1pqe1qeIwqIqLcqwepIpIqLwwweIcec1weL1wp1Ip1peILL11LIIwpeLLepcILqeepqqIw1Lq1w1ccIcwc1IeeqwwpwLI1cLeq1IqIqqLpweewcLqqe1ecccwIeL1w1ILqcqLe1ppL1cILeLceLpe1c11IILI1wweILIwqccwL11IcwqwqL1LIL1qcIcLwpqqp11wLIpw1eqqIcLw1p1Iqe1c1wLewpwIeepcLepw1q11qqIwpqcepeLqp1p1eqwLeIpcLpccep1LIcqcecL11qLcpqpLwLqIewcp1ppcLppqeecILc1LcILIppqwLqLepIewp1eewcIIqIqeIII11wIqLwcwqccIpLp1e1LLcwqq111qwcqIw1qI1cpIpwIqLIpI1ILcqww1q1ppcIqqcpIqpe1LqILcpewwecqqLIL1LL1wILweq1cLcLIe1cIcwwpceLwcwewcLeeppIpLpepq1qwpweILceL1ILLw" , string0 )
assertNotNull ( thirdPartyThreadLocalRegistry0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( jS0 )
assertEquals ( " = K7Ii1oA" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "n ! o ( a^cT2eh { > " , string0 )
assertNotNull ( string0 )
assertNotNull ( normalizer0 )
assertNotNull ( string0 )
assertEquals ( "sr_SP_CYRL" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( stateUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNotNull ( distance0 )
assertEquals ( ( - 2424 . 7884492470052 ) , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0L , long0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( false , boolean0 )
assertNotNull ( pKParser0 )
assertEquals ( 0 , int0 )
assertEquals ( "20_6 . 1473815212749265" , string0 )
assertNotNull ( rSSUtil0 )
assertEquals ( "atom" , string0 )
assertEquals ( "atom" , string0 )
assertEquals ( "atom" , string0 )
assertEquals ( "rss" , string0 )
assertEquals ( 2 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertNull ( inetAddressTask0 . getTaskName ( ) )
assertFalse ( contextReplace1 . equals ( contextReplace0 ) )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( contextReplace0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( mailEngine0 )
assertEquals ( " < 1178983343 . 100071372785537564 . JavaMail . ac1gf@localhost > " , liferayMimeMessage0 . getMessageID ( ) )
assertNotNull ( internetAddressUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( internetAddressArray0 )
assertSame ( internetAddressArray1 , internetAddressArray0 )
assertNotSame ( internetAddressArray0 , internetAddressArray1 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( javaMailUtil0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( 0 , map0 . size ( ) )
assertNotNull ( log4JUtil0 )
assertEquals ( "\" variable . : 270" , uRL0 . getAuthority ( ) )
assertNotNull ( aspectJUtil0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( list0 )
assertEquals ( ( - 547 ) , int0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( diffUtil0 )
assertNotNull ( diffResult0 )
assertNotNull ( diffResult0 )
assertEquals ( - 624 , diffResult0 . getLineNumber ( ) )
assertEquals ( 1681 , diffResult0 . getLineNumber ( ) )
assertNotNull ( diffResult0 )
assertNotNull ( diffResult0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , queryPos0 . getPos ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( "org . dom4j . datatype . DatatypeElement259628450 [ Element : < attributes : [ ] data : null / > ] " , datatypeElement0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789' ( ) , - . / : ? ! \"#$% & * ; < = > @ [ ] ^_` { | } \t\r\n" , string0 )
assertNotNull ( xMLFormatter0 )
assertEquals ( "H\"" , string0 )
assertNull ( string0 )
assertEquals ( "H\"" , string0 )
assertEquals ( " < > \n < v / > \n < / > " , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( true , elementImpl0 . hasContent ( ) )
assertEquals ( true , elementImpl0 . hasContent ( ) )
assertEquals ( " - 1365 . 6436847801324" , elementImpl0 . getStringValue ( ) )
assertEquals ( true , userDataElement0 . hasContent ( ) )
assertNotNull ( elementImpl1 )
assertNotNull ( docUtil0 )
assertEquals ( 1 , userDataElement0 . nodeCount ( ) )
assertEquals ( false , userDataElement0 . isTextOnly ( ) )
assertEquals ( true , nonLazyElement0 . hasContent ( ) )
assertEquals ( true , userDataElement0 . hasContent ( ) )
assertEquals ( false , elementImpl0 . isTextOnly ( ) )
assertEquals ( "noClassForService00" , dOMDocument0 . getStringValue ( ) )
assertNotNull ( xMLTypeDetector0 )
assertNotNull ( strictXMLDescriptor0 )
assertNull ( xMLMergerTask0 . getTaskType ( ) )
assertNull ( xMLMergerTask0 . getTaskType ( ) )
assertNull ( xMLMergerTask0 . getDescription ( ) )
assertEquals ( false , elementNSImpl0 . getReadOnly ( ) )
assertNotNull ( xMLConverter0 )
assertEquals ( "" , qName1 . getPrefix ( ) )
assertNotNull ( xMLMergerRunner0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( elementIdentifierArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( webXML24Descriptor0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( elementIdentifierArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( elementIdentifierArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertTrue ( boolean0 . equals ( boolean1 ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean1 )
assertNotSame ( boolean0 , boolean1 )
assertEquals ( false , transactionStatusClp0 . isCompleted ( ) )
assertEquals ( true , defaultTransactionStatus0 . isLocalRollbackOnly ( ) )
assertEquals ( "waiapp" , string0 )
assertNull ( router0 )
assertNull ( string0 )
assertNull ( wAIFriendlyURLMapper0 . getPortletId ( ) )
assertEquals ( false , boolean0 )
assertNull ( wAIFriendlyURLMapper0 . getPortletId ( ) )
assertNull ( wAIFriendlyURLMapper0 . getPortletId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( alloyFriendlyURLMapper0 . getMapping ( ) )
assertEquals ( 0 , alloySearchResult0 . getSize ( ) )
assertEquals ( 0 , alloySearchResult0 . getSize ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , alloySearchResult0 . getSize ( ) )
assertNull ( hits0 )
assertNull ( portletURL0 )
assertEquals ( true , map0 . isEmpty ( ) )
assertNull ( renderRequestImpl0 . getPortletName ( ) )
assertNull ( renderResponseImpl0 . getResourceName ( ) )
assertNull ( string0 )
assertEquals ( false , renderResponseImpl0 . isCalledGetPortletOutputStream ( ) )
assertNotNull ( actionCommandCache0 )
assertEquals ( true , actionCommandCache0 . isEmpty ( ) )
assertNotNull ( actionCommandCache0 )
assertNotNull ( actionCommandCache0 )
assertNotNull ( actionCommandCache0 )
assertNull ( templateTaglibSupportProvider0 )
assertNull ( string0 )
assertNotNull ( jSFPortletUtil0 )
assertNull ( string0 )
assertNotNull ( facesMessageUtil0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( liferayRenderKitFactoryImpl0 )
assertNull ( object0 )
assertNull ( object1 )
assertNull ( set0 )
assertNull ( object0 )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( uRL0 )
assertNull ( object0 )
assertNull ( inputStream0 )
assertNull ( principal0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( map0 )
assertEquals ( false , boolean0 )
assertNull ( iterator0 )
assertNull ( liferayServletContextAdapter0 . getAuthType ( ) )
assertNull ( object0 )
assertNull ( string0 )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( map0 )
assertNull ( liferayServletContextAdapter0 . getRemoteUser ( ) )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( liferayServletContextAdapter0 . getRequestPathInfo ( ) )
assertNull ( string0 )
assertNull ( liferayServletContextAdapter0 . getAuthType ( ) )
assertNull ( iterator0 )
assertNull ( map0 )
assertNull ( object0 )
assertNull ( locale0 )
assertNull ( map0 )
assertNull ( string0 )
assertSame ( map1 , map0 )
assertEquals ( "IBM437" , stringWriter0 . toString ( ) )
assertEquals ( " | " , stringWriter0 . toString ( ) )
assertEquals ( " ; " , stringWriter0 . toString ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "responseFlownullresponseFlow" , pseudoPortletURL0 . toString ( ) )
assertEquals ( "responseFlow" , scriptPostProcess0 . getFinalizedPage ( ) )
assertEquals ( "responseFlownullresponseFlow" , pseudoPortletURL0 . toString ( ) )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( nullSession0 )
assertNotNull ( sessionParameters0 )
assertNotNull ( string0 )
assertEquals ( "0" , string0 )
assertNotNull ( cacheResponseUtil0 )
assertEquals ( " { , path = = [ ] } " , hashMap0 . toString ( ) )
assertFalse ( dynamicFilterConfig1 . equals ( dynamicFilterConfig0 ) )
assertNull ( servletContext0 )
assertNull ( string0 )
assertFalse ( dynamicFilterConfig1 . equals ( dynamicFilterConfig0 ) )
assertEquals ( "" , string0 )
assertEquals ( "xbyxA [ , bQ_pw" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "55" , string0 )
assertEquals ( " ( gWN ) NOO - d5a | xG < nQR5" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "Z * _ - K@Yu" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( warTask0 )
assertEquals ( false , file0 . isHidden ( ) )
assertNotNull ( mkdirTask0 )
assertNotNull ( expandTask0 )
assertNotNull ( manifestTask0 )
assertNotNull ( deleteTask0 )
assertNotNull ( antUtil0 )
assertNotNull ( wsdl2JavaTask0 )
assertNull ( buildEvent0 . getMessage ( ) )
assertNotNull ( upToDateTask0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( java2WsddTask0 )
assertNull ( manifestHelperTask0 . getDescription ( ) )
assertNotNull ( string0 )
assertNull ( manifestHelperTask0 . getDescription ( ) )
assertNull ( formatTask0 . getTaskName ( ) )
assertNull ( formatTask0 . getTaskName ( ) )
assertNull ( formatTask0 . getTaskName ( ) )
assertNotNull ( copyTask0 )
assertNotNull ( servletUtil0 )
assertNotNull ( simpleAuthenticator0 )
assertEquals ( "com . liferay . util . cal . DayAndPosition [ day = 0 , position = 0 ] " , dayAndPosition1 . toString ( ) )
assertNotNull ( dayAndPosition0 )
assertNotNull ( dayAndPosition1 )
assertEquals ( "com . liferay . util . cal . DayAndPosition [ day = 0 , position = 0 ] " , dayAndPosition0 . toString ( ) )
assertNotNull ( dayAndPosition0 )
assertEquals ( "com . liferay . util . cal . DayAndPosition [ day = 3 , position = - 1 ] " , dayAndPosition0 . toString ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( dayAndPosition0 )
assertEquals ( true , boolean0 )
assertEquals ( "com . liferay . util . cal . DayAndPosition [ day = 0 , position = 0 ] " , dayAndPosition0 . toString ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( dayAndPosition1 )
assertEquals ( 0 , dayAndPosition0 . getDayPosition ( ) )
assertEquals ( 603245000L , duration0 . getInterval ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "com . liferay . util . cal . Duration [ weeks = 0 , days = 0 , hours = 0 , minutes = 0 , seconds = 0 ] " , duration0 . toString ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotSame ( duration1 , duration0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , duration0 . getInterval ( ) )
assertEquals ( 0L , duration0 . getInterval ( ) )
assertEquals ( 3 , duration0 . getSeconds ( ) )
assertEquals ( 1833 , duration0 . getWeeks ( ) )
assertEquals ( "com . liferay . util . cal . Duration [ weeks = 0 , days = 0 , hours = 0 , minutes = 0 , seconds = 0 ] " , duration0 . toString ( ) )
assertEquals ( 1372784508922L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372784520226L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784540597 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 2 , SECOND = 20 , MILLISECOND = 597 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertNotNull ( recurrence0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784583585 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 3 , SECOND = 3 , MILLISECOND = 585 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784606941 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 3 , SECOND = 26 , MILLISECOND = 941 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784628651 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 3 , SECOND = 48 , MILLISECOND = 651 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784648295 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 4 , SECOND = 8 , MILLISECOND = 295 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( ( - 23475L ) , long0 )
assertNotNull ( recurrence0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784695877 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 4 , SECOND = 55 , MILLISECOND = 877 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784721163 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 5 , SECOND = 21 , MILLISECOND = 163 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784765234 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 6 , SECOND = 5 , MILLISECOND = 234 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertNotNull ( recurrence0 )
assertNotNull ( recurrence0 )
assertNotNull ( recurrence0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784865210 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 7 , SECOND = 45 , MILLISECOND = 210 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372784897274L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784917517 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 8 , SECOND = 37 , MILLISECOND = 517 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372784948913 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 9 , SECOND = 8 , MILLISECOND = 913 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372784968947L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372785000652 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 1 , HOUR = 6 , HOUR_OF_DAY = 18 , MINUTE = 10 , SECOND = 0 , MILLISECOND = 652 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertNull ( string0 )
assertEquals ( false , liferayLoggerAdapter0 . isDebugEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isInfoEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isInfoEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isWarnEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isErrorEnabled ( ) )
assertEquals ( false , liferayLoggerAdapter0 . isTraceEnabled ( ) )
assertEquals ( true , jdk14LogImpl0 . isWarnEnabled ( ) )
assertEquals ( "com . liferay . util . sl4fj . LiferayLoggerAdapter ( null ) " , liferayLoggerAdapter0 . toString ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isErrorEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isInfoEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isInfoEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isWarnEnabled ( ) )
assertEquals ( true , liferayLoggerAdapter0 . isWarnEnabled ( ) )
assertNotNull ( liferayLoggerAdapter0 )
assertNotNull ( portletBeanLocatorUtil0 )
assertNull ( beanLocator0 )
assertNotNull ( keywordsUtil0 )
assertEquals ( "" , string0 )
assertEquals ( "#2h4 ? [ ^% - n#kh . ~" , string0 )
assertNull ( string0 )
assertEquals ( "3 | @8 ] u6~" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( " * " , string0 )
assertNotNull ( tCKtoJUnitConverter0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( dBLoader0 )
assertNotNull ( tLDFormatter0 )
assertNotNull ( dBBuilder0 )
assertNotNull ( argumentsUtil0 )
assertNotNull ( map0 )
assertNotNull ( textReplacer0 )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( " { \u0000 : . * } " , comparableRoute0 . getPattern ( ) )
assertEquals ( "k < K - 84 < 8''x" , comparableRoute0 . getPattern ( ) )
assertEquals ( " { \u0000 : . * } " , comparableRoute0 . getPattern ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 1 , int0 )
assertFalse ( comparableRoute0 . equals ( comparableRoute1 ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertTrue ( comparableRoute1 . equals ( comparableRoute0 ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( wSDDMerger0 )
assertEquals ( " { } " , string0 )
assertNull ( string0 )
assertNotNull ( copyInterfaceBuilder0 )
assertNotNull ( thumbnailBuilder0 )
assertNotNull ( thumbnailBuilder0 )
assertNotNull ( thumbnailBuilder0 )
assertNotNull ( thumbnailBuilder0 )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( false , entityColumn1 . hasArrayableOperator ( ) )
assertEquals ( false , entityColumn0 . isOrderColumn ( ) )
assertEquals ( true , entityColumn0 . isFinderPath ( ) )
assertEquals ( "Byte" , entityColumn0 . getComparator ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( false , entityColumn0 . isFilterPrimary ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( "CVRaJ [ uYa < U } H } G5Uuid" , string0 )
assertEquals ( false , entityColumn0 . isOrderColumn ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( false , entityColumn0 . isPrimary ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( true , entityColumn0 . isFilterPrimary ( ) )
assertEquals ( false , entityColumn0 . isPrimary ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , entityColumn0 . isFilterPrimary ( ) )
assertEquals ( true , entityColumn0 . isOrderColumn ( ) )
assertEquals ( "Byte" , entityColumn0 . getArrayableOperator ( ) )
assertEquals ( false , entityColumn0 . isPrimary ( ) )
assertEquals ( false , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( "AND" , entityColumn0 . getIdType ( ) )
assertEquals ( true , entityColumn0 . isMappingManyToMany ( ) )
assertEquals ( false , entityColumn0 . isMappingOneToMany ( ) )
assertEquals ( true , entityColumn0 . isCaseSensitive ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( false , entityColumn0 . isOrderColumn ( ) )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertNotNull ( string0 )
assertEquals ( false , entityColumn0 . isCaseSensitive ( ) )
assertEquals ( false , entityColumn0 . hasArrayableOperator ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , entityColumn0 . isAccessor ( ) )
assertEquals ( true , entityColumn0 . isCaseSensitive ( ) )
assertEquals ( true , entityColumn0 . isFilterPrimary ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , entityColumn0 . isOrderByAscending ( ) )
assertEquals ( true , entityColumn0 . isCaseSensitive ( ) )
assertEquals ( "Float" , entityColumn0 . getMappingKey ( ) )
assertEquals ( "LnEfg" , entityColumn0 . getArrayableOperator ( ) )
assertEquals ( true , entityColumn0 . isOrderColumn ( ) )
assertEquals ( false , entityColumn0 . hasArrayableOperator ( ) )
assertEquals ( "long" , entityColumn0 . getIdType ( ) )
assertEquals ( false , entityColumn0 . isOrderColumn ( ) )
assertEquals ( true , entityColumn0 . isOrderColumn ( ) )
assertEquals ( false , entityColumn0 . isFilterPrimary ( ) )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNull ( entity0 )
assertNull ( entity0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNull ( string0 )
assertNotNull ( serviceBuilder0 )
assertNull ( string0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertNotNull ( serviceBuilder0 )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertNotNull ( string0 )
assertEquals ( false , entityFinder0 . isDBIndex ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , entityFinder0 . isDBIndex ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertEquals ( false , entityFinder0 . isDBIndex ( ) )
assertNotNull ( entityColumn1 )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertNotNull ( string0 )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , entityFinder0 . hasArrayableOperator ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , entityFinder0 . isDBIndex ( ) )
assertEquals ( false , entityFinder0 . isUnique ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( list0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( "" , entity1 . getShortName ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( false , entity0 . hasFinderClass ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertEquals ( "liferayDataSource" , entity0 . getDataSource ( ) )
assertEquals ( "liferayTransactionManager" , entity0 . getTXManager ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( "user ID" , entity0 . getHumanName ( ) )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "liferayDataSource" , string0 )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( "EBx > j * 2s" , entity0 . getNames ( ) )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( "liferayDataSource" , entity0 . getDataSource ( ) )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertNotNull ( string0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertEquals ( true , entity0 . isDefaultSessionFactory ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertEquals ( "\"U ) lu * | 5s" , string0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertNull ( string0 )
assertEquals ( false , entity0 . hasFinderClass ( ) )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( false , entity0 . hasFinderClass ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( "w | $2dd : 2 - r nx [ 1 * w b_" , entityColumn1 . getHumanName ( ) )
assertNotNull ( list0 )
assertEquals ( true , boolean0 )
assertNotNull ( list0 )
assertEquals ( true , entity0 . hasUuid ( ) )
assertEquals ( true , entity0 . hasUuid ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getPersistenceClass ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getPackagePath ( ) )
assertEquals ( "S$yHukUMoPm5S$yHukUMoPm5" , entity0 . getAlias ( ) )
assertEquals ( true , entity0 . hasLocalService ( ) )
assertEquals ( "w | $2dd : 2 - rNx [ 1 * W_PK" , string0 )
assertNotNull ( list0 )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getHumanName ( ) )
assertEquals ( true , entity0 . hasUuid ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getDataSource ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getPackagePath ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getTable ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( "k * HQo3" , entity0 . getFinderClass ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getAlias ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getShortName ( ) )
assertEquals ( "k * HQo3" , entity0 . getFinderClass ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( false , entity0 . hasFinderClass ( ) )
assertEquals ( " . WU3 < e" , entity0 . getDataSource ( ) )
assertEquals ( true , entity0 . hasRemoteService ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getShortName ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getDataSource ( ) )
assertNotNull ( list0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , entity0 . hasLocalService ( ) )
assertEquals ( "^ + _0gyC#_ & l~" , entity1 . getPersistenceClass ( ) )
assertEquals ( false , entity0 . hasUuidAccessor ( ) )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( "S$yHukUMoPm5S$yHukUMoPm5" , entity0 . getAlias ( ) )
assertEquals ( " . WU3 < e" , entity0 . getTXManager ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , entity0 . hasUuid ( ) )
assertEquals ( "W | $2dd : 2 - rNx [ 1 * W_" , entity0 . getTable ( ) )
assertEquals ( true , entity0 . hasUuid ( ) )
assertNotNull ( batchJspCompiler0 )
assertNotNull ( timestampUpdater0 )
assertEquals ( "is | = < RkL : _s$V ? K" , string0 )
assertEquals ( "00000000 - 0000 - 0000 - 0000 - 00000000" , sequentialUUID0 . generate ( ) )
assertNotNull ( string0 )
assertEquals ( "00000000 - 0000 - 0000 - 0000 - 00000064" , sequentialUUID0 . generate ( ) )
assertNotNull ( columnsComparator0 )
assertNotNull ( columnsComparator0 )
assertEquals ( "javax . enterprise . deploy . spi . status . ProgressEvent [ source = } q91 ] " , progressEvent0 . toString ( ) )
assertEquals ( "javax . enterprise . deploy . spi . status . ProgressEvent [ source = } q91 ] " , progressEvent0 . toString ( ) )
assertEquals ( "theme" , string0 )
assertNull ( map0 )
assertEquals ( "web" , string0 )
assertEquals ( false , file0 . exists ( ) )
assertNull ( deploymentManager0 )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( string0 )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertEquals ( " / " , file0 . getPath ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 108_liferay" , file0 . getCanonicalPath ( ) )
assertEquals ( "" , file0 . toString ( ) )
assertEquals ( false , file0 . exists ( ) )
assertEquals ( "N" , string0 )
assertEquals ( "antlr2 . jar" , string0 )
assertEquals ( "tpN < 0ql ] 2PWm8B" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertEquals ( false , file0 . isAbsolute ( ) )
assertNull ( baseDeployer0 . getPluginType ( ) )
assertNull ( map0 )
assertNull ( pluginPackage0 )
assertNull ( pluginPackage0 )
assertNotNull ( string0 )
assertEquals ( "anCtlr . jar" , file0 . getParent ( ) )
assertEquals ( "javax . enterprise . deploy . spi . status . ProgressEvent [ source = / ] " , progressEvent0 . toString ( ) )
assertEquals ( "javax . enterprise . deploy . spi . status . ProgressEvent [ source = / ] " , progressEvent0 . toString ( ) )
assertEquals ( "javax . enterprise . deploy . spi . status . ProgressEvent [ source = / ] " , progressEvent0 . toString ( ) )
assertNotNull ( javadocUtil0 )
assertNull ( javadocMethod0 )
assertEquals ( 1 , documentImpl0 . nodeCount ( ) )
assertEquals ( "8 { pX1pNaOwB" , javadocClass0 . getServletContextName ( ) )
assertNull ( string0 )
assertNotNull ( jSONRPCResponse0 )
assertNotNull ( jSONRPCResponse0 )
assertNull ( object0 )
assertNull ( jSONRPCRequest0 )
assertNull ( list0 )
assertNotNull ( stringArray0 )
assertNull ( string0 )
assertNull ( jSONRPCRequest0 . getMethod ( ) )
assertNull ( jSONRPCRequest0 . getMethod ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( jSONRPCRequest0 . getJsonrpc ( ) )
assertNull ( jSONRPCRequest0 )
assertNull ( string0 )
assertEquals ( "1961" , string0 )
assertNull ( jSONWebServiceActionMapping0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 , int0 )
assertNull ( jSONWebServiceActionMapping0 )
assertNotNull ( jSONWebServiceMappingResolver0 )
assertNull ( templateResource0 )
assertNull ( object0 )
assertNull ( object0 )
assertNotNull ( templateResourceThreadLocal0 )
assertNull ( journalTemplateResource0 . getTemplateId ( ) )
assertNull ( journalTemplateResource0 )
assertNotNull ( cacheTemplateResource0 )
assertEquals ( 0L , long0 )
assertEquals ( " + pa ; 8 - E , 'Wl_T [ " , string0 )
assertNotNull ( cacheTemplateResource0 )
assertNotNull ( cacheTemplateResource0 )
assertNull ( templateResource0 )
assertNull ( templateResource0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( uRL0 )
assertNull ( uRL0 )
assertNull ( uRL0 )
assertNull ( uRL0 )
assertNull ( templateResource0 )
assertNotNull ( string0 )
assertEquals ( " < portlet - preferences / > " , templatePortletPreferences0 . toString ( ) )
assertEquals ( " < portlet - preferences / > " , templatePortletPreferences0 . toString ( ) )
assertEquals ( "A" , string0 )
assertNotNull ( gAuthenticator0 )
assertNotNull ( gAuthenticator0 )
assertNotNull ( gAuthenticator0 )
assertNotNull ( gAuthenticator0 )
assertNull ( gAuthenticator0 . getDomain ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( googleApps0 )
assertNull ( gUser0 )
assertNotNull ( gUserManagerImpl0 )
assertNotNull ( gNicknameManagerImpl0 )
assertNotNull ( gEmailSettingsManagerImpl0 )
assertNotNull ( gGroupManagerImpl0 )
assertNotNull ( gHelperUtil0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertEquals ( 0 , int0 )
assertEquals ( "AnycastAddress [ ] " , anycastAddress1 . toString ( ) )
assertEquals ( "AnycastAddress [ ] " , string0 )
assertEquals ( "AnycastAddress [ ] " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , clusterInvokeThreadLocal0 . isEnabled ( ) )
assertNotNull ( clusterForwardReceiver0 )
assertNull ( futureClusterResponses0 )
assertEquals ( false , boolean0 )
assertNull ( jChannel0 )
assertEquals ( false , clusterExecutorImpl0 . isShortcutLocalMethod ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , printStream0 . checkError ( ) )
assertNull ( view0 )
assertEquals ( 0L , long0 )
assertNotNull ( updateReminderQueryAction0 )
assertNotNull ( logoutAction0 )
assertNotNull ( renderPortletAction0 )
assertNotNull ( updatePasswordAction0 )
assertNotNull ( sessionTreeJSClickAction0 )
assertNotNull ( loginAction0 )
assertEquals ( false , boolean0 )
assertNotNull ( sessionClickAction0 )
assertNotNull ( setupWizardUtil0 )
assertEquals ( 0L , phoneSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( false , phoneSoap0 . getPrimary ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( false , phoneSoap0 . isPrimary ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , phoneSoap0 . getUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 924 , phoneSoap0 . getTypeId ( ) )
assertEquals ( 0L , phoneSoap0 . getPrimaryKey ( ) )
assertNull ( phoneSoap0 . getUserName ( ) )
assertEquals ( false , phoneSoap0 . getPrimary ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , phoneSoap0 . isPrimary ( ) )
assertNull ( phoneSoap0 . getUserName ( ) )
assertEquals ( false , phoneSoap0 . isPrimary ( ) )
assertEquals ( false , phoneSoap0 . isPrimary ( ) )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertNotNull ( phoneSoapArray0 )
assertNull ( layoutBranch0 )
assertEquals ( "com . liferay . portal . model . LayoutBranch" , string0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( "com . liferay . portal . model . PasswordPolicy" , string0 )
assertNull ( passwordPolicy0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( "" , resourceBlockSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , resourceBlockSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1L , resourceBlockSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 1L , resourceBlockSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , resourceBlockSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( resourceBlockSoap0 . getName ( ) )
assertNotNull ( resourceBlockSoapArray0 )
assertNull ( layoutSoap0 . getType ( ) )
assertNull ( layoutSoap0 )
assertNull ( string0 )
assertEquals ( "" , layoutReference0 . getPortletId ( ) )
assertEquals ( "eUA" , layoutReference0 . getPortletId ( ) )
assertEquals ( 0L , membershipRequestSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertNull ( membershipRequestSoap0 . getComments ( ) )
assertNull ( date0 )
assertNull ( membershipRequestSoap0 . getComments ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 942 , membershipRequestSoap0 . getStatusId ( ) )
assertEquals ( 0L , membershipRequestSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , membershipRequestSoap0 . getUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 851L ) , membershipRequestSoap0 . getGroupId ( ) )
assertEquals ( ( - 851L ) , membershipRequestSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , membershipRequestSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( membershipRequestSoap0 . getComments ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( membershipRequestSoapArray0 )
assertEquals ( "com . liferay . portal . model . Role" , string0 )
assertNull ( role0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portal . model . Role" , roleWrapper0 . getModelClassName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , passwordPolicyRelSoap0 . getPasswordPolicyRelId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , passwordPolicyRelSoap0 . getClassPK ( ) )
assertEquals ( 0L , passwordPolicyRelSoap0 . getPasswordPolicyRelId ( ) )
assertEquals ( 0L , passwordPolicyRelSoap0 . getClassPK ( ) )
assertNotNull ( passwordPolicyRelSoapArray0 )
assertEquals ( 0 , organizationSoap0 . getStatusId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , organizationSoap0 . getParentOrganizationId ( ) )
assertNull ( organizationSoap0 . getName ( ) )
assertEquals ( false , organizationSoap0 . isRecursable ( ) )
assertNull ( organizationSoap0 . getTreePath ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 1 , organizationSoap0 . getStatusId ( ) )
assertEquals ( 0L , organizationSoap0 . getParentOrganizationId ( ) )
assertEquals ( false , organizationSoap0 . getRecursable ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , organizationSoap0 . isRecursable ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , organizationSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , organizationSoap0 . getRecursable ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( organizationSoapArray0 )
assertEquals ( 0 , orgLaborSoap0 . getFriClose ( ) )
assertEquals ( ( - 1195L ) , orgLaborSoap0 . getOrgLaborId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getTypeId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , orgLaborSoap0 . getMonClose ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getWedOpen ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , orgLaborSoap0 . getWedClose ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getTueClose ( ) )
assertEquals ( 0 , orgLaborSoap0 . getSatClose ( ) )
assertEquals ( 0 , orgLaborSoap0 . getMonOpen ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , orgLaborSoap0 . getTueOpen ( ) )
assertEquals ( 0 , orgLaborSoap0 . getThuOpen ( ) )
assertEquals ( 0 , orgLaborSoap0 . getSunOpen ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getSatOpen ( ) )
assertEquals ( ( - 1195L ) , orgLaborSoap0 . getOrganizationId ( ) )
assertEquals ( 0 , orgLaborSoap0 . getSunClose ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getFriOpen ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , orgLaborSoap0 . getThuClose ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( orgLaborSoapArray0 )
assertEquals ( "com . liferay . portal . model . ResourcePermission" , string0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNull ( resourcePermission0 )
assertEquals ( "com . liferay . portal . model . Account" , string0 )
assertEquals ( false , class0 . isLocalClass ( ) )
assertNull ( account0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1299L ) , layoutRevisionSoap0 . getIconImageId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( true , layoutRevisionSoap0 . getIconImage ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getUserId ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , layoutRevisionSoap0 . getGroupId ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutSetBranchId ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( ( - 1L ) , layoutRevisionSoap0 . getPlid ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutRevisionSoap0 . isHead ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutRevisionSoap0 . getMajor ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , layoutRevisionSoap0 . getStatusByUserName ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutRevisionId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , layoutRevisionSoap0 . getPlid ( ) )
assertNull ( string0 )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutBranchId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( - 1299 , layoutRevisionSoap0 . getStatus ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , layoutRevisionSoap0 . getCompanyId ( ) )
assertEquals ( ( - 21L ) , layoutRevisionSoap0 . getParentLayoutRevisionId ( ) )
assertNull ( layoutRevisionSoap0 . getUserName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , layoutRevisionSoap0 . getCompanyId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutRevisionSoap0 . isMajor ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutBranchId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , layoutRevisionSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutRevisionSoap0 . getIconImage ( ) )
assertEquals ( false , layoutRevisionSoap0 . getHead ( ) )
assertEquals ( false , layoutRevisionSoap0 . isMajor ( ) )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( true , layoutRevisionSoap0 . isPrivateLayout ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutSetBranchId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , layoutRevisionSoap0 . getLayoutBranchId ( ) )
assertNull ( layoutRevisionSoap0 . getRobots ( ) )
assertEquals ( 0L , layoutRevisionSoap0 . getIconImageId ( ) )
assertNull ( layoutRevisionSoap0 . getUserName ( ) )
assertEquals ( false , layoutRevisionSoap0 . getIconImage ( ) )
assertNull ( string0 )
assertEquals ( false , layoutRevisionSoap0 . getPrivateLayout ( ) )
assertNotNull ( layoutRevisionSoapArray0 )
assertEquals ( 0 , imageSoap0 . getHeight ( ) )
assertEquals ( 0 , imageSoap0 . getWidth ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , imageSoap0 . getSize ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , imageSoap0 . getHeight ( ) )
assertNull ( imageSoap0 . getType ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , imageSoap0 . getHeight ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0 , imageSoap0 . getWidth ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertNotNull ( imageSoapArray0 )
assertEquals ( "com . liferay . portal . model . ListType" , string0 )
assertNull ( listType0 )
assertEquals ( true , class0 . isInterface ( ) )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertNull ( resourceTypePermission0 )
assertEquals ( "interface com . liferay . portal . model . ResourceTypePermission" , class0 . toString ( ) )
assertEquals ( "com . liferay . portal . model . ResourceTypePermission" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertNull ( workflowInstanceLink0 )
assertEquals ( "com . liferay . portal . model . WorkflowInstanceLink" , string0 )
assertEquals ( "WorkflowInstanceLink" , class0 . getSimpleName ( ) )
assertEquals ( "com . liferay . portal . model . WorkflowInstanceLink" , workflowInstanceLinkWrapper0 . getModelClassName ( ) )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portal . model . LayoutSetPrototype" , string0 )
assertNull ( layoutSetPrototype0 )
assertNotNull ( portletCategory0 )
assertEquals ( true , treeSet0 . isEmpty ( ) )
assertEquals ( false , portletCategory0 . isHidden ( ) )
assertNull ( portletCategory1 )
assertEquals ( "" , string0 )
assertNotNull ( portletCategory0 )
assertEquals ( false , portletCategory1 . isHidden ( ) )
assertNotNull ( portletCategory0 )
assertNotNull ( portletCategory0 )
assertNotNull ( portletCategory0 )
assertEquals ( false , treeSet0 . isEmpty ( ) )
assertNotNull ( portletCategory0 )
assertNotNull ( portletCategory0 )
assertNotNull ( portletCategory0 )
assertEquals ( 1374L , clusterGroupSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( clusterGroupSoap0 . getClusterNodeIds ( ) )
assertEquals ( false , clusterGroupSoap0 . isWholeCluster ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , clusterGroupSoap0 . getWholeCluster ( ) )
assertNotNull ( clusterGroupSoapArray0 )
assertEquals ( false , pluginSettingSoap0 . getActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , pluginSettingSoap0 . getActive ( ) )
assertEquals ( 0L , pluginSettingSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , pluginSettingSoap0 . getPrimaryKey ( ) )
assertEquals ( 3L , pluginSettingSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , pluginSettingSoap0 . getPluginSettingId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNotNull ( pluginSettingSoapArray0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( "com . liferay . portal . model . LayoutPrototype" , string0 )
assertNull ( layoutPrototype0 )
assertEquals ( 8 , map0 . size ( ) )
assertEquals ( "com . liferay . portal . model . UserGroup" , string0 )
assertEquals ( "com . liferay . portal . model . UserGroup" , class0 . getName ( ) )
assertNull ( userGroup0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertEquals ( "com . liferay . portal . model . PluginSetting" , string0 )
assertNull ( pluginSetting0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , listTypeSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , listTypeSoap0 . getListTypeId ( ) )
assertEquals ( 0 , int0 )
assertNull ( listTypeSoap0 . getName ( ) )
assertNotNull ( listTypeSoapArray0 )
assertNull ( layoutSetBranch0 )
assertNull ( layoutSet0 )
assertEquals ( "com . liferay . portal . model . UserTrackerPath" , string0 )
assertNull ( userTrackerPath0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portal . model . UserTrackerPath" , userTrackerPathWrapper0 . getModelClassName ( ) )
assertEquals ( ( - 1030L ) , contactSoap0 . getParentContactId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , contactSoap0 . getClassPK ( ) )
assertEquals ( ( - 1030L ) , contactSoap0 . getAccountId ( ) )
assertNull ( contactSoap0 . getAimSn ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , contactSoap0 . getPrefixId ( ) )
assertEquals ( ( - 30L ) , contactSoap0 . getUserId ( ) )
assertNull ( contactSoap0 . getUserName ( ) )
assertEquals ( 0 , contactSoap0 . getPrefixId ( ) )
assertEquals ( 0L , contactSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( contactSoap0 . getMySpaceSn ( ) )
assertNull ( string0 )
assertNull ( contactSoap0 . getAimSn ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , contactSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , contactSoap0 . getClassNameId ( ) )
assertNull ( contactSoap0 . getAimSn ( ) )
assertNull ( contactSoap0 . getEmployeeStatusId ( ) )
assertEquals ( 0 , int0 )
assertNull ( contactSoap0 . getMySpaceSn ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , contactSoap0 . getUserId ( ) )
assertEquals ( 0L , contactSoap0 . getClassPK ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , contactSoap0 . getContactId ( ) )
assertNull ( string0 )
assertNull ( contactSoap0 . getYmSn ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , contactSoap0 . getMale ( ) )
assertNull ( string0 )
assertNull ( contactSoap0 . getEmployeeNumber ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( contactSoap0 . getSmsSn ( ) )
assertEquals ( 0 , contactSoap0 . getSuffixId ( ) )
assertEquals ( 0L , contactSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( contactSoap0 . getIcqSn ( ) )
assertNull ( string0 )
assertNull ( contactSoap0 . getIcqSn ( ) )
assertNull ( date0 )
assertEquals ( 0L , contactSoap0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( contactSoap0 . getMySpaceSn ( ) )
assertNull ( contactSoap0 . getFirstName ( ) )
assertEquals ( 0L , contactSoap0 . getParentContactId ( ) )
assertNull ( string0 )
assertEquals ( 0L , contactSoap0 . getUserId ( ) )
assertNull ( contactSoap0 . getTwitterSn ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNotNull ( contactSoapArray0 )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portal . model . Organization" , string0 )
assertNull ( organization0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( "tc / DXxo0uT9 ; g@X" , layoutPrototypeSoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( layoutPrototypeSoap0 . getDescription ( ) )
assertEquals ( ( - 20L ) , layoutPrototypeSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertNull ( layoutPrototypeSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( layoutPrototypeSoap0 . getUuid ( ) )
assertNull ( layoutPrototypeSoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( false , layoutPrototypeSoap0 . getActive ( ) )
assertNotNull ( layoutPrototypeSoapArray0 )
assertEquals ( "com . liferay . portal . model . Contact" , string0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertNull ( contact0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "E" , resourceActionSoap0 . getName ( ) )
assertEquals ( 0L , resourceActionSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , resourceActionSoap0 . getBitwiseValue ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "E" , resourceActionSoap0 . getActionId ( ) )
assertNotNull ( resourceActionSoapArray0 )
assertEquals ( "com . liferay . portal . model . Phone" , string0 )
assertEquals ( "Phone" , class0 . getSimpleName ( ) )
assertNull ( phone0 )
assertEquals ( false , map0 . isEmpty ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , userTrackerPathSoap0 . getUserTrackerPathId ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , userTrackerPathSoap0 . getUserTrackerPathId ( ) )
assertEquals ( ( - 1L ) , userTrackerPathSoap0 . getUserTrackerId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , userTrackerPathSoap0 . getUserTrackerPathId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( userTrackerPathSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , resourceBlockPermissionSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , resourceBlockPermissionSoap0 . getRoleId ( ) )
assertEquals ( 0L , resourceBlockPermissionSoap0 . getResourceBlockId ( ) )
assertEquals ( 0L , resourceBlockPermissionSoap0 . getActionIds ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( resourceBlockPermissionSoapArray0 )
assertNotNull ( layoutTypeArticleConfigurationUpdateAction0 )
assertEquals ( false , websiteSoap0 . isPrimary ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 2 , websiteSoap0 . getTypeId ( ) )
assertEquals ( 0L , websiteSoap0 . getWebsiteId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 2L , websiteSoap0 . getWebsiteId ( ) )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertEquals ( 11L , websiteSoap0 . getUserId ( ) )
assertEquals ( 0L , websiteSoap0 . getPrimaryKey ( ) )
assertEquals ( false , websiteSoap0 . getPrimary ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , websiteSoap0 . getCompanyId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , websiteSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , websiteSoap0 . getWebsiteId ( ) )
assertEquals ( 23L , websiteSoap0 . getCompanyId ( ) )
assertNotNull ( websiteSoapArray0 )
assertEquals ( "com . liferay . portal . model . BrowserTracker" , string0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertNull ( browserTracker0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( layoutSetPrototypeSoap0 . getDescription ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSetPrototypeSoap0 . isActive ( ) )
assertNull ( string0 )
assertNull ( layoutSetPrototypeSoap0 . getDescription ( ) )
assertNull ( layoutSetPrototypeSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertNull ( layoutSetPrototypeSoap0 . getSettings ( ) )
assertEquals ( false , layoutSetPrototypeSoap0 . getActive ( ) )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , layoutSetPrototypeSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , layoutSetPrototypeSoap0 . getPrimaryKey ( ) )
assertEquals ( false , layoutSetPrototypeSoap0 . getActive ( ) )
assertNull ( date0 )
assertNotNull ( layoutSetPrototypeSoapArray0 )
assertEquals ( "com . liferay . portal . model . PasswordTracker" , string0 )
assertNull ( passwordTracker0 )
assertEquals ( "PasswordTracker" , class0 . getSimpleName ( ) )
assertEquals ( "com . liferay . portal . model . PasswordTracker" , passwordTrackerWrapper0 . getModelClassName ( ) )
assertNull ( portletPreferencesSoap0 . getPreferences ( ) )
assertEquals ( 751L , portletPreferencesSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 751L , portletPreferencesSoap0 . getOwnerId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 751L , portletPreferencesSoap0 . getPlid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , portletPreferencesSoap0 . getOwnerType ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , portletPreferencesSoap0 . getOwnerType ( ) )
assertNotNull ( portletPreferencesSoapArray0 )
assertEquals ( "com . liferay . portal . model . ClusterGroup" , string0 )
assertNull ( clusterGroup0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( "" , portletInfo0 . getShortTitle ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "OAE | VkwU [ " , portletInfo0 . getTitle ( ) )
assertEquals ( 0L , userIdMapperSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , userIdMapperSoap0 . getUserIdMapperId ( ) )
assertNull ( userIdMapperSoap0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0L , userIdMapperSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( " ! 6DA" , userIdMapperSoap0 . getExternalUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( userIdMapperSoapArray0 )
assertEquals ( 0L , userGroupSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , userGroupSoap0 . isAddedByLDAPImport ( ) )
assertEquals ( 0L , userGroupSoap0 . getParentUserGroupId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 15L , userGroupSoap0 . getParentUserGroupId ( ) )
assertNull ( userGroupSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 15L , userGroupSoap0 . getCompanyId ( ) )
assertNotNull ( userGroupSoapArray0 )
assertEquals ( false , class0 . isAnnotation ( ) )
assertEquals ( "com . liferay . portal . model . Repository" , string0 )
assertNull ( repository0 )
assertEquals ( "com . liferay . portal . model . Repository" , repositoryWrapper0 . getModelClassName ( ) )
assertEquals ( 0L , virtualHostSoap0 . getVirtualHostId ( ) )
assertEquals ( 0L , virtualHostSoap0 . getVirtualHostId ( ) )
assertNull ( virtualHostSoap0 . getHostname ( ) )
assertEquals ( 0L , long0 )
assertNull ( virtualHostSoap0 . getHostname ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( virtualHostSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( classNameSoap0 . getValue ( ) )
assertEquals ( 0L , classNameSoap0 . getClassNameId ( ) )
assertNotNull ( classNameSoapArray0 )
assertEquals ( "com . liferay . portal . model . User" , string0 )
assertNull ( user0 )
assertEquals ( false , class0 . isArray ( ) )
assertEquals ( true , class0 . isInterface ( ) )
assertEquals ( "com . liferay . portal . model . WorkflowDefinitionLink" , string0 )
assertNull ( workflowDefinitionLink0 )
assertNull ( lockSoap0 . getKey ( ) )
assertEquals ( false , lockSoap0 . getInheritable ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0L , lockSoap0 . getLockId ( ) )
assertEquals ( 0L , long0 )
assertNull ( lockSoap0 . getUuid ( ) )
assertEquals ( true , lockSoap0 . isInheritable ( ) )
assertNull ( lockSoap0 . getUserName ( ) )
assertNull ( date0 )
assertEquals ( 18L , lockSoap0 . getCompanyId ( ) )
assertEquals ( false , lockSoap0 . isInheritable ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( "R" , lockSoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( lockSoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , lockSoap0 . getCompanyId ( ) )
assertNotNull ( lockSoapArray0 )
assertNull ( orgLabor0 )
assertEquals ( "interface com . liferay . portal . model . OrgLabor" , class0 . toString ( ) )
assertEquals ( "com . liferay . portal . model . OrgLabor" , string0 )
assertEquals ( "com . liferay . portal . model . UserTracker" , class0 . getCanonicalName ( ) )
assertEquals ( "com . liferay . portal . model . UserTracker" , string0 )
assertNull ( userTracker0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 102L , portalPreferencesSoap0 . getPortalPreferencesId ( ) )
assertEquals ( 0L , portalPreferencesSoap0 . getOwnerId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 102 , portalPreferencesSoap0 . getOwnerType ( ) )
assertEquals ( 0L , portalPreferencesSoap0 . getPortalPreferencesId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( portalPreferencesSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , roleSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( roleSoap0 . getSubtype ( ) )
assertEquals ( 0L , roleSoap0 . getClassPK ( ) )
assertEquals ( 0L , roleSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , roleSoap0 . getClassPK ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , roleSoap0 . getType ( ) )
assertEquals ( ( - 1L ) , roleSoap0 . getClassPK ( ) )
assertNull ( string0 )
assertEquals ( 0L , roleSoap0 . getClassPK ( ) )
assertEquals ( 0 , int0 )
assertNull ( roleSoap0 . getDescription ( ) )
assertNull ( string0 )
assertNotNull ( roleSoapArray0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertNull ( passwordPolicyRel0 )
assertEquals ( "com . liferay . portal . model . PasswordPolicyRel" , string0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( 869 , passwordPolicySoap0 . getMinNumbers ( ) )
assertEquals ( - 573 , passwordPolicySoap0 . getMinLowerCase ( ) )
assertEquals ( 869 , passwordPolicySoap0 . getMinLength ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , passwordPolicySoap0 . getMinSymbols ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , passwordPolicySoap0 . getPasswordPolicyId ( ) )
assertEquals ( false , passwordPolicySoap0 . getHistory ( ) )
assertEquals ( - 573 , passwordPolicySoap0 . getMinUpperCase ( ) )
assertEquals ( 13L , passwordPolicySoap0 . getMinAge ( ) )
assertEquals ( false , passwordPolicySoap0 . getExpireable ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , passwordPolicySoap0 . getResetFailureCount ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , passwordPolicySoap0 . isCheckSyntax ( ) )
assertEquals ( 305L , passwordPolicySoap0 . getLockoutDuration ( ) )
assertEquals ( 136 , passwordPolicySoap0 . getGraceLimit ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 1 , passwordPolicySoap0 . getMaxFailure ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( false , passwordPolicySoap0 . isCheckSyntax ( ) )
assertEquals ( ( - 1L ) , passwordPolicySoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , passwordPolicySoap0 . isDefaultPolicy ( ) )
assertNull ( date0 )
assertEquals ( - 573 , passwordPolicySoap0 . getMinAlphanumeric ( ) )
assertEquals ( 869L , passwordPolicySoap0 . getWarningTime ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( false , passwordPolicySoap0 . getHistory ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , passwordPolicySoap0 . getHistoryCount ( ) )
assertEquals ( false , passwordPolicySoap0 . isChangeable ( ) )
assertEquals ( true , passwordPolicySoap0 . getAllowDictionaryWords ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 573L ) , passwordPolicySoap0 . getResetTicketMaxAge ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 869 , passwordPolicySoap0 . getHistoryCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , passwordPolicySoap0 . getRequireUnlock ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , passwordPolicySoap0 . getChangeRequired ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , passwordPolicySoap0 . isLockout ( ) )
assertEquals ( 0L , passwordPolicySoap0 . getPrimaryKey ( ) )
assertEquals ( false , passwordPolicySoap0 . isDefaultPolicy ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , passwordPolicySoap0 . isLockout ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( false , passwordPolicySoap0 . getAllowDictionaryWords ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertNotNull ( passwordPolicySoapArray0 )
assertNull ( layout0 )
assertEquals ( "com . liferay . portal . model . Layout" , string0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNotNull ( contactConstants0 )
assertEquals ( "" , string0 )
assertEquals ( "JrG | : #nbg JrG | : #nbg JrG | : #nbg" , string0 )
assertEquals ( ( - 1410941214 ) , int0 )
assertEquals ( "" , permissionDisplay0 . getModelName ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , permissionDisplay0 . getPortletLabel ( ) )
assertNull ( permissionImpl1 . getActionId ( ) )
assertEquals ( 34 , int0 )
assertEquals ( "lN ; ? ? 7\" ? D\"pR@kXf@" , permissionDisplay1 . getPortletName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , permissionDisplay1 . getPortletName ( ) )
assertEquals ( "bn` [ _2L1 ( pA 4g# + " , permissionDisplay1 . getActionLabel ( ) )
assertNull ( string0 )
assertNull ( passwordTrackerSoap0 . getPassword ( ) )
assertEquals ( 0L , passwordTrackerSoap0 . getUserId ( ) )
assertEquals ( 0L , passwordTrackerSoap0 . getPasswordTrackerId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , passwordTrackerSoap0 . getUserId ( ) )
assertNotNull ( passwordTrackerSoapArray0 )
assertEquals ( "com . liferay . portal . model . ResourceBlock" , string0 )
assertEquals ( "ResourceBlock" , class0 . getSimpleName ( ) )
assertNull ( resourceBlock0 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( layoutTypeArticleConfigurationDeleteAction0 )
assertEquals ( "s8 - aSgmF : E5c [ lPP | _" , repositorySoap0 . getUserName ( ) )
assertEquals ( 0L , repositorySoap0 . getClassNameId ( ) )
assertEquals ( ( - 7L ) , repositorySoap0 . getUserId ( ) )
assertEquals ( 0L , repositorySoap0 . getClassNameId ( ) )
assertEquals ( ( - 7L ) , repositorySoap0 . getRepositoryId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 1357L ) , repositorySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , repositorySoap0 . getClassNameId ( ) )
assertEquals ( 0L , repositorySoap0 . getRepositoryId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , repositorySoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( repositorySoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertNull ( repositorySoap0 . getUuid ( ) )
assertEquals ( 0L , repositorySoap0 . getDlFolderId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , repositorySoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , repositorySoap0 . getClassNameId ( ) )
assertNotNull ( repositorySoapArray0 )
assertNull ( resourcePermissionSoap0 . getPrimKey ( ) )
assertNull ( resourcePermissionSoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( 0L , resourcePermissionSoap0 . getResourcePermissionId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , resourcePermissionSoap0 . getResourcePermissionId ( ) )
assertNull ( resourcePermissionSoap0 . getName ( ) )
assertEquals ( 0 , resourcePermissionSoap0 . getScope ( ) )
assertEquals ( ( - 1752L ) , resourcePermissionSoap0 . getRoleId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( - 1916 , resourcePermissionSoap0 . getScope ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( resourcePermissionSoapArray0 )
assertEquals ( "com . liferay . portal . model . LayoutRevision" , string0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNull ( layoutRevision0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( layoutSoap0 . getWapColorSchemeId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 1257L ) , layoutSoap0 . getGroupId ( ) )
assertNull ( layoutSoap0 . getColorSchemeId ( ) )
assertNull ( layoutSoap0 . getThemeId ( ) )
assertEquals ( true , layoutSoap0 . getLayoutPrototypeLinkEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSoap0 . isIconImage ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( layoutSoap0 . getColorSchemeId ( ) )
assertNull ( layoutSoap0 . getName ( ) )
assertEquals ( false , layoutSoap0 . getPrivateLayout ( ) )
assertNull ( layoutSoap0 . getSourcePrototypeLayoutUuid ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , layoutSoap0 . getPriority ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertEquals ( false , layoutSoap0 . isIconImage ( ) )
assertNull ( layoutSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( layoutSoap0 . getColorSchemeId ( ) )
assertNull ( string0 )
assertEquals ( 1427 , layoutSoap0 . getPriority ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSoap0 . isIconImage ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 99L ) , layoutSoap0 . getParentLayoutId ( ) )
assertNull ( layoutSoap0 . getLayoutPrototypeUuid ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSoap0 . isIconImage ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutSoap0 . isHidden ( ) )
assertNull ( string0 )
assertEquals ( 0L , layoutSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( layoutSoap0 . getKeywords ( ) )
assertNull ( layoutSoap0 . getFriendlyURL ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "PKCOLUMN_NAME" , layoutSoap0 . getLayoutPrototypeUuid ( ) )
assertEquals ( true , layoutSoap0 . getPrivateLayout ( ) )
assertEquals ( false , layoutSoap0 . isIconImage ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSoap0 . getHidden ( ) )
assertEquals ( 0 , layoutSoap0 . getPriority ( ) )
assertNull ( layoutSoap0 . getName ( ) )
assertNotNull ( layoutSoapArray0 )
assertEquals ( ( - 84L ) , long0 )
assertEquals ( 0 , sortedMap0 . size ( ) )
assertNull ( portalPreferences0 )
assertEquals ( "interface com . liferay . portal . model . PortalPreferences" , class0 . toString ( ) )
assertEquals ( "com . liferay . portal . model . PortalPreferences" , string0 )
assertEquals ( 0L , userGroupRoleSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( userGroupRoleSoapArray0 )
assertEquals ( "com . liferay . portal . model . UserGroupRole" , string0 )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( userGroupRole0 )
assertEquals ( "com . liferay . portal . model . UserGroupRole" , userGroupRoleWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portal . model . Website" , string0 )
assertEquals ( false , class0 . isArray ( ) )
assertNull ( website0 )
assertEquals ( "com . liferay . portal . model . MembershipRequest" , class0 . getName ( ) )
assertNull ( membershipRequest0 )
assertEquals ( "com . liferay . portal . model . MembershipRequest" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNull ( string0 )
assertNull ( portletItemSoap0 . getName ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( portletItemSoap0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1285L ) , portletItemSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , portletItemSoap0 . getPortletItemId ( ) )
assertNull ( string0 )
assertNull ( portletItemSoap0 . getName ( ) )
assertEquals ( 0L , portletItemSoap0 . getGroupId ( ) )
assertEquals ( ( - 1285L ) , portletItemSoap0 . getCompanyId ( ) )
assertEquals ( ( - 1285L ) , portletItemSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , portletItemSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , portletItemSoap0 . getUserId ( ) )
assertNotNull ( portletItemSoapArray0 )
assertEquals ( 0L , companySoap0 . getAccountId ( ) )
assertNull ( companySoap0 . getKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( ( - 18L ) , companySoap0 . getAccountId ( ) )
assertEquals ( false , companySoap0 . isActive ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 350L , companySoap0 . getLogoId ( ) )
assertEquals ( 0L , long0 )
assertNull ( companySoap0 . getHomeURL ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , companySoap0 . isActive ( ) )
assertEquals ( ( - 8L ) , companySoap0 . getCompanyId ( ) )
assertEquals ( false , companySoap0 . isSystem ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 350 , companySoap0 . getMaxUsers ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( companySoapArray0 )
assertNull ( lock0 )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( "com . liferay . portal . model . Lock" , string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertEquals ( "com . liferay . portal . model . LayoutSet" , string0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertNull ( layoutSet0 )
assertEquals ( "com . liferay . portal . model . LayoutSet" , layoutSetWrapper0 . getModelClassName ( ) )
assertEquals ( false , userNotificationEventSoap0 . isArchived ( ) )
assertEquals ( 0L , userNotificationEventSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 18L , userNotificationEventSoap0 . getUserNotificationEventId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , userNotificationEventSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 18L , userNotificationEventSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , userNotificationEventSoap0 . getUserId ( ) )
assertEquals ( 8L , userNotificationEventSoap0 . getUserId ( ) )
assertEquals ( 8L , userNotificationEventSoap0 . getDeliverBy ( ) )
assertEquals ( "" , userNotificationEventSoap0 . getType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNotNull ( userNotificationEventSoapArray0 )
assertEquals ( 0L , portletPreferencesIds0 . getPlid ( ) )
assertEquals ( 0 , int0 )
assertEquals ( " = RKaS#DHIijt@ozO3 - " , portletPreferencesIds0 . getPortletId ( ) )
assertEquals ( 0L , portletPreferencesIds0 . getPlid ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , portletPreferencesIds0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 969L ) , portletPreferencesIds0 . getPlid ( ) )
assertEquals ( 0 , portletPreferencesIds0 . getOwnerType ( ) )
assertEquals ( 0L , long0 )
assertNull ( className0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . portal . model . ClassName" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , resourceTypePermissionSoap0 . getCompanyId ( ) )
assertEquals ( ( - 45L ) , resourceTypePermissionSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , resourceTypePermissionSoap0 . getPrimaryKey ( ) )
assertEquals ( ( - 45L ) , resourceTypePermissionSoap0 . getActionIds ( ) )
assertEquals ( ( - 45L ) , resourceTypePermissionSoap0 . getRoleId ( ) )
assertEquals ( 0L , resourceTypePermissionSoap0 . getActionIds ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( resourceTypePermissionSoapArray0 )
assertEquals ( 7L , layoutSetSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( layoutSetSoap0 . getCss ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , layoutSetSoap0 . getGroupId ( ) )
assertEquals ( 0 , layoutSetSoap0 . getPageCount ( ) )
assertEquals ( false , layoutSetSoap0 . isLayoutSetPrototypeLinkEnabled ( ) )
assertEquals ( 0L , long0 )
assertNull ( layoutSetSoap0 . getLayoutSetPrototypeUuid ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSetSoap0 . getPrivateLayout ( ) )
assertEquals ( 0L , layoutSetSoap0 . getLogoId ( ) )
assertNull ( layoutSetSoap0 . getWapColorSchemeId ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSetSoap0 . getLogo ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( layoutSetSoap0 . getColorSchemeId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( false , layoutSetSoap0 . getPrivateLayout ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1987 , layoutSetSoap0 . getPageCount ( ) )
assertEquals ( false , boolean0 )
assertNull ( layoutSetSoap0 . getWapThemeId ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSetSoap0 . getPrivateLayout ( ) )
assertEquals ( false , layoutSetSoap0 . isPrivateLayout ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( false , layoutSetSoap0 . isPrivateLayout ( ) )
assertNull ( string0 )
assertNotNull ( layoutSetSoapArray0 )
assertEquals ( 0L , browserTrackerSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , browserTrackerSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , browserTrackerSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( browserTrackerSoapArray0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 64L ) , portletSoap0 . getPrimaryKey ( ) )
assertNull ( portletSoap0 . getRoles ( ) )
assertEquals ( false , portletSoap0 . getActive ( ) )
assertEquals ( 0L , portletSoap0 . getId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( ( - 64L ) , portletSoap0 . getCompanyId ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( portletSoapArray0 )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( userTrackerSoap0 . getSessionId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , userTrackerSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( userTrackerSoap0 . getRemoteAddr ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , userTrackerSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( userTrackerSoap0 . getRemoteHost ( ) )
assertEquals ( 0L , userTrackerSoap0 . getUserTrackerId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , userTrackerSoap0 . getPrimaryKey ( ) )
assertNull ( userTrackerSoap0 . getSessionId ( ) )
assertNotNull ( userTrackerSoapArray0 )
assertEquals ( 0L , accountSoap0 . getParentAccountId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( accountSoap0 . getName ( ) )
assertNull ( string0 )
assertNull ( accountSoap0 . getIndustry ( ) )
assertNull ( accountSoap0 . getTickerSymbol ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , accountSoap0 . getUserId ( ) )
assertNull ( accountSoap0 . getType ( ) )
assertNull ( accountSoap0 . getSize ( ) )
assertNull ( accountSoap0 . getName ( ) )
assertNull ( accountSoap0 . getSize ( ) )
assertEquals ( 0L , long0 )
assertNull ( accountSoap0 . getLegalId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( accountSoap0 . getTickerSymbol ( ) )
assertNull ( accountSoap0 . getType ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( "3^0 r ] 6W" , accountSoap0 . getLegalId ( ) )
assertEquals ( 0L , long0 )
assertNull ( accountSoap0 . getLegalName ( ) )
assertNull ( string0 )
assertEquals ( ( - 1990L ) , accountSoap0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( accountSoap0 . getType ( ) )
assertNull ( date0 )
assertNotNull ( accountSoapArray0 )
assertEquals ( 0L , webDAVPropsSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , webDAVPropsSoap0 . getWebDavPropsId ( ) )
assertNull ( date0 )
assertEquals ( 1562L , webDAVPropsSoap0 . getClassNameId ( ) )
assertEquals ( 0L , webDAVPropsSoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertEquals ( 0L , webDAVPropsSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , webDAVPropsSoap0 . getWebDavPropsId ( ) )
assertNull ( string0 )
assertEquals ( 0L , webDAVPropsSoap0 . getClassNameId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( webDAVPropsSoapArray0 )
assertEquals ( false , countrySoap0 . getActive ( ) )
assertEquals ( false , countrySoap0 . isZipRequired ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "Q ( Um | F" , countrySoap0 . getNumber ( ) )
assertNull ( string0 )
assertEquals ( false , countrySoap0 . getZipRequired ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( countrySoap0 . getNumber ( ) )
assertEquals ( "" , countrySoap0 . getA3 ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , countrySoap0 . isActive ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , countrySoap0 . isZipRequired ( ) )
assertNotNull ( countrySoapArray0 )
assertEquals ( "com . liferay . portal . model . UserNotificationEvent" , string0 )
assertNull ( userNotificationEvent0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( 8 , map0 . size ( ) )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getClassPK ( ) )
assertEquals ( 1039 , workflowDefinitionLinkSoap0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( ( - 1879L ) , workflowDefinitionLinkSoap0 . getUserId ( ) )
assertEquals ( ( - 1879L ) , workflowDefinitionLinkSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( ( - 1879L ) , workflowDefinitionLinkSoap0 . getClassPK ( ) )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getTypePK ( ) )
assertNull ( date0 )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getClassPK ( ) )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getClassPK ( ) )
assertEquals ( 0 , workflowDefinitionLinkSoap0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( 0 , workflowDefinitionLinkSoap0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , workflowDefinitionLinkSoap0 . getTypePK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNotNull ( workflowDefinitionLinkSoapArray0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , addressSoap0 . getCompanyId ( ) )
assertEquals ( ( - 717L ) , addressSoap0 . getClassPK ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( false , addressSoap0 . isPrimary ( ) )
assertNull ( addressSoap0 . getStreet1 ( ) )
assertEquals ( 0L , addressSoap0 . getClassPK ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1878L , addressSoap0 . getPrimaryKey ( ) )
assertEquals ( false , addressSoap0 . isPrimary ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , addressSoap0 . getMailing ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , addressSoap0 . isMailing ( ) )
assertEquals ( 0L , addressSoap0 . getClassNameId ( ) )
assertEquals ( ( - 289L ) , addressSoap0 . getCompanyId ( ) )
assertEquals ( 2 , date0 . getDate ( ) )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 582L , addressSoap0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 4 , addressSoap0 . getTypeId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , addressSoap0 . getMailing ( ) )
assertNull ( string0 )
assertEquals ( 0 , addressSoap0 . getTypeId ( ) )
assertEquals ( 1878L , addressSoap0 . getClassNameId ( ) )
assertEquals ( 0L , addressSoap0 . getCompanyId ( ) )
assertNotNull ( addressSoapArray0 )
assertEquals ( "com . liferay . portal . model . LayoutSetBranch" , string0 )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( layoutSetBranch0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertEquals ( false , class0 . isPrimitive ( ) )
assertEquals ( "com . liferay . portal . model . VirtualHost" , string0 )
assertNull ( virtualHost0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertNotNull ( roleConstants0 )
assertEquals ( "regular" , string0 )
assertEquals ( "organization" , string0 )
assertEquals ( "site" , string0 )
assertEquals ( false , layoutBranchSoap0 . getMaster ( ) )
assertEquals ( false , layoutBranchSoap0 . isMaster ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , layoutBranchSoap0 . getLayoutSetBranchId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 2L , layoutBranchSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( false , layoutBranchSoap0 . isMaster ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutBranchSoap0 . isMaster ( ) )
assertEquals ( 0L , layoutBranchSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( true , layoutBranchSoap0 . getMaster ( ) )
assertNull ( layoutBranchSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( layoutBranchSoap0 . getUserName ( ) )
assertNotNull ( layoutBranchSoapArray0 )
assertNull ( string0 )
assertEquals ( 24L , userSoap0 . getUserId ( ) )
assertEquals ( true , userSoap0 . getEmailAddressVerified ( ) )
assertNull ( date0 )
assertEquals ( false , userSoap0 . isPasswordEncrypted ( ) )
assertEquals ( false , userSoap0 . getDefaultUser ( ) )
assertNull ( string0 )
assertNull ( userSoap0 . getFirstName ( ) )
assertEquals ( ( - 113L ) , userSoap0 . getPortraitId ( ) )
assertEquals ( true , userSoap0 . isPasswordEncrypted ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( false , userSoap0 . isEmailAddressVerified ( ) )
assertNull ( userSoap0 . getUuid ( ) )
assertNull ( string0 )
assertEquals ( true , userSoap0 . getDefaultUser ( ) )
assertEquals ( false , userSoap0 . getLockout ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( date0 )
assertEquals ( false , userSoap0 . isLockout ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , userSoap0 . isEmailAddressVerified ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , userSoap0 . getPrimaryKey ( ) )
assertEquals ( false , userSoap0 . getPasswordEncrypted ( ) )
assertEquals ( - 594 , userSoap0 . getGraceLoginCount ( ) )
assertEquals ( false , boolean0 )
assertNull ( userSoap0 . getGreeting ( ) )
assertEquals ( - 594 , userSoap0 . getStatus ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , userSoap0 . getUserId ( ) )
assertNull ( date0 )
assertEquals ( 0 , int0 )
assertNull ( date0 )
assertEquals ( 0 , userSoap0 . getFailedLoginAttempts ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , userSoap0 . isAgreedToTermsOfUse ( ) )
assertEquals ( ( - 1038L ) , userSoap0 . getContactId ( ) )
assertNull ( string0 )
assertNull ( userSoap0 . getReminderQueryQuestion ( ) )
assertEquals ( false , userSoap0 . getAgreedToTermsOfUse ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , userSoap0 . getAgreedToTermsOfUse ( ) )
assertNull ( string0 )
assertNull ( userSoap0 . getReminderQueryQuestion ( ) )
assertEquals ( ( - 824L ) , userSoap0 . getFacebookId ( ) )
assertEquals ( 260 , userSoap0 . getFailedLoginAttempts ( ) )
assertEquals ( 0 , userSoap0 . getGraceLoginCount ( ) )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( false , userSoap0 . isPasswordReset ( ) )
assertEquals ( false , userSoap0 . getPasswordEncrypted ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( userSoap0 . getPassword ( ) )
assertNull ( string0 )
assertEquals ( false , userSoap0 . getAgreedToTermsOfUse ( ) )
assertEquals ( false , userSoap0 . isAgreedToTermsOfUse ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( userSoap0 . getGreeting ( ) )
assertNull ( userSoap0 . getEmailAddress ( ) )
assertEquals ( false , userSoap0 . isDefaultUser ( ) )
assertNull ( string0 )
assertNull ( userSoap0 . getMiddleName ( ) )
assertNull ( userSoap0 . getMiddleName ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( userSoapArray0 )
assertNull ( address0 )
assertEquals ( "com . liferay . portal . model . Address" , string0 )
assertEquals ( "com . liferay . portal . model . Address" , class0 . getName ( ) )
assertEquals ( "com . liferay . portal . model . Address" , addressWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portal . model . WebDAVProps" , string0 )
assertNull ( webDAVProps0 )
assertEquals ( false , class0 . isAnonymousClass ( ) )
assertEquals ( "com . liferay . portal . model . WebDAVProps" , webDAVPropsWrapper0 . getModelClassName ( ) )
assertEquals ( "com . liferay . portal . model . PortletItem" , string0 )
assertEquals ( "com . liferay . portal . model . PortletItem" , class0 . getName ( ) )
assertNull ( portletItem0 )
assertEquals ( "com . liferay . portal . model . PortletItem" , portletItemWrapper0 . getModelClassName ( ) )
assertEquals ( false , layoutSetBranchSoap0 . getLogo ( ) )
assertNull ( string0 )
assertEquals ( 1119L , layoutSetBranchSoap0 . getGroupId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( layoutSetBranchSoap0 . getSettings ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( false , layoutSetBranchSoap0 . getMaster ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( layoutSetBranchSoap0 . getDescription ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSetBranchSoap0 . getPrivateLayout ( ) )
assertEquals ( 0L , long0 )
assertEquals ( true , layoutSetBranchSoap0 . isLayoutSetPrototypeLinkEnabled ( ) )
assertNull ( layoutSetBranchSoap0 . getUserName ( ) )
assertNull ( date0 )
assertEquals ( 0L , layoutSetBranchSoap0 . getPrimaryKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSetBranchSoap0 . isLogo ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSetBranchSoap0 . isLogo ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , layoutSetBranchSoap0 . getLogo ( ) )
assertEquals ( 0L , layoutSetBranchSoap0 . getLayoutSetBranchId ( ) )
assertNull ( string0 )
assertEquals ( false , layoutSetBranchSoap0 . getLayoutSetPrototypeLinkEnabled ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , layoutSetBranchSoap0 . isPrivateLayout ( ) )
assertEquals ( 0L , layoutSetBranchSoap0 . getCompanyId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutSetBranchSoap0 . isMaster ( ) )
assertEquals ( false , layoutSetBranchSoap0 . isMaster ( ) )
assertEquals ( ( - 1L ) , layoutSetBranchSoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNull ( layoutSetBranchSoap0 . getDescription ( ) )
assertNull ( layoutSetBranchSoap0 . getLayoutSetPrototypeUuid ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( layoutSetBranchSoapArray0 )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getGroupId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 15L ) , workflowInstanceLinkSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertEquals ( ( - 15L ) , workflowInstanceLinkSoap0 . getGroupId ( ) )
assertNull ( workflowInstanceLinkSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getWorkflowInstanceId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getPrimaryKey ( ) )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getWorkflowInstanceLinkId ( ) )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getWorkflowInstanceId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , workflowInstanceLinkSoap0 . getUserId ( ) )
assertNotNull ( workflowInstanceLinkSoapArray0 )
assertEquals ( "com . liferay . portal . model . Company" , string0 )
assertEquals ( 1537 , class0 . getModifiers ( ) )
assertNull ( company0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( portletConstants0 )
assertEquals ( true , boolean0 )
assertEquals ( "4_RwNT%Tm#ktPV_USER_105_INSTANCE_4_RwNT%Tm#ktPV" , string0 )
assertNotNull ( string0 )
assertEquals ( "_USER_607_INSTANCE__USER_607" , string0 )
assertEquals ( 105L , long0 )
assertEquals ( " { uuid = null , userId = 0 , companyId = 0 , createDate = 0 , modifiedDate = 0 , defaultUser = false , contactId = 0 , password = null , passwordEncrypted = false , passwordReset = false , passwordModifiedDate = 0 , digest = null , reminderQueryQuestion = null , reminderQueryAnswer = null , graceLoginCount = 0 , screenName = null , emailAddress = null , facebookId = 0 , openId = null , portraitId = 0 , languageId = null , timeZoneId = null , greeting = null , comments = null , firstName = null , middleName = null , lastName = null , jobTitle = null , loginDate = 0 , loginIP = null , lastLoginDate = 0 , lastLoginIP = null , lastFailedLoginDate = 0 , failedLoginAttempts = 0 , lockout = false , lockoutDate = 0 , agreedToTermsOfUse = false , emailAddressVerified = false , status = 0 } " , string0 )
assertEquals ( false , userCacheModel0 . agreedToTermsOfUse )
assertEquals ( 0L , userCacheModel0 . lockoutDate )
assertEquals ( 0L , userCacheModel0 . facebookId )
assertEquals ( false , userCacheModel0 . agreedToTermsOfUse )
assertEquals ( 0L , userCacheModel0 . portraitId )
assertEquals ( " { uuid = null , userId = 0 , companyId = 0 , createDate = 0 , modifiedDate = 0 , defaultUser = false , contactId = 0 , password = null , passwordEncrypted = false , passwordReset = false , passwordModifiedDate = 0 , digest = null , reminderQueryQuestion = null , reminderQueryAnswer = null , graceLoginCount = 0 , screenName = files ) < br > , emailAddress = null , facebookId = 0 , openId = null , portraitId = 0 , languageId = null , timeZoneId = null , greeting = null , comments = null , firstName = null , middleName = null , lastName = null , jobTitle = null , loginDate = 0 , loginIP = null , lastLoginDate = 0 , lastLoginIP = null , lastFailedLoginDate = 0 , failedLoginAttempts = 0 , lockout = false , lockoutDate = 0 , agreedToTermsOfUse = false , emailAddressVerified = false , status = 0 } " , userCacheModel0 . toString ( ) )
assertEquals ( 0L , userCacheModel0 . companyId )
assertEquals ( 0L , userCacheModel0 . portraitId )
assertEquals ( " { portletItemId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , name = null , portletId = null , classNameId = 0 } " , string0 )
assertEquals ( 0L , portletItemCacheModel0 . userId )
assertEquals ( 0L , portletItemCacheModel0 . createDate )
assertEquals ( " { id = 0 , companyId = 0 , portletId = null , roles = null , active = false } " , string0 )
assertEquals ( " { id = 0 , companyId = 0 , portletId = `$ , roles = null , active = false } " , portletCacheModel0 . toString ( ) )
assertEquals ( 0L , portletCacheModel0 . id )
assertNull ( layout0 )
assertNull ( group0 )
assertNotNull ( string0 )
assertEquals ( " { membershipRequestId = 0 , groupId = 0 , companyId = 0 , userId = 0 , createDate = 0 , comments = null , replyComments = null , replyDate = 0 , replierUserId = 0 , statusId = 0 } " , string0 )
assertEquals ( 0L , membershipRequestCacheModel0 . membershipRequestId )
assertEquals ( 0L , membershipRequestCacheModel0 . userId )
assertEquals ( " { pluginSettingId = 0 , companyId = 0 , pluginId = null , pluginType = null , roles = null , active = false } " , string0 )
assertEquals ( false , pluginSettingCacheModel0 . active )
assertEquals ( 0L , pluginSettingCacheModel0 . companyId )
assertEquals ( 0L , pluginSettingCacheModel0 . companyId )
assertEquals ( " { accountId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentAccountId = 0 , name = null , legalName = null , legalId = null , legalType = null , sicCode = null , tickerSymbol = null , industry = null , type = null , size = null } " , string0 )
assertEquals ( " { accountId = 0 , companyId = 0 , userId = 0 , userName = IUGss9%qmeokkIw : p + , createDate = 0 , modifiedDate = 0 , parentAccountId = 0 , name = null , legalName = null , legalId = null , legalType = null , sicCode = null , tickerSymbol = null , industry = null , type = null , size = null } " , accountCacheModel0 . toString ( ) )
assertEquals ( " { accountId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentAccountId = 0 , name = text , legalName = null , legalId = null , legalType = null , sicCode = null , tickerSymbol = null , industry = null , type = null , size = null } " , accountCacheModel0 . toString ( ) )
assertEquals ( 0L , accountCacheModel0 . parentAccountId )
assertEquals ( 0L , accountCacheModel0 . createDate )
assertEquals ( 0L , accountCacheModel0 . companyId )
assertEquals ( " { accountId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , parentAccountId = 0 , name = null , legalName = null , legalId = null , legalType = null , sicCode = null , tickerSymbol = null , industry = null , type = IUGss9%qmeokkIw : p + , size = null } " , accountCacheModel0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , serviceComponentCacheModel0 . serviceComponentId )
assertEquals ( " { serviceComponentId = 0 , buildNamespace = null , buildNumber = 0 , buildDate = 0 , data = null } " , serviceComponentCacheModel0 . toString ( ) )
assertEquals ( 0L , serviceComponentCacheModel0 . buildDate )
assertEquals ( " { subscriptionId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , frequency = null } " , string0 )
assertEquals ( " { subscriptionId = 0 , companyId = 0 , userId = 0 , userName = 9 , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , frequency = null } " , subscriptionCacheModel0 . toString ( ) )
assertEquals ( 0L , subscriptionCacheModel0 . classNameId )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( true , portletAppImpl0 . isWARFile ( ) )
assertEquals ( "" , portletAppImpl0 . getDefaultNamespace ( ) )
assertEquals ( "Uey + 55 . ~v ! Bwf" , string0 )
assertEquals ( 0 , set0 . size ( ) )
assertNull ( publicRenderParameter0 )
assertNull ( portletURLListener0 )
assertEquals ( "" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( "AvV0 ; qyzIxQ ) p / aI . " , portletAppImpl0 . getServletContextName ( ) )
assertEquals ( false , portletAppImpl0 . isWARFile ( ) )
assertNull ( portletFilter0 )
assertEquals ( " / i" , string0 )
assertNull ( spriteImage0 )
assertEquals ( "D" , portletAppImpl0 . getServletContextName ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( " / i" , portletAppImpl0 . getContextPath ( ) )
assertEquals ( "" , portletAppImpl0 . getDefaultNamespace ( ) )
assertEquals ( " { resourceBlockId = 0 , companyId = 0 , groupId = 0 , name = null , permissionsHash = null , referenceCount = 0 } " , string0 )
assertEquals ( 0L , resourceBlockCacheModel0 . resourceBlockId )
assertEquals ( 0L , resourceBlockCacheModel0 . groupId )
assertEquals ( 0L , resourceBlockCacheModel0 . companyId )
assertEquals ( " { uuid = null , lockId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , className = null , key = null , owner = null , inheritable = false , expirationDate = 0 } " , string0 )
assertEquals ( " { uuid = vw5SRnf : J { @8d , lockId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , className = null , key = null , owner = null , inheritable = false , expirationDate = 0 } " , lockCacheModel0 . toString ( ) )
assertEquals ( 0L , lockCacheModel0 . companyId )
assertEquals ( 0L , lockCacheModel0 . createDate )
assertEquals ( 0L , lockCacheModel0 . userId )
assertNotNull ( string0 )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( "$ { root - path } / images" , string0 )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( true , themeImpl0 . isWARFile ( ) )
assertEquals ( "$ { root - path } / templates" , themeImpl0 . getTemplatesPath ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( "$ { root - path } / css" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "$ { root - path } / css" , themeImpl0 . getCssPath ( ) )
assertEquals ( "vm" , themeImpl0 . getTemplateExtension ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertNotNull ( string0 )
assertEquals ( true , themeImpl0 . isWapTheme ( ) )
assertEquals ( "sA4ft " , themeImpl0 . getTemplateExtension ( ) )
assertEquals ( "theme" , themeImpl0 . getCssPath ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( "vm" , themeImpl0 . getTemplateExtension ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( " & #N ) x ; " , themeImpl0 . getRootPath ( ) )
assertEquals ( "vm" , themeImpl0 . getTemplateExtension ( ) )
assertEquals ( "$ { root - path } / templates" , themeImpl0 . getTemplatesPath ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( "" , themeImpl0 . getName ( ) )
assertNotNull ( string0 )
assertEquals ( " & 67L@q ~" , themeImpl0 . getTemplatesPath ( ) )
assertNotNull ( string0 )
assertEquals ( "_SERVLET_CONTEXT_" , themeImpl0 . getVelocityResourceListener ( ) )
assertEquals ( "$ { root - path } / css" , themeImpl0 . getCssPath ( ) )
assertEquals ( "$ { root - path } / templates" , themeImpl0 . getTemplatesPath ( ) )
assertEquals ( "~" , themeImpl0 . getName ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( "$ { root - path } / images" , themeImpl0 . getImagesPath ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertNotNull ( stringArray1 )
assertEquals ( "$ { root - path } / css" , themeImpl0 . getCssPath ( ) )
assertEquals ( true , themeImpl0 . getLoadFromServletContext ( ) )
assertEquals ( "$ { root - path } / js" , themeImpl0 . getJavaScriptPath ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( "$ { root - path } / css" , themeImpl0 . getCssPath ( ) )
assertNotNull ( properties0 )
assertEquals ( "$ { root - path } / templates" , themeImpl0 . getTemplatesPath ( ) )
assertEquals ( " & 67L@ ; ~" , themeImpl0 . getVirtualPath ( ) )
assertEquals ( " / " , themeImpl0 . getRootPath ( ) )
assertEquals ( " { roleId = 0 , companyId = 0 , classNameId = 0 , classPK = 0 , name = null , title = null , description = null , type = 0 , subtype = null } " , string0 )
assertEquals ( 0L , roleCacheModel0 . roleId )
assertEquals ( " { websiteId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , url = null , typeId = 0 , primary = false } " , string0 )
assertEquals ( 0L , websiteCacheModel0 . classPK )
assertEquals ( 0L , websiteCacheModel0 . modifiedDate )
assertEquals ( 0 , websiteCacheModel0 . typeId )
assertEquals ( " { teamId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , groupId = 0 , name = null , description = null } " , string0 )
assertEquals ( 0L , teamCacheModel0 . userId )
assertEquals ( 0L , teamCacheModel0 . companyId )
assertEquals ( 0L , teamCacheModel0 . companyId )
assertEquals ( " { webDavPropsId = 0 , companyId = 0 , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , props = null } " , string0 )
assertEquals ( 0L , webDAVPropsCacheModel0 . webDavPropsId )
assertEquals ( 0L , webDAVPropsCacheModel0 . classPK )
assertEquals ( " { layoutRevisionId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , layoutSetBranchId = 0 , layoutBranchId = 0 , parentLayoutRevisionId = 0 , head = false , major = false , plid = 0 , privateLayout = false , name = null , title = null , description = null , keywords = null , robots = null , typeSettings = null , iconImage = false , iconImageId = 0 , themeId = null , colorSchemeId = null , wapThemeId = null , wapColorSchemeId = null , css = null , status = 0 , statusByUserId = 0 , statusByUserName = null , statusDate = 0 } " , string0 )
assertEquals ( 0 , layoutRevisionCacheModel0 . status )
assertEquals ( false , layoutRevisionCacheModel0 . major )
assertEquals ( false , layoutRevisionCacheModel0 . privateLayout )
assertEquals ( 0L , layoutRevisionCacheModel0 . statusByUserId )
assertEquals ( 0L , layoutRevisionCacheModel0 . createDate )
assertEquals ( 0L , layoutRevisionCacheModel0 . userId )
assertEquals ( 0 , layoutRevisionCacheModel0 . status )
assertEquals ( 0L , layoutRevisionCacheModel0 . createDate )
assertEquals ( " - aMU [ ? 2" , portletFilterImpl0 . getFilterClass ( ) )
assertEquals ( "remove" , portletFilterImpl0 . getFilterName ( ) )
assertNotNull ( portletAppImpl1 )
assertEquals ( "remove" , string0 )
assertEquals ( " - aMU [ ? 2" , portletFilterImpl0 . getFilterClass ( ) )
assertEquals ( "remove" , string0 )
assertNotNull ( set0 )
assertEquals ( " - aMU [ ? 2" , portletFilterImpl0 . getFilterClass ( ) )
assertEquals ( "Iuz" , portletFilterImpl0 . getFilterName ( ) )
assertEquals ( " - aMU [ ? 2" , portletFilterImpl0 . getFilterClass ( ) )
assertEquals ( " { uuid = null , repositoryId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , name = null , description = null , portletId = null , typeSettings = null , dlFolderId = 0 } " , string0 )
assertEquals ( 0L , repositoryCacheModel0 . groupId )
assertEquals ( 0L , repositoryCacheModel0 . classNameId )
assertEquals ( 0L , repositoryCacheModel0 . classNameId )
assertEquals ( "com . liferay . portal . model . impl . DummyImpl" , dummyImpl0 . getModelClassName ( ) )
assertEquals ( false , class0 . isMemberClass ( ) )
assertEquals ( "" , string0 )
assertFalse ( dummyImpl0 . equals ( dummyImpl1 ) )
assertEquals ( "com . liferay . portal . model . impl . DummyImpl" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( "com . liferay . portal . model . impl . DummyImpl" , dummyImpl0 . getModelClassName ( ) )
assertEquals ( "" , string0 )
assertEquals ( " { resourceTypePermissionId = 0 , companyId = 0 , groupId = 0 , name = null , roleId = 0 , actionIds = 0 } " , string0 )
assertEquals ( " { resourceTypePermissionId = 0 , companyId = 0 , groupId = 0 , name = bindResults , roleId = 0 , actionIds = 0 } " , resourceTypePermissionCacheModel0 . toString ( ) )
assertEquals ( 0L , resourceTypePermissionCacheModel0 . resourceTypePermissionId )
assertEquals ( " { releaseId = 0 , createDate = 0 , modifiedDate = 0 , servletContextName = null , buildNumber = 0 , buildDate = 0 , verified = false , state = 0 , testString = null } " , string0 )
assertEquals ( 0L , releaseCacheModel0 . createDate )
assertEquals ( 0L , releaseCacheModel0 . releaseId )
assertEquals ( 0L , releaseCacheModel0 . releaseId )
assertEquals ( " { uuid = null , layoutPrototypeId = 0 , companyId = 0 , name = null , description = null , settings = null , active = false } " , string0 )
assertEquals ( false , layoutPrototypeCacheModel0 . active )
assertEquals ( " { uuid = null , layoutPrototypeId = 0 , companyId = 0 , name = { uuid = null , layoutPrototypeId = 0 , companyId = 0 , name = null , description = null , settings = null , active = false } , description = null , settings = null , active = false } " , layoutPrototypeCacheModel0 . toString ( ) )
assertEquals ( 0L , layoutPrototypeCacheModel0 . companyId )
assertEquals ( " { countryId = 0 , name = null , a2 = null , a3 = null , number = null , idd = null , zipRequired = false , active = false } " , string0 )
assertEquals ( false , countryCacheModel0 . zipRequired )
assertEquals ( false , countryCacheModel0 . active )
assertEquals ( " { countryId = 0 , name = null , a2 = null , a3 = { countryId = 0 , name = D#sS - rqXMO & < , a2 = null , a3 = null , number = null , idd = null , zipRequired = false , active = false } , number = null , idd = null , zipRequired = false , active = false } " , countryCacheModel0 . toString ( ) )
assertEquals ( 0L , countryCacheModel0 . countryId )
assertNotNull ( string0 )
assertEquals ( 0L , shardCacheModel0 . classPK )
assertEquals ( 0L , shardCacheModel0 . shardId )
assertEquals ( " { groupId = 0 , companyId = 0 , creatorUserId = 0 , classNameId = 0 , classPK = 0 , parentGroupId = 0 , liveGroupId = 0 , name = null , description = null , type = 0 , typeSettings = null , friendlyURL = null , site = false , active = false } " , string0 )
assertEquals ( 0L , groupCacheModel0 . groupId )
assertEquals ( " { resourcePermissionId = 0 , companyId = 0 , name = null , scope = 0 , primKey = null , roleId = 0 , ownerId = 0 , actionIds = 0 } " , string0 )
assertEquals ( 0L , resourcePermissionCacheModel0 . roleId )
assertEquals ( false , themeSettingImpl0 . isConfigurable ( ) )
assertEquals ( false , themeSettingImpl0 . isConfigurable ( ) )
assertEquals ( "" , themeSettingImpl0 . getValue ( ) )
assertNotNull ( string0 )
assertEquals ( "~0acl ONinG" , themeSettingImpl0 . getType ( ) )
assertEquals ( "lfr - theme : y < gP - _ , : y < gP - _ , " , string0 )
assertEquals ( true , themeSettingImpl0 . isConfigurable ( ) )
assertEquals ( "" , themeSettingImpl0 . getValue ( ) )
assertEquals ( "" , themeSettingImpl0 . getScript ( ) )
assertEquals ( false , themeSettingImpl0 . isConfigurable ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( " { regionId = 0 , countryId = 0 , regionCode = { regionId = 0 , countryId = 0 , regionCode = null , name = null , active = false } , name = null , active = false } " , regionCacheModel0 . toString ( ) )
assertEquals ( false , regionCacheModel0 . active )
assertEquals ( " { addressId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , street1 = null , street2 = null , street3 = null , city = null , zip = null , regionId = 0 , countryId = 0 , typeId = 0 , mailing = false , primary = false } " , string0 )
assertEquals ( false , addressCacheModel0 . mailing )
assertEquals ( 0L , addressCacheModel0 . modifiedDate )
assertEquals ( 0L , addressCacheModel0 . modifiedDate )
assertEquals ( " { uuid = null , repositoryEntryId = 0 , groupId = 0 , repositoryId = 0 , mappedId = null , manualCheckInRequired = false } " , string0 )
assertEquals ( false , repositoryEntryCacheModel0 . manualCheckInRequired )
assertEquals ( 0L , repositoryEntryCacheModel0 . repositoryEntryId )
assertEquals ( " { Z1 - IO^ZKq2 < : " , string0 )
assertEquals ( " { Z1 - IO^ZKq2 < : " , qNameImpl1 . getQualifiedName ( ) )
assertEquals ( "\" g : JxA : & myS" , qNameImpl0 . getName ( ) )
assertEquals ( "\" g : JxA : & myS" , eventDefinitionImpl0 . getValueType ( ) )
assertEquals ( " { Z1 - IO^ZKq2 < : " , eventDefinitionImpl0 . getValueType ( ) )
assertNull ( portletApp0 )
assertNotNull ( string0 )
assertEquals ( " { userId = 0 , groupId = 0 , roleId = 0 } " , userGroupRoleCacheModel0 . toString ( ) )
assertNull ( pluginPackage0 )
assertNull ( pluginSetting0 )
assertNull ( layoutTemplateImpl0 . getContent ( ) )
assertEquals ( " { workflowDefinitionLinkId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , typePK = 0 , workflowDefinitionName = null , workflowDefinitionVersion = 0 } " , string0 )
assertEquals ( " { workflowDefinitionLinkId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = # , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , typePK = 0 , workflowDefinitionName = null , workflowDefinitionVersion = 0 } " , workflowDefinitionLinkCacheModel0 . toString ( ) )
assertEquals ( 0L , workflowDefinitionLinkCacheModel0 . classPK )
assertEquals ( 0L , workflowDefinitionLinkCacheModel0 . modifiedDate )
assertEquals ( " { workflowInstanceLinkId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , workflowInstanceId = 0 } " , string0 )
assertEquals ( 0L , workflowInstanceLinkCacheModel0 . workflowInstanceId )
assertEquals ( 0L , workflowInstanceLinkCacheModel0 . workflowInstanceId )
assertNull ( qName0 )
assertEquals ( "" , publicRenderParameterImpl0 . getIdentifier ( ) )
assertEquals ( "" , publicRenderParameterImpl0 . getIdentifier ( ) )
assertEquals ( "j^" , publicRenderParameterImpl0 . getIdentifier ( ) )
assertEquals ( "j^" , portletAppImpl1 . getServletContextName ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0L , resourceImpl0 . getCompanyId ( ) )
assertEquals ( 0L , resourceImpl0 . getCodeId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , resourceImpl0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1L ) , resourceImpl0 . getCodeId ( ) )
assertEquals ( 0L , resourceImpl0 . getResourceId ( ) )
assertNull ( string0 )
assertEquals ( 1234 , resourceImpl0 . getScope ( ) )
assertEquals ( " { ticketId = 0 , companyId = 0 , createDate = 0 , classNameId = 0 , classPK = 0 , key = null , type = 0 , extraInfo = null , expirationDate = 0 } " , string0 )
assertEquals ( " { ticketId = 0 , companyId = 0 , createDate = 0 , classNameId = 0 , classPK = 0 , key = 8sr`kdy8 , AB5i / + } , type = 0 , extraInfo = null , expirationDate = 0 } " , ticketCacheModel0 . toString ( ) )
assertEquals ( 0 , ticketCacheModel0 . type )
assertEquals ( 0L , ticketCacheModel0 . classPK )
assertEquals ( " { organizationId = 0 , groupId = 0 , roleId = 0 } " , string0 )
assertEquals ( " { resourceActionId = 0 , name = null , actionId = null , bitwiseValue = 0 } " , string0 )
assertEquals ( " { resourceActionId = 0 , name = { resourceActionId = 0 , name = null , actionId = null , bitwiseValue = 0 } , actionId = null , bitwiseValue = 0 } " , resourceActionCacheModel0 . toString ( ) )
assertEquals ( " { resourceActionId = 0 , name = null , actionId = { resourceActionId = 0 , name = null , actionId = null , bitwiseValue = 0 } , bitwiseValue = 0 } " , resourceActionCacheModel0 . toString ( ) )
assertEquals ( " { userGroupId = 0 , companyId = 0 , parentUserGroupId = 0 , name = null , description = null , addedByLDAPImport = false } " , string0 )
assertEquals ( false , userGroupCacheModel0 . addedByLDAPImport )
assertEquals ( 0L , userGroupCacheModel0 . parentUserGroupId )
assertEquals ( 0L , userGroupCacheModel0 . parentUserGroupId )
assertEquals ( " { imageId = 0 , modifiedDate = 0 , text = null , type = null , height = 0 , width = 0 , size = 0 } " , string0 )
assertEquals ( 0L , imageCacheModel0 . imageId )
assertEquals ( 0 , imageCacheModel0 . height )
assertEquals ( 0L , imageCacheModel0 . modifiedDate )
assertEquals ( " { emailAddressId = 0 , companyId = 0 , userId = 0 , userName = null , createDate = 0 , modifiedDate = 0 , classNameId = 0 , classPK = 0 , address = null , typeId = 0 , primary = false } " , string0 )
assertEquals ( 0 , emailAddressCacheModel0 . typeId )
assertEquals ( 0L , emailAddressCacheModel0 . companyId )
assertEquals ( 0L , emailAddressCacheModel0 . createDate )
assertEquals ( true , portletAppImpl0 . isWARFile ( ) )
assertEquals ( "Zu : " , portletURLListenerImpl0 . getListenerClass ( ) )
assertEquals ( " / Zu : " , portletAppImpl0 . getContextPath ( ) )
assertSame ( portletAppImpl1 , portletAppImpl0 )
assertEquals ( " { portletPreferencesId = 0 , ownerId = 0 , ownerType = 0 , plid = 0 , portletId = null , preferences = null } " , string0 )
assertEquals ( 0L , portletPreferencesCacheModel0 . plid )
assertEquals ( 0L , portletPreferencesCacheModel0 . plid )
assertEquals ( " { uuid = null , plid = 0 , groupId = 0 , companyId = 0 , createDate = 0 , modifiedDate = 0 , privateLayout = false , layoutId = 0 , parentLayoutId = 0 , name = null , title = null , description = null , keywords = null , robots = null , type = null , typeSettings = null , hidden = false , friendlyURL = null , iconImage = false , iconImageId = 0 , themeId = null , colorSchemeId = null , wapThemeId = null , wapColorSchemeId = null , css = null , priority = 0 , layoutPrototypeUuid = null , layoutPrototypeLinkEnabled = false , sourcePrototypeLayoutUuid = null } " , string0 )
assertEquals ( false , layoutCacheModel0 . iconImage )
assertEquals ( 0L , layoutCacheModel0 . plid )
assertEquals ( false , layoutCacheModel0 . privateLayout )
assertEquals ( false , layoutCacheModel0 . iconImage )
assertEquals ( 0 , layoutCacheModel0 . priority )
assertEquals ( 0L , resourceBlockPermissionCacheModel0 . roleId )
assertEquals ( " { resourceBlockPermissionId = 0 , resourceBlockId = 0 , roleId = 0 , actionIds = 0 } " , string0 )
assertEquals ( " { orgLaborId = 0 , organizationId = 0 , typeId = 0 , sunOpen = 0 , sunClose = 0 , monOpen = 0 , monClose = 0 , tueOpen = 0 , tueClose = 0 , wedOpen = 0 , wedClose = 0 , thuOpen = 0 , thuClose = 0 , friOpen = 0 , friClose = 0 , satOpen = 0 , satClose = 0 } " , string0 )
assertEquals ( " { LayoutBranchId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , layoutSetBranchId = 0 , plid = 0 , name = null , description = null , master = false } " , string0 )
assertEquals ( " { LayoutBranchId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = { LayoutBranchId = 0 , groupId = 0 , companyId = 0 , userId = 0 , userName = null , layoutSetBranchId = 0 , plid = 0 , name = null , description = null , master = false } , layoutSetBranchId = 0 , plid = 0 , name = null , description = null , master = false } " , layoutBranchCacheModel0 . toString ( ) )
assertEquals ( 0L , layoutBranchCacheModel0 . userId )
assertEquals ( 0L , layoutBranchCacheModel0 . plid )
assertEquals ( " { userIdMapperId = 0 , userId = 0 , type = null , description = null , externalUserId = null } " , string0 )
assertEquals ( 0L , userIdMapperCacheModel0 . userId )
assertEquals ( 0L , userIdMapperCacheModel0 . userId )
assertEquals ( 0L , userIdMapperCacheModel0 . userId )
assertEquals ( " { portalPreferencesId = 0 , ownerId = 0 , ownerType = 0 , preferences = null } " , string0 )
assertEquals ( 0L , portalPreferencesCacheModel0 . ownerId )
assertEquals ( 0 , portalPreferencesCacheModel0 . ownerType )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , portalSecurityManagerThreadLocal0 . isEnabled ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1047L ) , lDAPGroup0 . getCompanyId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( "p < ( rBY8 / , > fKZf6k" , lDAPGroup0 . getDescription ( ) )
assertEquals ( 0L , lDAPGroup0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( false , lDAPUser0 . isSendEmail ( ) )
assertEquals ( false , boolean0 )
assertNull ( longArray0 )
assertEquals ( false , lDAPUser0 . isAutoPassword ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , lDAPUser0 . getCreatorUserId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , lDAPUser0 . isSendEmail ( ) )
assertEquals ( false , lDAPUser0 . isUpdatePortrait ( ) )
assertEquals ( false , lDAPUser0 . isUpdatePortrait ( ) )
assertEquals ( false , lDAPUser0 . isAutoPassword ( ) )
assertEquals ( ( - 1L ) , lDAPUser0 . getCreatorUserId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , lDAPUser0 . isUpdatePortrait ( ) )
assertEquals ( false , lDAPUser0 . isAutoScreenName ( ) )
assertEquals ( true , lDAPUser0 . isUpdatePassword ( ) )
assertEquals ( false , lDAPUser0 . isPasswordReset ( ) )
assertNull ( longArray0 )
assertEquals ( false , boolean0 )
assertNull ( map0 )
assertEquals ( false , lDAPUser0 . isAutoScreenName ( ) )
assertEquals ( true , lDAPUser0 . isAutoScreenName ( ) )
assertEquals ( 0L , lDAPUser0 . getCreatorUserId ( ) )
assertNull ( longArray0 )
assertEquals ( false , lDAPUser0 . isAutoScreenName ( ) )
assertNull ( map0 )
assertEquals ( false , lDAPUser0 . isPasswordReset ( ) )
assertNull ( serviceContext0 )
assertNull ( user0 )
assertNull ( byteArray0 )
assertNull ( contact0 )
assertNull ( list0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , lDAPUser0 . getCreatorUserId ( ) )
assertNull ( longArray0 )
assertNotNull ( attributesTransformerFactory0 )
assertEquals ( 385L , lDAPGroup0 . getCompanyId ( ) )
assertNotNull ( map0 )
assertEquals ( 1 , map0 . size ( ) )
assertNull ( modifications0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , basicAttributes0 . isCaseIgnored ( ) )
assertNotNull ( defaultPortalToLDAPConverter0 )
assertEquals ( "No attributes" , basicAttributes0 . toString ( ) )
assertNotNull ( defaultPortalToLDAPConverter0 )
assertNotNull ( defaultPortalToLDAPConverter0 )
assertEquals ( false , basicAttribute0 . isOrdered ( ) )
assertEquals ( false , lDAPUserGroupTransactionThreadLocal0 . isOriginatesFromLDAP ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( modificationItem0 )
assertEquals ( "Replace attribute : s ( ! n | M'Jp { L%G'6v : s ( ! n | M'Jp { L%G'6v" , modificationItem0 . toString ( ) )
assertNotNull ( modificationItem0 )
assertNotNull ( modificationItemArray0 )
assertNotNull ( modificationItem0 )
assertNull ( attributes0 )
assertEquals ( 0 , basicAttributes0 . size ( ) )
assertNotNull ( basicAttributes0 )
assertTrue ( basicAttributes1 . equals ( basicAttributes0 ) )
assertNotNull ( portalLDAPUtil0 )
assertEquals ( " : accessibleTableRowHeaderChanged" , basicAttribute1 . toString ( ) )
assertNotNull ( lDAPSettingsUtil0 )
assertEquals ( false , lDAPUserTransactionThreadLocal0 . isOriginatesFromLDAP ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( " { active = false , hashCode = 1134503438 , servletContextName = } " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( " { active = false , hashCode = 363680938 , servletContextName = X } " , inactivePACLPolicy0 . toString ( ) )
assertNotNull ( activePACLPolicy0 )
assertEquals ( " { active = true , hashCode = 50354697 , servletContextName = 4 * U#` < voF\" | J\" ( 5 } " , activePACLPolicy0 . toString ( ) )
assertNotNull ( activePACLPolicy0 )
assertEquals ( " { active = true , hashCode = 1449627013 , servletContextName = 4 * U#` < voF\" | J\" ( 5 } " , activePACLPolicy0 . toString ( ) )
assertNotNull ( activePACLPolicy0 )
assertNotNull ( activePACLPolicy0 )
assertNotNull ( activePACLPolicy0 )
assertEquals ( " ( : c / j ! Jj | " , string0 )
assertNotNull ( activePACLPolicy0 )
assertEquals ( "searhEng^lne" , portalRuntimePermission0 . getProperty ( ) )
assertEquals ( " { active = true , hashCode = 281803964 , servletContextName = searhEng^lne } " , activePACLPolicy0 . toString ( ) )
assertEquals ( " { active = true , hashCode = 1123212946 , servletContextName = s } " , activePACLPolicy0 . toString ( ) )
assertEquals ( " { active = true , hashCode = 760738782 , servletContextName = searhEng^lne } " , activePACLPolicy0 . toString ( ) )
assertEquals ( " { active = true , hashCode = 720727243 , servletContextName = s } " , activePACLPolicy0 . toString ( ) )
assertEquals ( false , securityChecker0 . hasGetPolicy ( ) )
assertEquals ( false , securityChecker0 . hasSetPolicy ( ) )
assertEquals ( false , securityChecker0 . hasGetPolicy ( ) )
assertEquals ( "ltn" , portalMessageBusPermission0 . getDestinationName ( ) )
assertEquals ( "o6h@ , hVm2Y , 8f\"XYwt" , portalMessageBusChecker0 . getServletContextName ( ) )
assertEquals ( "sxcu < k / ntOjU { " , portalHookPermission0 . getName ( ) )
assertEquals ( "lPBQh# / 9YC$E8\"3r : 5" , portalHookChecker0 . getServletContextName ( ) )
assertEquals ( " { active = true , hashCode = 307215346 , servletContextName = m6 ? H@tNCVst } " , activePACLPolicy0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( " ( java . io . SerializablePermission enableSubclassImplementation ) " , serializablePermission0 . toString ( ) )
assertEquals ( "" , securityPermission0 . getActions ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "M%`GmQ" , socketChecker0 . getServletContextName ( ) )
assertEquals ( false , netChecker0 . hasGetProxySelector ( ) )
assertEquals ( false , netChecker0 . hasGetProxySelector ( ) )
assertEquals ( false , netChecker0 . hasGetProxySelector ( ) )
assertEquals ( " ( com . liferay . portal . kernel . security . pacl . permission . PortalServicePermission icon ) " , portalServicePermission0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "u kTjl" , string0 )
assertEquals ( " { active = true , hashCode = 1633054866 , servletContextName =  ? = 'B## + 8i' ! | uGJE } " , activePACLPolicy0 . toString ( ) )
assertEquals ( " { active = true , hashCode = 474548484 , servletContextName = 94 - + JO } " , activePACLPolicy0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( "enableSubstitution" , serializablePermission0 . getName ( ) )
assertEquals ( " ( java . security . AllPermission < all permissions > < all actions > ) " , allPermission0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , pwdToolkitUtilThreadLocal0 . isValidate ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( pwdAuthenticator0 )
assertNotNull ( permissionCheckerUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , permissionThreadLocal0 . isAddResource ( ) )
assertNull ( permissionChecker0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( list0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , accessControlThreadLocal0 . isRemoteAccess ( ) )
assertEquals ( "v" , string0 )
assertNotNull ( ntlmServiceAccount0 )
assertNotNull ( ntlmServiceAccount0 )
assertNotNull ( ntlmServiceAccount0 )
assertNotNull ( ntlmServiceAccount0 )
assertEquals ( " < v { #D%8Ol^A$w'L - Ae@" , string0 )
assertEquals ( "~pf@$$ . wfA" , string0 )
assertEquals ( "~pf@$$ . wfA" , string0 )
assertEquals ( " < v { #D%8Ol^A$w'L - Ae@" , string0 )
assertEquals ( "~pf@$$ . wfA" , string0 )
assertNotNull ( byteArray0 )
assertEquals ( 0 , int0 )
assertSame ( netlogonValidationSamInfo0 , netlogonValidationSamInfo1 )
assertEquals ( 2 , int0 )
assertEquals ( - 4 , ndrBuffer0 . getTailSpace ( ) )
assertEquals ( 0 , ndrBuffer0 . getTailSpace ( ) )
assertEquals ( 603 , groupMembership0 . getAttributes ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertSame ( byteArray0 , byteArray1 )
assertEquals ( 4 , int0 )
assertNotNull ( netlogonAuthenticator0 )
assertEquals ( ( - 72 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 78 , netrServerAuthenticate3_0 . getNegotiatedFlags ( ) )
assertEquals ( 26 , int0 )
assertEquals ( 3 , ndrBuffer0 . getCapacity ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( "I8HpM + I I" , string0 )
assertNotNull ( string0 )
assertNotNull ( screenNameValidatorFactory0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , map0 . size ( ) )
assertNull ( authVerifierResult0 )
assertNull ( httpServletRequest0 )
assertNull ( httpServletResponse0 )
assertEquals ( "ParameterAutoLogin" , string0 )
assertEquals ( "parameterAutoLoginPassword" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( cASAutoLogin0 )
assertEquals ( "BASIC" , string0 )
assertNotNull ( emailAddressGeneratorFactory0 )
assertNotNull ( fullNameGeneratorFactory0 )
assertNotNull ( facebookAutoLogin0 )
assertNotNull ( emailAddressValidatorFactory0 )
assertEquals ( 1637L , authVerifierResult0 . getUserId ( ) )
assertEquals ( " { settings = { } , state = NOT_APPLICABLE , userId = 0 } " , authVerifierResult0 . toString ( ) )
assertEquals ( " { settings = { } , state = NOT_APPLICABLE , userId = 0 } " , authVerifierResult0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( " { settings = { } , state = NOT_APPLICABLE , userId = 0 } " , authVerifierResult0 . toString ( ) )
assertEquals ( " { settings = { } , state = NOT_APPLICABLE , userId = 0 } " , authVerifierResult0 . toString ( ) )
assertEquals ( " { settings = { } , state = NOT_APPLICABLE , userId = 0 } " , authVerifierResult0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( screenNameGeneratorFactory0 )
assertNull ( properties0 )
assertNull ( authVerifier0 )
assertNotNull ( fullNameValidatorFactory0 )
assertNotNull ( companyThreadLocal0 )
assertEquals ( 0 , long0 . byteValue ( ) )
assertEquals ( "PortalSessionAuthVerifier" , string0 )
assertNotNull ( siteMinderAutoLogin0 )
assertNotNull ( authSettingsUtil0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( " $07`G$S / e7Wz ? $07`G$S / e7Wz ? chBract + rs fo [ serG" , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( transientTokenUtil0 )
assertEquals ( false , boolean0 )
assertNotNull ( openIdAutoLogin0 )
assertNotNull ( ntlmAutoLogin0 )
assertEquals ( "DIGEST" , string0 )
assertNull ( string0 )
assertEquals ( false , lDAPAuthResult0 . isAuthenticated ( ) )
assertEquals ( "" , lDAPAuthResult0 . getResponseControl ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertNull ( lDAPAuthResult0 . getErrorMessage ( ) )
assertEquals ( 0L , long0 )
assertEquals ( "~0oU ( d%DF ; 2I" , string0 )
assertNull ( principalThreadLocal0 . getName ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( "" , string0 )
assertEquals ( 0L , httpPrincipal0 . getCompanyId ( ) )
assertEquals ( "jIIaX & 'ccgaj ] ! Ymo" , httpPrincipal0 . getLogin ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( false , elementImpl0 . hasMixedContent ( ) )
assertEquals ( true , elementImpl0 . isTextOnly ( ) )
assertEquals ( "" , elementImpl0 . getText ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertNotNull ( map0 )
assertNotNull ( stringArray1 )
assertNotSame ( stringArray2 , stringArray0 )
assertNull ( string0 )
assertEquals ( "DD_TO_OTTOM" , elementImpl0 . getQualifiedName ( ) )
assertNotNull ( currentUserIdStrategy0 )
assertEquals ( 0L , portletPreferencesImpl0 . getPlid ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 0 , portletPreferencesImpl0 . size ( ) )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( 0L , portletPreferencesImpl0 . getOwnerId ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , cacheRegistryImpl0 . isActive ( ) )
assertEquals ( true , cacheRegistryImpl0 . isActive ( ) )
assertEquals ( true , cacheRegistryImpl0 . isActive ( ) )
assertEquals ( true , cacheRegistryImpl0 . isActive ( ) )
assertNotNull ( ehcachePortalCacheClusterReplicator0 )
assertEquals ( false , ehcachePortalCacheClusterReplicator0 . notAlive ( ) )
assertNotNull ( ehcachePortalCacheClusterReplicator0 )
assertNotNull ( ehcachePortalCacheClusterReplicator0 )
assertEquals ( false , ehcachePortalCacheClusterReplicator1 . isReplicateUpdatesViaCopy ( ) )
assertEquals ( 0L , clusterLinkPortalCacheClusterChannel0 . getSentEventNumber ( ) )
assertEquals ( true , jGroupsBootstrapCacheLoader0 . isAsynchronous ( ) )
assertEquals ( - 565 , jGroupsBootstrapCacheLoader1 . getMaximumChunkSizeBytes ( ) )
assertNotNull ( clearEhcacheThreadUtil0 )
assertEquals ( NotificationScope . LOCAL , notificationScope0 )
assertEquals ( "localhost / 127 . 0 . 0 . 1 - 878a5928 - f6c3 - 45fd - a4e8 - e78835363aae" , cache0 . getGuid ( ) )
assertEquals ( NotificationScope . REMOTE , notificationScope0 )
assertNotNull ( portalCacheCacheEventListener1 )
assertNull ( cacheManager0 )
assertEquals ( "B & : g__E0DBsqezX [ . B" , environmentMBeanServer0 . getDefaultDomain ( ) )
assertNull ( configuration0 )
assertNotNull ( ehcacheConfigurationUtil0 )
assertNull ( configuration0 )
assertNull ( configuration0 )
assertEquals ( 1 , modifiableEhcacheWrapper0 . getActiveReferenceCount ( ) )
assertEquals ( - 1 , modifiableEhcacheWrapper0 . getActiveReferenceCount ( ) )
assertEquals ( 0 , modifiableEhcacheWrapper0 . getActiveReferenceCount ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , modifiableEhcacheWrapper0 . getActiveReferenceCount ( ) )
assertNotNull ( memoryPortalCache0 )
assertNull ( memoryPortalCache0 . getName ( ) )
assertEquals ( "" , memoryPortalCache0 . getName ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , memoryPortalCache0 . getName ( ) )
assertEquals ( "3" , memoryPortalCache0 . getName ( ) )
assertEquals ( "" , memoryPortalCache0 . getName ( ) )
assertEquals ( "7 * IvEcKIy ; n" , memoryPortalCache0 . getName ( ) )
assertNotNull ( portalCache0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertFalse ( simpleCacheKeyGenerator0 . equals ( simpleCacheKeyGenerator1 ) )
assertNotSame ( hashCodeCacheKeyGenerator1 , hashCodeCacheKeyGenerator0 )
assertEquals ( 3624L , ( long ) long0 )
assertEquals ( 100085L , ( long ) long0 )
assertEquals ( 47602L , ( long ) long0 )
assertEquals ( false , javaMD5CacheKeyGenerator1 . isCallingGetCacheKeyThreadSafe ( ) )
assertEquals ( false , javaMD5CacheKeyGenerator1 . isCallingGetCacheKeyThreadSafe ( ) )
assertEquals ( 0 , long0 . byteValue ( ) )
assertEquals ( true , boolean0 )
assertSame ( javaMD5CacheKeyGenerator1 , javaMD5CacheKeyGenerator0 )
assertEquals ( false , javaMD5CacheKeyGenerator0 . isCallingGetCacheKeyThreadSafe ( ) )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertEquals ( false , javaMD5CacheKeyGenerator1 . isCallingGetCacheKeyThreadSafe ( ) )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertNotNull ( javaMD5CacheKeyGenerator0 )
assertEquals ( 0 , stackObjectPool0 . getNumActive ( ) )
assertEquals ( "5gfzMqtR" , string0 )
assertEquals ( "5gfzMqtR" , memcachePortalCache0 . getName ( ) )
assertEquals ( "5gfzMqtR" , memcachePortalCache0 . getName ( ) )
assertEquals ( "5gfzMqtR" , memcachePortalCache0 . getName ( ) )
assertEquals ( " | n / A ? ] J" , pooledMemcachePortalCache0 . getName ( ) )
assertEquals ( " | n / A ? ] J" , pooledMemcachePortalCache0 . getName ( ) )
assertEquals ( "#e" , string0 )
assertEquals ( " | n / A ? ] J" , pooledMemcachePortalCache0 . getName ( ) )
assertEquals ( " | n / A ? ] J" , pooledMemcachePortalCache0 . getName ( ) )
assertEquals ( " | n / A ? ] J" , pooledMemcachePortalCache0 . getName ( ) )
assertEquals ( 998 , ketamaConnectionFactory0 . getTimeoutExceptionThreshold ( ) )
assertEquals ( 0 , linkedList0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 10000L , binaryConnectionFactory0 . getOpQueueMaxBlockTime ( ) )
assertEquals ( false , linkedList0 . isEmpty ( ) )
assertNotNull ( portalCache0 )
assertNotNull ( imageMagickImpl0 )
assertNotNull ( linkedList0 )
assertEquals ( false , imageMagickImpl0 . isEnabled ( ) )
assertNotNull ( imageMagickImpl0 )
assertNull ( properties0 )
assertEquals ( 1 , bufferedImage0 . getNumXTiles ( ) )
assertEquals ( 1 , liferayConvertCmd0 . getPID ( ) )
assertNotNull ( hookFactory0 )
assertEquals ( 1 , liferayIdentifyCmd0 . getPID ( ) )
assertNotNull ( imageToolImpl0 )
assertNotNull ( byteArray0 )
assertNull ( future0 )
assertNotNull ( imageBag0 )
assertNull ( renderedImage0 )
assertNotNull ( imageBag0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( " - 1862 . - K7" , string0 )
assertNull ( object0 )
assertEquals ( "VELOCITY" , string0 )
assertEquals ( "VELOCITY" , velocityManager0 . getName ( ) )
assertEquals ( "VELOCITY" , velocityManager0 . getName ( ) )
assertNotNull ( fastExtendedProperties0 )
assertEquals ( 0 , fastExtendedProperties0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( fastExtendedProperties1 )
assertEquals ( 0 , collection0 . size ( ) )
assertEquals ( false , fastExtendedProperties0 . isInitialized ( ) )
assertEquals ( " { 1 . 0 = ViewportUI } " , fastExtendedProperties0 . toString ( ) )
assertNotNull ( fastExtendedProperties1 )
assertEquals ( " { } " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , fastExtendedProperties0 . isEmpty ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertNull ( servletContext0 )
assertEquals ( false , boolean0 )
assertNull ( servletContext0 )
assertNotNull ( velocityContextPool0 )
assertNull ( templateResource0 )
assertNull ( templateResource0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( velocityUtil0 )
assertNotNull ( myWorkflowTasksControlPanelEntry0 )
assertNull ( portletURL0 )
assertNotNull ( string0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( workflowHandler0 )
assertEquals ( true , layoutRevisionWorkflowHandler0 . isAssetTypeSearchable ( ) )
assertEquals ( "com . liferay . portal . model . LayoutRevision" , layoutRevisionWorkflowHandler0 . getClassName ( ) )
assertNotNull ( workflowLinkAdvice0 )
assertNotNull ( workflowLockingAdvice0 )
assertNotNull ( myWorkflowInstancesControlPanelEntry0 )
assertEquals ( false , boolean0 )
assertNotNull ( workflowPermissionAdvice0 )
assertEquals ( true , boolean0 )
assertNotNull ( authPublicPathRegistry0 )
assertNull ( portletActionAdapter0 )
assertNull ( actionRequestImpl0 . getPortletName ( ) )
assertNull ( resourceRequestImpl0 . getRemoteUser ( ) )
assertNull ( resourceRequestImpl0 . getETag ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( actionForward0 )
assertEquals ( "DynaActionForm [ dynaClass = null ] " , dynaActionForm0 . toString ( ) )
assertEquals ( true , boolean0 )
assertNull ( resourceRequestImpl0 . getCacheability ( ) )
assertNull ( string0 )
assertNull ( portletURL0 )
assertNotNull ( strutsUtil0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertSame ( map1 , map0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "`k + , L\" + 8 ( / " , string0 )
assertEquals ( ( - 1409011761 ) , int0 )
assertEquals ( " / * / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / * / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / * / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / * / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg - * / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg / Wl ( 2LfDDJyhYBg . * " , moduleId0 . getArtifactPath ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( " ? + " , string0 )
assertEquals ( "7" , string0 )
assertEquals ( "`k + , L\" + 8 ( / " , string0 )
assertEquals ( "Y$_TEs / Y$_TEs / Y$_TEs / Y$_TEs" , moduleId0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( moduleId0 )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( pluginPackage0 )
assertNull ( pluginPackage0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "" , pluginPackageImpl0 . getShortDescription ( ) )
assertNull ( pluginPackageImpl0 )
assertEquals ( "9 : 6 } _ } Gm" , pluginPackageImpl0 . getName ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( list0 )
assertNotNull ( list0 )
assertNull ( pluginPackageImpl0 . getName ( ) )
assertNotNull ( pluginUtil0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( " : success" , repositoryReport0 . toString ( ) )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertNull ( pluginPackageImpl0 )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( 0 , collection0 . size ( ) )
assertNull ( pluginPackage0 )
assertNull ( pluginPackage0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertEquals ( "LOCAL_URL / de / schlichtherle / io / schlichtherle - io . arc8ive" , pluginPackageImpl0 . getArtifactURL ( ) )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertEquals ( "schlichtherle" , pluginPackageImpl0 . getRecommendedDeploymentContext ( ) )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( pluginPackageImpl0 )
assertNotNull ( verifyJournal0 )
assertNotNull ( stringArray0 )
assertNotNull ( verifyBlogs0 )
assertNotNull ( verifyBlogsTrackbacks0 )
assertNotNull ( verifyBookmarks0 )
assertNotNull ( verifyDB2_0 )
assertNotNull ( verifyWiki0 )
assertNotNull ( verifyUser0 )
assertEquals ( true , deepNamedValueScanner0 . isTrackUsageCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( true , deepNamedValueScanner0 . isVisitSets ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( true , deepNamedValueScanner0 . isVisitSets ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitMaps ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , deepNamedValueScanner0 . isVisitLists ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitArrays ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( true , deepNamedValueScanner0 . isVisitCollectionss ( ) )
assertEquals ( true , deepNamedValueScanner0 . isVisitSets ( ) )
assertEquals ( true , deepNamedValueScanner0 . isVisitCollectionss ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitStaticFields ( ) )
assertEquals ( 0 , int0 )
assertEquals ( true , deepNamedValueScanner0 . isVisitArrays ( ) )
assertEquals ( false , deepNamedValueScanner0 . isVisitCollectionss ( ) )
assertEquals ( false , deepNamedValueScanner0 . isTrackUsageCount ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( 0 , deepNamedValueScanner0 . getSkipFirstCount ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( true , deepNamedValueScanner0 . isScanning ( ) )
assertEquals ( false , jettyServerCapabilities0 . isSupportsHotDeploy ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( serverCapabilitiesUtil0 )
assertEquals ( 0 , mockServletContext0 . getMajorVersion ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , glassfishServerCapabilities0 . isSupportsHotDeploy ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , jBossServerCapabilities0 . isSupportsHotDeploy ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , defaultServerCapabilities0 . isSupportsHotDeploy ( ) )
assertEquals ( false , class0 . isSynthetic ( ) )
assertEquals ( false , shardDataSourceTargetSource0 . isStatic ( ) )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , shardImpl0 . isEnabled ( ) )
assertNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( shardImpl0 . popCompanyService ( ) )
assertNull ( shardImpl0 . popCompanyService ( ) )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( shardDataSource0 )
assertEquals ( false , boolean0 )
assertSame ( shardDataSource0 , shardDataSource1 )
assertEquals ( false , shardSessionFactoryTargetSource0 . isStatic ( ) )
assertEquals ( false , shardSessionFactoryTargetSource0 . isStatic ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( derbyDB0 )
assertNotNull ( hypersonicDB0 )
assertEquals ( true , hypersonicDB0 . isSupportsInlineDistinct ( ) )
assertNotNull ( hypersonicDB0 )
assertNotNull ( sybaseDB0 )
assertEquals ( true , sybaseDB0 . isSupportsAlterColumnName ( ) )
assertNotNull ( sybaseDB0 )
assertNotNull ( sybaseDB0 )
assertNotNull ( ingresDB0 )
assertEquals ( "1" , ingresDB0 . getTemplateTrue ( ) )
assertNotNull ( ingresDB0 )
assertEquals ( " - - alter_column_name interruptAction\n" , string0 )
assertNull ( string0 )
assertNotNull ( ingresDB0 )
assertNotNull ( ingresDB0 )
assertNotNull ( ingresDB0 )
assertEquals ( true , firebirdDB0 . isSupportsInlineDistinct ( ) )
assertNotNull ( string0 )
assertNotNull ( sQLServerDB0 )
assertEquals ( true , sQLServerDB0 . isSupportsAlterColumnName ( ) )
assertNotNull ( sQLServerDB0 )
assertNotNull ( sQLServerDB0 )
assertNotNull ( sQLServerDB0 )
assertNotNull ( sAPDB0 )
assertNotNull ( sAPDB0 )
assertNotNull ( sAPDB0 )
assertNotNull ( sAPDB0 )
assertNotNull ( oracleDB0 )
assertNotNull ( oracleDB0 )
assertEquals ( "oracle" , oracleDB0 . getType ( ) )
assertNotNull ( oracleDB0 )
assertEquals ( true , interBaseDB0 . isSupportsAlterColumnName ( ) )
assertNotNull ( postgreSQLDB0 )
assertEquals ( "false" , postgreSQLDB0 . getTemplateFalse ( ) )
assertNotNull ( postgreSQLDB0 )
assertNotNull ( postgreSQLDB0 )
assertNotNull ( mySQLDB0 )
assertEquals ( true , mySQLDB0 . isSupportsAlterColumnType ( ) )
assertNotNull ( mySQLDB0 )
assertNotNull ( mySQLDB0 )
assertNotNull ( mySQLDB0 )
assertNotNull ( mySQLDB0 )
assertNotNull ( jDataStoreDB0 )
assertEquals ( "jdatastore" , jDataStoreDB0 . getType ( ) )
assertNotNull ( jDataStoreDB0 )
assertNotNull ( informixDB0 )
assertNotNull ( informixDB0 )
assertEquals ( true , informixDB0 . isSupportsUpdateWithInnerJoin ( ) )
assertNotNull ( informixDB0 )
assertNotNull ( informixDB0 )
assertNull ( session0 )
assertEquals ( true , dialectImpl0 . supportsLimit ( ) )
assertNotNull ( exceptionTranslator0 )
assertNull ( object0 )
assertNull ( connection0 )
assertEquals ( true , boolean0 )
assertNotNull ( scrollableResultsImpl0 )
assertEquals ( true , scrollableResultsImpl0 . next ( ) )
assertEquals ( true , scrollableResultsImpl0 . next ( ) )
assertNotNull ( scrollableResultsImpl0 )
assertNotNull ( scrollableResultsImpl0 )
assertEquals ( true , scrollableResultsImpl0 . next ( ) )
assertNotNull ( scrollableResultsImpl0 )
assertNotNull ( scrollableResultsImpl0 )
assertNotNull ( scrollableResultsImpl0 )
assertNotNull ( scrollableResultsImpl0 )
assertEquals ( true , scrollableResultsImpl0 . next ( ) )
assertNotNull ( lockModeTranslator0 )
assertEquals ( "READ" , lockModeType0 . name ( ) )
assertEquals ( LockModeType . WRITE , lockModeType0 )
assertNotNull ( sQLServerLimitStringUtil0 )
assertNotNull ( string0 )
assertEquals ( " 4z_page_row_num from ( 4z_page_row_num , row_number ( ) over ( order by _page_row_num ASC ) as _page_row_num from ( 4z_page_row_num from ( 4z_page_row_num , row_number ( ) over ( order by CURRENT_TIMESTAMP ) as _page_row_num from ( ( 4z_page_row_num from F ) _temp_table_1 ) _temp_table_2 where _page_row_num between 1369 and 1368 ) _temp_table_1 ) _temp_table_2 where _page_row_num between 1369 and 1368 order by _page_row_num" , string0 )
assertEquals ( " asac~0nkuwn from ( asac~0nkuwn , row_number ( ) over ( order by CURRENT_TIMESTAMP ) as _page_row_num from ( asac~0nkuwn from ( asac~0nkuwn , row_number ( ) over ( order by CURRENT_TIMESTAMP ) as _page_row_num from ( asac~0nkuwn from ` ) _temp_table_1 ) _temp_table_2 where _page_row_num between 66 and 65 order by _page_row_num ASC ) _temp_table_1 ) _temp_table_2 where _page_row_num between 66 and 65 order by _page_row_num" , string0 )
assertNotNull ( exceptionTranslator0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertEquals ( "rP~6" , projectionImpl0 . toString ( ) )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertEquals ( "max ( ) " , projectionImpl0 . toString ( ) )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertEquals ( " > MU . null" , propertyImpl1 . toString ( ) )
assertNotNull ( criterionImpl0 )
assertEquals ( "avg ( _17zZAN ? yUGHNd7_ | ) " , projectionImpl0 . toString ( ) )
assertEquals ( "min ( x , ] dG { 0v_Hyy ) " , projectionImpl0 . toString ( ) )
assertNotNull ( orderImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertEquals ( "count ( z ) " , projectionImpl0 . toString ( ) )
assertNotNull ( criterionImpl0 )
assertNotNull ( orderImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNull ( dataSource0 )
assertNull ( sessionFactory0 )
assertEquals ( " [ ] " , projectionListImpl0 . toString ( ) )
assertEquals ( "sum ( o : : \"o_2ks : Olot# ] @ ) " , projectionImpl0 . toString ( ) )
assertEquals ( " ) outside valid range . " , projectionImpl0 . toString ( ) )
assertEquals ( "max ( ) outside valid range . ) as ) outside valid range . " , projectionImpl1 . toString ( ) )
assertEquals ( "count ( ) outside valid range . ) " , projectionImpl0 . toString ( ) )
assertEquals ( "5y" , projectionImpl0 . toString ( ) )
assertEquals ( "distinct max ( | % * \" | } gcnKA { / A ) " , projectionImpl1 . toString ( ) )
assertEquals ( "avg ( ) " , projectionImpl0 . toString ( ) )
assertEquals ( "distinct count ( | % * \" | } gcnKA { / A ) " , projectionImpl0 . toString ( ) )
assertEquals ( "count ( * ) " , projectionImpl0 . toString ( ) )
assertEquals ( "min ( ) " , projectionImpl0 . toString ( ) )
assertNull ( projectionImpl0 . toString ( ) )
assertEquals ( " | % * \" | } gcnKA { / A" , projectionImpl0 . toString ( ) )
assertNotNull ( typeArray0 )
assertSame ( shortType1 , shortType0 )
assertEquals ( false , shortType1 . isMutable ( ) )
assertEquals ( "undeployment" , string0 )
assertEquals ( false , class0 . isSynthetic ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertEquals ( false , shortType0 . isMutable ( ) )
assertEquals ( 605581544 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "max ( null ) " , string0 )
assertSame ( aggregateProjection1 , aggregateProjection0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( disjunctionImpl0 )
assertNotSame ( criterionImpl0 , criterionImpl1 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNotNull ( criterionImpl0 )
assertNull ( disjunction0 )
assertSame ( dynamicQueryImpl0 , dynamicQueryImpl1 )
assertSame ( dynamicQueryImpl0 , dynamicQueryImpl1 )
assertEquals ( "DetachableCriteria ( CriteriaImpl ( mtIo } u } 3 : this [ ] [ ] mtIo } u } 3 ) ) " , detachedCriteria0 . toString ( ) )
assertNotNull ( string0 )
assertNull ( dialect0 )
assertSame ( order1 , order0 )
assertSame ( conjunctionImpl1 , conjunctionImpl0 )
assertEquals ( " ( ) " , conjunction1 . toString ( ) )
assertNotNull ( typeTranslator0 )
assertEquals ( false , characterArrayType0 . isCollectionType ( ) )
assertEquals ( false , serializableType0 . isAssociationType ( ) )
assertEquals ( 2 , serializableType0 . sqlType ( ) )
assertEquals ( false , serializableType0 . isAssociationType ( ) )
assertEquals ( false , serializableType0 . isCollectionType ( ) )
assertEquals ( false , serializableType0 . isMutable ( ) )
assertEquals ( false , serializableType0 . isEntityType ( ) )
assertEquals ( false , serializableType0 . isAnyType ( ) )
assertEquals ( "calendar_date" , serializableType0 . getName ( ) )
assertEquals ( false , serializableType0 . isAnyType ( ) )
assertEquals ( false , characterType0 . isCollectionType ( ) )
assertEquals ( false , yesNoType0 . isCollectionType ( ) )
assertEquals ( false , classType0 . isCollectionType ( ) )
assertEquals ( false , clobType0 . isComponentType ( ) )
assertEquals ( false , currencyType0 . isAssociationType ( ) )
assertEquals ( false , dateType0 . isAssociationType ( ) )
assertEquals ( false , doubleType0 . isMutable ( ) )
assertEquals ( false , floatType0 . isAssociationType ( ) )
assertEquals ( false , imageType0 . isXMLElement ( ) )
assertEquals ( "integer" , integerType0 . getName ( ) )
assertEquals ( false , localeType0 . isEntityType ( ) )
assertEquals ( false , longType0 . isCollectionType ( ) )
assertEquals ( false , materializedBlobType0 . isXMLElement ( ) )
assertEquals ( false , materializedClobType0 . isCollectionType ( ) )
assertEquals ( false , numericBooleanType0 . isXMLElement ( ) )
assertEquals ( - 3 , serializableType0 . sqlType ( ) )
assertEquals ( "short" , shortType0 . getName ( ) )
assertEquals ( false , stringType0 . isComponentType ( ) )
assertEquals ( false , textType0 . isAnyType ( ) )
assertEquals ( false , timeType0 . isEntityType ( ) )
assertEquals ( false , timestampType0 . isComponentType ( ) )
assertEquals ( false , timeZoneType0 . isXMLElement ( ) )
assertEquals ( false , trueFalseType0 . isComponentType ( ) )
assertEquals ( false , urlType0 . isEntityType ( ) )
assertEquals ( false , uUIDBinaryType0 . isEntityType ( ) )
assertEquals ( "uuid - char" , uUIDCharType0 . getName ( ) )
assertEquals ( true , wrapperBinaryType0 . isMutable ( ) )
assertNull ( calendarType0 )
assertNull ( projectionList0 )
assertNotNull ( lockModeTranslator0 )
assertNotNull ( lockMode1 )
assertEquals ( "PESSIMISTIC_FORCE_INCREMENT" , lockMode1 . toString ( ) )
assertEquals ( "PESSIMISTIC_READ" , lockMode1 . toString ( ) )
assertEquals ( "OPTIMISTIC" , lockMode1 . toString ( ) )
assertEquals ( "OPTIMISTIC_FORCE_INCREMENT" , lockMode1 . toString ( ) )
assertEquals ( "PESSIMISTIC_FORCE_INCREMENT" , lockMode1 . toString ( ) )
assertNotNull ( lockMode1 )
assertEquals ( "PESSIMISTIC_WRITE" , lockMode1 . toString ( ) )
assertNotNull ( lockMode1 )
assertEquals ( "UPGRADE_NOWAIT" , lockMode1 . toString ( ) )
assertEquals ( "WRITE" , lockMode1 . toString ( ) )
assertNotNull ( orderImpl0 )
assertNotNull ( orderImpl0 )
assertEquals ( "" , propertyImpl0 . toString ( ) )
assertFalse ( dynamicQueryImpl1 . equals ( dynamicQueryImpl0 ) )
assertNotNull ( dynamicQueryImpl0 )
assertNotNull ( dynamicQueryImpl0 )
assertEquals ( 3 , basicDataSource0 . getNumTestsPerEvictionRun ( ) )
assertNull ( connectionPoolModule0 . getDataSourceName ( ) )
assertEquals ( "Tomcat Connection Pool [ 1 - 176572588 ] " , xADataSource0 . getName ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( currentConnectionImpl0 )
assertNull ( dataSource0 . getPassword ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , dynamicDataSourceTargetSource0 . isStatic ( ) )
assertEquals ( false , dynamicDataSourceTargetSource0 . isStatic ( ) )
assertEquals ( false , dynamicDataSourceTargetSource0 . inOperation ( ) )
assertNull ( object0 )
assertEquals ( Operation . WRITE , dynamicDataSourceTargetSource0 . getOperation ( ) )
assertEquals ( true , dataSourceFactoryBean0 . isSingleton ( ) )
assertEquals ( "javax . sql . DataSource" , class0 . getName ( ) )
assertEquals ( 0 , pACLDataSource0 . getLoginTimeout ( ) )
assertNotNull ( pACLStatementHandler0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertEquals ( " { brand = unknown , browser = unknown , browserVersion = unknown , capabilities = { } , model = unknown , os = unknown , osVersion = unknown , pointingMethod = unknown , qwertyKeyboard = true , screenSize = { height = - 1 . 0 , width = - 1 . 0 } , tablet = false } " , unknownDevice0 . toString ( ) )
assertNotNull ( noKnownDevices0 )
assertEquals ( true , collection0 . isEmpty ( ) )
assertNull ( actionHandler0 )
assertNull ( actionHandler0 )
assertEquals ( true , beanAttributeList0 . isEmpty ( ) )
assertNotNull ( collection0 )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . ThemeModificationActionHandler" , themeModificationActionHandler0 . getType ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . ThemeModificationActionHandler" , string0 )
assertEquals ( false , collection0 . isEmpty ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . SiteRedirectActionHandler" , siteRedirectActionHandler0 . getType ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . SiteRedirectActionHandler" , siteRedirectActionHandler0 . getHandlerType ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . SiteRedirectActionHandler" , string0 )
assertEquals ( 2 , collection0 . size ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . SimpleRedirectActionHandler" , simpleRedirectActionHandler0 . getType ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . SimpleRedirectActionHandler" , string0 )
assertEquals ( false , collection0 . isEmpty ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . action . impl . LayoutTemplateModificationActionHandler" , string0 )
assertEquals ( false , collection0 . isEmpty ( ) )
assertEquals ( "com . liferay . portal . mobile . device . rulegroup . rule . impl . SimpleRuleHandler" , string0 )
assertEquals ( false , collection0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "$ ] 2_" , string0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > < methodResponse > < params > < param > < value > < string > $ ] 2_ < / string > < / value > < / param > < / params > < / methodResponse > " , string0 )
assertEquals ( "XML - RPC success $ ] 2_" , string0 )
assertEquals ( 2 , tuple0 . getSize ( ) )
assertEquals ( 2 , tuple0 . getSize ( ) )
assertNull ( response0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > < methodCall > < methodName > true < / methodName > < params > < param > < value > < boolean > 1 < / boolean > < / value > < / param > < param > < / param > < param > < / param > < / params > < / methodCall > " , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " < value > < i4 > - 22 < / i4 > < / value > " , string0 )
assertEquals ( " < value > < double > - 1001 . 0 < / double > < / value > " , string0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > < methodCall > < methodName > g9Hfp ? > ~tU\"KhlA2Y < / methodName > < params > < param > < value > < double > 1493 . 833 < / double > < / value > < / param > < / params > < / methodCall > " , string0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > < methodCall > < methodName > true < / methodName > < params > < param > < / param > < param > < value > < boolean > 0 < / boolean > < / value > < / param > < param > < / param > < / params > < / methodCall > " , string0 )
assertNotNull ( string0 )
assertEquals ( ( - 2022 ) , int0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > < methodResponse > < fault > < value > < struct > < member > < name > faultCode < / name > < value > < i4 > - 2022 < / i4 > < / value > < / member > < member > < name > faultString < / name > < value > < string > g^UwHUrN { UoTt < / string > < / value > < / member > < / struct > < / value > < / fault > < / methodResponse > " , string0 )
assertEquals ( - 2022 , faultImpl0 . getCode ( ) )
assertEquals ( "pingback" , pingbackMethodImpl0 . getToken ( ) )
assertNotNull ( pACLInitialContextFactory0 )
assertEquals ( " { active = false , hashCode = 1099297381 , servletContextName = } " , inactivePACLPolicy0 . toString ( ) )
assertEquals ( 813960263 , int0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "layout_revision" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "event" , calEventAssetRendererFactory0 . getType ( ) )
assertNull ( assetRendererFactory0 )
assertNull ( assetRendererFactory0 )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( longArray0 )
assertEquals ( "8Kum@E~W^Tn" , string0 )
assertFalse ( boolean1 = = boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( pollerRequest0 )
assertNull ( pollerHeader0 )
assertNull ( pollerHeader0 )
assertNull ( jSONObject0 )
assertNull ( message0 . getResponseDestinationName ( ) )
assertNull ( jSONObject0 )
assertEquals ( " [ ] " , vector0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( "" , pollerServlet0 . getServletInfo ( ) )
assertNotNull ( pollerRequestResponsePair0 )
assertNull ( pollerRequest0 )
assertNull ( pollerResponse0 )
assertNotNull ( pollerCometDelayedTask0 )
assertNull ( message0 . getDestinationName ( ) )
assertFalse ( pollerCometHandler1 . equals ( pollerCometHandler0 ) )
assertEquals ( CometState . STATE_OPEN , pollerCometHandler0 . getCometState ( ) )
assertEquals ( CometState . STATE_CLOSED , pollerCometHandler0 . getCometState ( ) )
assertNotNull ( pollerRequestMessageListener0 )
assertNull ( message0 . getResponseDestinationName ( ) )
assertNull ( stringArray0 )
assertEquals ( false , class1 . isArray ( ) )
assertNull ( javadocClass0 . getComment ( ) )
assertNull ( javadocClass0 . getComment ( ) )
assertEquals ( "" , javadocClass0 . getServletContextName ( ) )
assertEquals ( "" , javadocClass0 . getComment ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( javadocMethod0 . getComment ( ) )
assertNull ( javadocMethod0 . getServletContextName ( ) )
assertNull ( string0 )
assertNull ( method0 )
assertNull ( stringArray0 )
assertNull ( stringArray0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( jSONWebServiceActionMapping0 )
assertNotNull ( annotationLocator0 )
assertEquals ( 3 , list0 . size ( ) )
assertNull ( annotation0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( annotation0 )
assertNull ( inputStream0 )
assertEquals ( 118 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 0 , unsyncByteArrayInputStream0 . read ( ) )
assertNull ( mailMessage0 . getSubject ( ) )
assertNull ( string0 )
assertEquals ( "f - +  [ \"W%Uy } ] j" , mailMessage0 . getMessageId ( ) )
assertEquals ( false , mailMessage0 . getHTMLFormat ( ) )
assertEquals ( false , boolean0 )
assertNull ( internetAddress0 )
assertNotNull ( mailMessage0 )
assertEquals ( true , mailMessage0 . getHTMLFormat ( ) )
assertNotNull ( mailMessage0 )
assertEquals ( false , mailMessage0 . isHTMLFormat ( ) )
assertEquals ( false , boolean0 )
assertNull ( internetAddressArray0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( mailMessage0 )
assertNotNull ( mailMessage0 )
assertNull ( mailMessage0 . getMessageId ( ) )
assertEquals ( " < > " , internetAddress0 . toUnicodeString ( ) )
assertNotNull ( mailMessage0 )
assertEquals ( false , mailMessage0 . getHTMLFormat ( ) )
assertNull ( string0 )
assertNull ( internetAddressArray0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "a" , mailMessage0 . getBody ( ) )
assertEquals ( false , mailMessage0 . isHTMLFormat ( ) )
assertNull ( internetAddressArray0 )
assertNull ( mailMessage0 . getBody ( ) )
assertNotNull ( mailMessage0 )
assertEquals ( "f - +  [ \"W%Uy } ] j" , mailMessage0 . getBody ( ) )
assertNull ( internetAddress0 . toUnicodeString ( ) )
assertEquals ( false , mailMessage0 . isHTMLFormat ( ) )
assertNotNull ( mailMessage0 )
assertEquals ( false , iMAPAccount0 . isSecure ( ) )
assertEquals ( "smtps" , sMTPAccount0 . getProtocol ( ) )
assertNotNull ( iMAPAccount0 )
assertNotNull ( sMTPAccount0 )
assertNotNull ( iMAPAccount0 )
assertNotNull ( sMTPAccount0 )
assertEquals ( "smtps" , sMTPAccount0 . getProtocol ( ) )
assertNotNull ( iMAPAccount0 )
assertNotNull ( iMAPAccount0 )
assertEquals ( "imaps" , iMAPAccount0 . getProtocol ( ) )
assertEquals ( false , iMAPAccount0 . isSecure ( ) )
assertNotNull ( pOPAccount0 )
assertEquals ( false , pOPAccount0 . isSecure ( ) )
assertNotNull ( sMTPAccount0 )
assertNotNull ( iMAPAccount0 )
assertEquals ( 0L , gNickname0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1983L , gNickname0 . getUserId ( ) )
assertNull ( string0 )
assertEquals ( false , gGroupOwner0 . isEveryone ( ) )
assertEquals ( "" , string0 )
assertNull ( gUser0 )
assertEquals ( "" , gGroupOwner0 . getEmailAddress ( ) )
assertNull ( gGroupOwner0 . getType ( ) )
assertNull ( string0 )
assertNull ( gGroup0 )
assertEquals ( "e" , gGroupOwner0 . getType ( ) )
assertEquals ( false , boolean0 )
assertNull ( gGroup0 . getName ( ) )
assertNull ( gGroup0 . getPermissionPreset ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( gGroup0 . getName ( ) )
assertNull ( gGroup0 . getEmailAddress ( ) )
assertEquals ( "eyB^3 = v'zQ" , gGroup0 . getDescription ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( true , gGroupMember0 . isDirect ( ) )
assertNull ( string0 )
assertEquals ( " * " , gGroupMember0 . getType ( ) )
assertEquals ( false , gGroupMember0 . isDirect ( ) )
assertEquals ( false , boolean0 )
assertNull ( gGroup0 . getPermissionPreset ( ) )
assertEquals ( false , gGroupMember0 . isEveryone ( ) )
assertNull ( gUser0 )
assertNull ( gGroup0 )
assertEquals ( false , boolean0 )
assertEquals ( true , gUser0 . isAdministrator ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , gUser0 . getUserId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 545L , gUser0 . getUserId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , gUser0 . isActive ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , gUser0 . isAgreedToTermsOfUse ( ) )
assertEquals ( 0L , gUser0 . getUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ClusterEventType . DEPART , clusterEvent0 . getClusterEventType ( ) )
assertNull ( list0 )
assertEquals ( " [ ] " , linkedList0 . toString ( ) )
assertEquals ( ClusterEventType . JOIN , clusterEvent0 . getClusterEventType ( ) )
assertEquals ( ClusterEventType . DEPART , clusterEvent0 . getClusterEventType ( ) )
assertEquals ( ClusterEventType . JOIN , clusterEvent0 . getClusterEventType ( ) )
assertEquals ( ClusterEventType . DEPART , clusterEventType1 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , blockingQueue0 . size ( ) )
assertNull ( clusterNodeResponse0 )
assertNull ( clusterNodeResponse0 )
assertEquals ( 0 , clusterNodeResponses0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , futureClusterResponses0 . isDone ( ) )
assertEquals ( 2147483647 , blockingQueue0 . remainingCapacity ( ) )
assertEquals ( true , futureClusterResponses0 . isCancelled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , clusterNodeResponses0 . size ( ) )
assertEquals ( 0 , clusterNodeResponses0 . size ( ) )
assertEquals ( true , futureClusterResponses0 . isCancelled ( ) )
assertNull ( address0 )
assertEquals ( false , clusterNodeResponse0 . hasException ( ) )
assertEquals ( false , clusterNodeResponse0 . hasException ( ) )
assertEquals ( false , clusterNodeResponse0 . isMulticast ( ) )
assertNull ( clusterNodeResponse0 . getUuid ( ) )
assertNull ( clusterNode0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , clusterNodeResponse0 . isMulticast ( ) )
assertEquals ( " { clusterMessageType = EXECUTE , multicast = false , result = null , uuid = null } " , string0 )
assertEquals ( false , clusterNodeResponse0 . isMulticast ( ) )
assertNull ( object0 )
assertNotNull ( string0 )
assertEquals ( " { clusterMessageType = UPDATE , clusterNode = null , multicast = false , uuid = null } " , string0 )
assertNull ( address0 )
assertNull ( message0 . getDestinationName ( ) )
assertNotNull ( clusterNode0 )
assertEquals ( false , inet4Address1 . isMCNodeLocal ( ) )
assertEquals ( "Ine address is null" , string0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertNotNull ( clusterNode0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = null } " , message0 . toString ( ) )
assertNull ( message0 . getResponseDestinationName ( ) )
assertNull ( message0 . getResponseDestinationName ( ) )
assertEquals ( 0 , concurrentMap0 . size ( ) )
assertNull ( processOutputStream0 )
assertEquals ( false , boolean0 )
assertEquals ( "BIf ( R5 - 6DxR > ( xE" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , loggingProcessCallable0 . call ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , processOutputStream0 . toString ( ) )
assertEquals ( "" , processOutputStream0 . toString ( ) )
assertEquals ( false , cMISRepository0 . isRefreshBeforePermissionCheck ( ) )
assertNull ( cMISWebServicesRepository0 . getLogin ( ) )
assertNull ( cMISWebServicesRepository0 . getLogin ( ) )
assertEquals ( false , cMISRepository0 . isRefreshBeforePermissionCheck ( ) )
assertEquals ( true , cMISAtomPubRepository0 . isDocumentRetrievableByVersionSeriesId ( ) )
assertEquals ( true , cMISRepository0 . isDocumentRetrievableByVersionSeriesId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( cMISAtomPubRepository0 . getLogin ( ) )
assertEquals ( 1284652111765L , cMISRepository0 . getCompanyId ( ) )
assertEquals ( false , cMISWebServicesRepository0 . isRefreshBeforePermissionCheck ( ) )
assertEquals ( 0L , defaultLocalRepositoryImpl0 . getRepositoryId ( ) )
assertNull ( serviceContext0 . getRootPortletId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , folderSoap0 . getParentFolderId ( ) )
assertNull ( string0 )
assertEquals ( 0L , folderSoap0 . getRepositoryId ( ) )
assertEquals ( 0L , folderSoap0 . getPrimaryKey ( ) )
assertEquals ( ( - 12L ) , folderSoap0 . getRepositoryId ( ) )
assertEquals ( 0L , folderSoap0 . getRepositoryId ( ) )
assertEquals ( 67L , folderSoap0 . getParentFolderId ( ) )
assertNull ( folderSoap0 . getUserName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( folderSoap0 . getDescription ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , folderSoap0 . getFolderId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( folderSoap0 . getDescription ( ) )
assertEquals ( 0L , folderSoap0 . getPrimaryKey ( ) )
assertNull ( date0 )
assertNull ( folderSoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( 0L , folderSoap0 . getPrimaryKey ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNotNull ( folderSoapArray0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , fileEntrySoap0 . getRepositoryId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , fileEntrySoap0 . getVersionUserId ( ) )
assertNull ( fileEntrySoap0 . getUserName ( ) )
assertEquals ( 0L , fileEntrySoap0 . getSize ( ) )
assertEquals ( 0L , fileEntrySoap0 . getCompanyId ( ) )
assertEquals ( 0L , fileEntrySoap0 . getRepositoryId ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , fileEntrySoap0 . getGroupId ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( fileEntrySoap0 . getUuid ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( ( - 9L ) , fileEntrySoap0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( fileEntrySoap0 . getUserName ( ) )
assertNull ( string0 )
assertEquals ( 0L , fileEntrySoap0 . getGroupId ( ) )
assertEquals ( 100L , fileEntrySoap0 . getRepositoryId ( ) )
assertEquals ( 0L , fileEntrySoap0 . getRepositoryId ( ) )
assertNull ( fileEntrySoap0 . getExtension ( ) )
assertEquals ( 0L , long0 )
assertNull ( fileEntrySoap0 . getDescription ( ) )
assertEquals ( "ZK1^ { > qi" , fileEntrySoap0 . getTitle ( ) )
assertNull ( fileEntrySoap0 . getMimeType ( ) )
assertEquals ( 0L , fileEntrySoap0 . getUserId ( ) )
assertNotNull ( fileEntrySoapArray0 )
assertNotNull ( cMISRepositoryUtil0 )
assertEquals ( "" , unicodeProperties0 . toSortedString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( baseRepository0 )
assertEquals ( 0L , cMISRepository0 . getCompanyId ( ) )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( " [ , AE [ #\"cBTP , g < Y + 1 > = ' [ , AE [ #\"cBTP , g < Y + 1'" , string0 )
assertNotNull ( string0 )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , cMISDisjunction0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "CONTAINS ( '' ) " , cMISConjunction0 . toQueryFragment ( ) )
assertEquals ( "" , string0 )
assertEquals ( " ( CONTAINS ( '' ) AND CONTAINS ( '' ) ) " , cMISConjunction0 . toQueryFragment ( ) )
assertEquals ( "@u ? 4bg * InPE > = @u ? 4bg * InPE AND @u ? 4bg * InPE < @u ? 4bg * InPE" , string0 )
assertNotNull ( string0 )
assertEquals ( " ( > AND < ) " , cMISDisjunction0 . toQueryFragment ( ) )
assertEquals ( "" , string0 )
assertEquals ( "LIKE" , string0 )
assertNull ( increasableEntry0 )
assertNull ( increasableEntry0 )
assertEquals ( true , boolean0 )
assertEquals ( true , competeLatch0 . done ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , competeLatch0 . compete ( ) )
assertEquals ( true , competeLatch0 . isLocked ( ) )
assertEquals ( true , competeLatch0 . done ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 847 , int0 )
assertEquals ( ( - 2036583906 ) , int0 )
assertNotNull ( reentrantReadWriteLock_WriteLock0 )
assertEquals ( true , reentrantReadWriteLock_ReadLock0 . tryLock ( ) )
assertEquals ( false , readWriteLockKey0 . isWriteLock ( ) )
assertEquals ( true , readWriteLockKey0 . isWriteLock ( ) )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( threadPoolExecutor0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertNotNull ( concurrentLFUCache0 )
assertEquals ( true , concurrentHashSet0 . isEmpty ( ) )
assertEquals ( " [ ] " , concurrentHashSet0 . toString ( ) )
assertEquals ( 0 , concurrentHashSet0 . size ( ) )
assertNotNull ( coalescedPipe0 )
assertNotNull ( coalescedPipe0 )
assertNotNull ( coalescedPipe0 )
assertEquals ( ( - 698144475 ) , int0 )
assertEquals ( true , boolean0 )
assertNotNull ( object1 )
assertEquals ( true , readWriteLockKey0 . isWriteLock ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 1081L , thread0 . getId ( ) )
assertEquals ( false , threadPoolExecutor0 . isAllowCoreThreadTimeout ( ) )
assertEquals ( true , futureTask0 . isDone ( ) )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertNotNull ( taskQueue0 )
assertEquals ( 2 , thread0 . activeCount ( ) )
assertNull ( map0 )
assertNull ( reentrantLock0 )
assertNull ( map0 )
assertNotNull ( reentrantLock0 )
assertSame ( uRLClassLoader0 , uRLClassLoader1 )
assertEquals ( "lastDividerLocation" , string0 )
assertEquals ( "00GMT + 00 : 00" , string0 )
assertNull ( method0 )
assertEquals ( "Tue Jul 02 06 : 05 : 45 BST 2013" , string0 )
assertNotNull ( string0 )
assertEquals ( "text" , string0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertFalse ( boolean1 = = boolean0 )
assertFalse ( boolean1 = = boolean0 )
assertFalse ( boolean1 = = boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , portletDataHandlerBoolean0 . getDefaultState ( ) )
assertEquals ( true , portletDataHandlerBoolean0 . getDefaultState ( ) )
assertEquals ( false , portletDataHandlerBoolean0 . getDefaultState ( ) )
assertEquals ( false , importExportThreadLocal0 . isPortletExportInProcess ( ) )
assertEquals ( "__" , string0 )
assertEquals ( false , portletDataHandlerControl0 . isDisabled ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertEquals ( false , boolean0 )
assertNull ( portletPreferences0 )
assertNotNull ( portletDataHandlerControlArray0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "false" , string0 )
assertEquals ( "false" , portletDataHandlerChoice0 . getDefaultChoice ( ) )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( listMBeansAction0 )
assertNotNull ( getAttributesAction0 )
assertNotNull ( cacheRegistryUtil0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNull ( renderedImage0 )
assertEquals ( "" , string0 )
assertNull ( future0 )
assertNull ( renderedImage0 )
assertNotNull ( byteArray0 )
assertNotNull ( logUtil0 )
assertEquals ( false , jdk14LogImpl0 . isTraceEnabled ( ) )
assertEquals ( true , jdk14LogImpl0 . isErrorEnabled ( ) )
assertEquals ( true , jdk14LogImpl0 . isWarnEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , jdk14LogImpl0 . isFatalEnabled ( ) )
assertEquals ( true , jdk14LogImpl0 . isErrorEnabled ( ) )
assertEquals ( false , jdk14LogImpl0 . isDebugEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , logWrapper0 . isWarnEnabled ( ) )
assertNotNull ( logFactoryUtil0 )
assertEquals ( false , jdk14LogImpl0 . isTraceEnabled ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1016L , defaultWorkflowLog0 . getUserId ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( defaultWorkflowLog0 . getState ( ) )
assertEquals ( - 153 , defaultWorkflowLog0 . getType ( ) )
assertEquals ( 0L , defaultWorkflowLog0 . getWorkflowTaskId ( ) )
assertEquals ( 1221L , defaultWorkflowLog0 . getPreviousUserId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 341L ) , defaultWorkflowLog0 . getRoleId ( ) )
assertEquals ( 0L , defaultWorkflowLog0 . getAuditUserId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 258L ) , defaultWorkflowLog0 . getWorkflowLogId ( ) )
assertEquals ( " + 0" , defaultWorkflowLog0 . getState ( ) )
assertEquals ( 0L , defaultWorkflowLog0 . getRoleId ( ) )
assertNull ( date0 )
assertEquals ( 0L , defaultWorkflowLog0 . getPreviousUserId ( ) )
assertEquals ( 1L , defaultWorkflowLog0 . getWorkflowTaskId ( ) )
assertNotNull ( workflowConstants0 )
assertEquals ( "approved" , string0 )
assertEquals ( "any" , string0 )
assertEquals ( "pending" , string0 )
assertEquals ( "denied" , string0 )
assertEquals ( "draft" , string0 )
assertEquals ( "expired" , string0 )
assertEquals ( "in - trash" , string0 )
assertEquals ( "inactive" , string0 )
assertEquals ( "incomplete" , string0 )
assertEquals ( "any" , string0 )
assertEquals ( "scheduled" , string0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 4 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( 3 , int0 )
assertEquals ( 5 , int0 )
assertEquals ( 8 , int0 )
assertEquals ( 6 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 7 , int0 )
assertEquals ( 1 , defaultWorkflowInstance0 . getChildrenWorkflowInstanceCount ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( - 255 , defaultWorkflowInstance0 . getWorkflowDefinitionVersion ( ) )
assertNull ( map0 )
assertNull ( workflowInstance0 )
assertEquals ( 0 , defaultWorkflowInstance0 . getChildrenWorkflowInstanceCount ( ) )
assertEquals ( 0 , defaultWorkflowInstance0 . getChildrenWorkflowInstanceCount ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , defaultWorkflowInstance0 . getParentWorkflowInstanceId ( ) )
assertNull ( string0 )
assertEquals ( 0 , defaultWorkflowInstance0 . getChildrenWorkflowInstanceCount ( ) )
assertNull ( date0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1914L ) , defaultWorkflowInstance0 . getWorkflowInstanceId ( ) )
assertEquals ( 0 , defaultWorkflowInstance0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( workflowHandlerUtil0 )
assertEquals ( true , workflowThreadLocal0 . isEnabled ( ) )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertNull ( defaultWorkflowTask0 . getName ( ) )
assertNull ( map0 )
assertEquals ( ( - 1L ) , defaultWorkflowTask0 . getAssigneeUserId ( ) )
assertNull ( date0 )
assertEquals ( 0L , defaultWorkflowTask0 . getWorkflowInstanceId ( ) )
assertEquals ( 233 , defaultWorkflowTask0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( ( - 1L ) , defaultWorkflowTask0 . getWorkflowDefinitionId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , defaultWorkflowTask0 . getWorkflowInstanceId ( ) )
assertNull ( string0 )
assertEquals ( false , defaultWorkflowTask0 . isAssignedToSingleUser ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertNull ( date0 )
assertEquals ( true , boolean0 )
assertEquals ( ( - 1L ) , defaultWorkflowTask0 . getWorkflowTaskId ( ) )
assertEquals ( ( - 1L ) , defaultWorkflowTask0 . getAssigneeUserId ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( false , defaultWorkflowTask0 . isAsynchronous ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , defaultWorkflowTask0 . getWorkflowDefinitionVersion ( ) )
assertEquals ( false , defaultWorkflowTask0 . isAssignedToSingleUser ( ) )
assertEquals ( true , list1 . isEmpty ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( portletURL0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , defaultWorkflowDefinition0 . getTitle ( ) )
assertEquals ( "" , defaultWorkflowDefinition0 . getTitle ( ) )
assertNull ( inputStream0 )
assertNull ( map0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( "" , defaultWorkflowDefinition0 . getTitle ( ) )
assertEquals ( false , defaultWorkflowDefinition0 . isActive ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0 , defaultWorkflowDefinition0 . getVersion ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( 0 , defaultWorkflowDefinition0 . getVersion ( ) )
assertEquals ( "p . ^C4c4Jxl8 { " , defaultWorkflowDefinition0 . getTitle ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( ( - 1946L ) , long0 )
assertEquals ( ( - 1946L ) , workflowTaskAssignee0 . getAssigneeClassPK ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , baseWorkflowTaskDueDateComparator0 . isAscending ( ) )
assertEquals ( "dueDate DESC , workflowTaskId DESC" , string0 )
assertEquals ( "dueDate ASC , workflowTaskId ASC" , string0 )
assertEquals ( false , boolean0 )
assertNull ( objectName0 )
assertEquals ( " < " , environmentMBeanServer0 . getDefaultDomain ( ) )
assertEquals ( "" , mBean0 . getMBeanName ( ) )
assertEquals ( " * " , mBean0 . getDomainName ( ) )
assertEquals ( "U , fW ] Nt7JYU" , string0 )
assertEquals ( true , mBean0 . isLoaded ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertFalse ( mBean1 . equals ( mBean0 ) )
assertEquals ( " * " , mBean0 . getDomainName ( ) )
assertNotNull ( list0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( list0 )
assertEquals ( true , domain0 . isLoaded ( ) )
assertEquals ( true , boolean0 )
assertEquals ( " + ^`v6djo~mMUxFp8" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , domain0 . isLoaded ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertNotNull ( filter0 )
assertNotNull ( filter0 )
assertNotNull ( filter0 )
assertNotNull ( filter0 )
assertNull ( map0 )
assertNotNull ( filter0 )
assertNotNull ( configurationFactoryUtil0 )
assertNotNull ( version0 )
assertNotNull ( version1 )
assertTrue ( boolean1 = = boolean0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version1 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertEquals ( "10 & 42506 + " , version1 . toString ( ) )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNotNull ( version0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " } A4 . 0x~zL2IPZm - " , screenshot0 . getThumbnailURL ( ) )
assertNull ( screenshot0 . getLargeImageURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / scMlichtherle / io / archive / zipAbstGactSfxDrver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / scMlichtherle / io / archive / zipAbstGactSfxDrver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , string0 )
assertNotNull ( list0 )
assertEquals ( "de / scMlichtherle / io / archive / zipAbstGactSfxDrver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertEquals ( "de / schlichtherle / io / arhive / ziG / AbstractSfxDriver" , remotePluginPackageRepository0 . getRepositoryURL ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( true , index0 . isUnique ( ) )
assertNotNull ( dAOParamUtil0 )
assertNull ( string0 )
assertEquals ( 1 , jSPSearchEntry0 . getColspan ( ) )
assertNull ( jSPSearchEntry0 . getPath ( ) )
assertNull ( servletContext0 )
assertNull ( httpServletRequest0 )
assertEquals ( 0 , jSPSearchEntry0 . getIndex ( ) )
assertNull ( httpServletResponse0 )
assertEquals ( "N + , sgR - : " , resultRow0 . getPrimaryKey ( ) )
assertEquals ( false , resultRow0 . isBold ( ) )
assertEquals ( "1" , resultRow0 . getRowId ( ) )
assertEquals ( 525 , int0 )
assertEquals ( 525 , resultRow0 . getPos ( ) )
assertEquals ( true , resultRow0 . isSkip ( ) )
assertEquals ( 6 , resultRow0 . getPos ( ) )
assertEquals ( "QzZS ] " , resultRow0 . getPrimaryKey ( ) )
assertEquals ( 1 , resultRow0 . getPos ( ) )
assertEquals ( "526" , resultRow0 . getRowId ( ) )
assertEquals ( " - 310" , resultRow0 . getPrimaryKey ( ) )
assertEquals ( 14 , resultRow0 . getPos ( ) )
assertEquals ( 0 , resultRow0 . getPos ( ) )
assertEquals ( 525 , resultRow0 . getPos ( ) )
assertNotNull ( string0 )
assertEquals ( true , resultRow0 . isBold ( ) )
assertEquals ( 308 , resultRow0 . getPos ( ) )
assertEquals ( 6 , resultRow0 . getPos ( ) )
assertEquals ( 6 , resultRow0 . getPos ( ) )
assertEquals ( 1 , resultRow0 . getPos ( ) )
assertEquals ( false , resultRow0 . isBold ( ) )
assertEquals ( false , resultRow0 . isBold ( ) )
assertEquals ( 0 , resultRow0 . getPos ( ) )
assertEquals ( 68 , resultRow0 . getPos ( ) )
assertEquals ( true , resultRow0 . isRestricted ( ) )
assertEquals ( 0 , resultRow0 . getPos ( ) )
assertEquals ( 308 , resultRow0 . getPos ( ) )
assertEquals ( 308 , resultRow0 . getPos ( ) )
assertEquals ( " - 2010" , resultRow0 . getRowId ( ) )
assertEquals ( "QzZS ] " , resultRow0 . getPrimaryKey ( ) )
assertEquals ( "SansSerif" , resultRow0 . getPrimaryKey ( ) )
assertEquals ( "1" , resultRow0 . getRowId ( ) )
assertEquals ( "15" , resultRow0 . getRowId ( ) )
assertEquals ( " - 1860" , resultRow0 . getPrimaryKey ( ) )
assertEquals ( "k8CjU" , resultRow0 . getRowId ( ) )
assertEquals ( 831 , resultRow0 . getPos ( ) )
assertEquals ( true , resultRow0 . isBold ( ) )
assertEquals ( 0 , resultRow0 . getPos ( ) )
assertEquals ( false , resultRow0 . isBold ( ) )
assertEquals ( false , resultRow0 . isBold ( ) )
assertEquals ( true , resultRow0 . isBold ( ) )
assertEquals ( true , resultRow0 . isBold ( ) )
assertEquals ( "cacheLevelFull" , resultRow0 . getPrimaryKey ( ) )
assertEquals ( "middle" , textSearchEntry0 . getTitle ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "n3" , textSearchEntry0 . getTarget ( ) )
assertEquals ( "middle" , textSearchEntry0 . getName ( ) )
assertNull ( map0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 5 , buttonSearchEntry0 . getIndex ( ) )
assertEquals ( 1 , int0 )
assertNotNull ( string0 )
assertEquals ( "left" , buttonSearchEntry0 . getAlign ( ) )
assertEquals ( - 1577 , buttonSearchEntry0 . getColspan ( ) )
assertEquals ( 1 , buttonSearchEntry0 . getColspan ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "" , buttonSearchEntry0 . getCssClass ( ) )
assertEquals ( "middle" , buttonSearchEntry0 . getValign ( ) )
assertEquals ( " / ; " , buttonSearchEntry0 . getValign ( ) )
assertEquals ( "v" , string0 )
assertNull ( string0 )
assertEquals ( 0 , queryPos0 . getPos ( ) )
assertNull ( customSQLParam0 . getSQL ( ) )
assertNotNull ( dynamicQueryImpl0 )
assertEquals ( - 1 , queryDefinition0 . getStart ( ) )
assertEquals ( true , queryDefinition0 . isExcludeStatus ( ) )
assertEquals ( - 1 , queryDefinition0 . getStatus ( ) )
assertEquals ( - 1203 , queryDefinition0 . getStart ( ) )
assertEquals ( 0 , queryDefinition0 . getEnd ( ) )
assertEquals ( 0 , queryDefinition0 . getStatus ( ) )
assertEquals ( - 1 , queryDefinition0 . getEnd ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( - 1 , queryDefinition0 . getEnd ( ) )
assertEquals ( false , queryDefinition0 . isExcludeStatus ( ) )
assertEquals ( true , queryDefinition0 . isExcludeStatus ( ) )
assertEquals ( - 1 , queryDefinition0 . getEnd ( ) )
assertEquals ( - 1 , queryDefinition0 . getStart ( ) )
assertEquals ( - 1 , queryDefinition0 . getStatus ( ) )
assertNotNull ( dataAccess0 )
assertNotNull ( dataSourceFactoryUtil0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertEquals ( 0L , outputBlob0 . length ( ) )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertNotNull ( byteArray0 )
assertNotNull ( outputBlob0 )
assertNotNull ( outputBlob0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( " { brand = unknown , browser = unknown , browserVersion = unknown , capabilities = { } , model = unknown , os = unknown , osVersion = unknown , pointingMethod = unknown , qwertyKeyboard = true , screenSize = { height = - 1 . 0 , width = - 1 . 0 } , tablet = false } " , string0 )
assertNotNull ( versionableName0 )
assertNotNull ( versionableName0 )
assertNotNull ( versionableName0 )
assertEquals ( " { name = unknown , versions = [ unknown ] } " , versionableName0 . toString ( ) )
assertNotNull ( versionableName0 )
assertEquals ( false , boolean0 )
assertNotNull ( versionableName0 )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( ( - 284840886 ) , int0 )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 500 . 38235F ) , float0 , 0 . 01F )
assertNotNull ( string0 )
assertEquals ( ( - 500 . 38235F ) , float0 , 0 . 01F )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( true , collection0 . isEmpty ( ) )
assertNull ( ruleHandler0 )
assertNotNull ( jNDIUtil0 )
assertEquals ( 0 , unsyncByteArrayOutputStream0 . size ( ) )
assertNotNull ( consoleTestUtil0 )
assertEquals ( ( - 3 . 5483020430479355 ) , ( - 3 . 5483020430479355 ) )
assertEquals ( ( Map < String , ? > ) hashMap0 , ( Map < String , ? > ) hashMap0 )
assertEqualsIgnoreCase ( ( String ) null , ( String ) null )
assertEqualsIgnoreCase ( "KrPdb0 < Js } 9Ly`1x" , "KrPdb0 < Js } 9Ly`1x" )
assertEqualsSorted ( ( String [ ] ) null , ( String [ ] ) null )
assertEqualsSorted ( stringArray0 , stringArray0 )
assertLessThan ( ( - 1 . 0 ) , ( - 1 . 0 ) )
assertLessThan ( ( double ) ( byte ) ( - 94 ) , ( - 2 . 308130484154668 ) )
assertNotNull ( jDKLoggerTestUtil0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "java . lang . Class" , class1 . getName ( ) )
assertNull ( object0 )
assertNotNull ( testContext0 )
assertNull ( method0 )
assertEquals ( 1 , linkedList0 . size ( ) )
assertEquals ( 193L , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( " { chunkId = h , parameterMap = { } , pollerHeader = null , portletId = h , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertEquals ( " { chunkId = m / fkeLP , parameterMap = { } , pollerHeader = { _browserKey = - 1 , companyId = - 1 , portletIdsMap = { } , startPolling = false , timestamp = 0 , userId = - 1 } , portletId = m / fkeLP , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertEquals ( " { chunkId = } , parameterMap = null , pollerHeader = null , portletId = } , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertEquals ( " { chunkId = null , parameterMap = { } , pollerHeader = null , portletId = null , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( " { chunkId = W , @ ; Id > , parameterMap = { } , pollerHeader = { _browserKey = 193 , companyId = 193 , portletIdsMap = null , startPolling = false , timestamp = 0 , userId = 193 } , portletId = W , @ ; Id > , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertEquals ( false , pollerRequest0 . isReceiveRequest ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , pollerRequest0 . isReceiveRequest ( ) )
assertEquals ( true , pollerRequest0 . isReceiveRequest ( ) )
assertEquals ( false , boolean0 )
assertEquals ( " { chunkId = ox + < t & Ay + 6 : hB^' | , parameterMap = { } , pollerHeader = null , portletId = null , receiveRequest = false } " , pollerRequest0 . toString ( ) )
assertEquals ( 1224027891 , int0 )
assertEquals ( "l$ ! " , string0 )
assertEquals ( " { a" , defaultPollerResponse0 . getPortletId ( ) )
assertNotNull ( pollerHeader1 )
assertEquals ( "l$ ! " , defaultPollerResponse0 . getPortletId ( ) )
assertEquals ( " - x$653 ? f" , defaultPollerResponse0 . getPortletId ( ) )
assertEquals ( true , defaultPollerResponse0 . isEmpty ( ) )
assertEquals ( true , defaultPollerResponse0 . isEmpty ( ) )
assertEquals ( true , defaultPollerResponse0 . isEmpty ( ) )
assertEquals ( " { _browserKey = 1769 , companyId = 1873 , portletIdsMap = { } , startPolling = false , timestamp = 0 , userId = - 865 } " , pollerHeader0 . toString ( ) )
assertEquals ( " { _browserKey = 1190 , companyId = 0 , portletIdsMap = { } , startPolling = true , timestamp = 0 , userId = 1190 } " , pollerHeader0 . toString ( ) )
assertEquals ( " { _browserKey = 1769 , companyId = 1873 , portletIdsMap = { } , startPolling = false , timestamp = 0 , userId = - 865 } " , pollerHeader0 . toString ( ) )
assertEquals ( " { _browserKey = 1 , companyId = 292 , portletIdsMap = { } , startPolling = true , timestamp = 0 , userId = 0 } " , pollerHeader0 . toString ( ) )
assertEquals ( " { _browserKey = 1 , companyId = 292 , portletIdsMap = { } , startPolling = true , timestamp = 0 , userId = 0 } " , pollerHeader0 . toString ( ) )
assertEquals ( true , pollerHeader0 . isStartPolling ( ) )
assertEquals ( " { _browserKey = - 1376 , companyId = 1353 , portletIdsMap = null , startPolling = false , timestamp = 0 , userId = - 1376 } " , pollerHeader0 . toString ( ) )
assertEquals ( "STATE_OPEN" , cometState0 . toString ( ) )
assertEquals ( CometState . STATE_OPEN , pollerCometHandler0 . getCometState ( ) )
assertNull ( cometSession0 )
assertEquals ( CometState . STATE_CLOSED , pollerCometHandler0 . getCometState ( ) )
assertNull ( cometHandler0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNull ( list0 )
assertEquals ( "" , blogsEntryTrashHandler0 . getRootContainerModelName ( ) )
assertEquals ( "deleted - in - x" , string0 )
assertEquals ( "deleted - in - x" , blogsEntryTrashHandler0 . getDeleteMessage ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , mBThreadTrashHandler0 . getRootContainerModelName ( ) )
assertNull ( containerModel0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertNotNull ( base64InputStream0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( base64InputStream0 )
assertEquals ( false , limitedInputStream0 . markSupported ( ) )
assertNotNull ( limitedInputStream0 )
assertEquals ( false , limitedInputStream0 . markSupported ( ) )
assertNotNull ( limitedInputStream0 )
assertNotNull ( limitedInputStream0 )
assertNotNull ( limitedInputStream0 )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertNotNull ( limitedInputStream0 )
assertNotNull ( limitedInputStream0 )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertNotNull ( limitedInputStream0 )
assertNotNull ( limitedInputStream0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( fileArray0 )
assertNotNull ( fileArray0 )
assertEquals ( 10 , byteArrayOutputStream0 . size ( ) )
assertEquals ( "UTF - 8" , outputStreamWriter0 . getEncoding ( ) )
assertEquals ( "UTF - 8" , outputStreamWriter0 . getEncoding ( ) )
assertEquals ( "UTF - 8" , string0 )
assertEquals ( " ) " , byteArrayOutputStream0 . toString ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( "UTF - 8" , string0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( false , readerInputStream0 . markSupported ( ) )
assertNotNull ( readerInputStream0 )
assertNotNull ( readerInputStream0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , charArrayReader0 . read ( ) )
assertNotNull ( bigEndianCodec0 )
assertEquals ( '\u0000' , char0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 8 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 12 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( base64OutputStream0 )
assertNotNull ( base64OutputStream0 )
assertEquals ( 8 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( writer0 )
assertEquals ( "UTF - 8" , string0 )
assertEquals ( "UTF - 8" , writerOutputStream0 . getEncoding ( ) )
assertEquals ( "UTF - 8" , writerOutputStream0 . getEncoding ( ) )
assertNotNull ( writerOutputStream0 )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000" , stringWriter0 . toString ( ) )
assertEquals ( "J" , stringWriter0 . toString ( ) )
assertEquals ( 4 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 5 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 6 , byteArrayOutputStream0 . size ( ) )
assertEquals ( "0\n" , stringWriter0 . toString ( ) )
assertEquals ( 2 , byteArrayOutputStream0 . size ( ) )
assertEquals ( "3" , stringWriter0 . toString ( ) )
assertEquals ( "51 . 0\n" , stringWriter0 . toString ( ) )
assertEquals ( " / mnt / fastdata / ac1gf / SF110 / dist / 108_liferay / Xu\n" , stringWriter0 . toString ( ) )
assertEquals ( 3 , byteArrayOutputStream0 . size ( ) )
assertEquals ( "null" , byteArrayOutputStream0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( false , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( 2 , dataOutputStream0 . size ( ) )
assertEquals ( 5 , byteArrayOutputStream0 . size ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( true , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( 2 , charArrayWriter0 . size ( ) )
assertEquals ( 0 , charArrayWriter0 . size ( ) )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000" , charArrayWriter0 . toString ( ) )
assertEquals ( " . zip . zip" , charArrayWriter0 . toString ( ) )
assertEquals ( 2 , charArrayWriter0 . size ( ) )
assertEquals ( " . zip . zip" , charArrayWriter0 . toString ( ) )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertEquals ( 0 , unsyncCharArrayWriter0 . size ( ) )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertEquals ( "" , unsyncCharArrayWriter0 . toString ( ) )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertEquals ( 0 , unsyncCharArrayWriter0 . size ( ) )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertNotNull ( unsyncCharArrayWriter0 )
assertEquals ( - 1 , unsyncCharArrayReader0 . read ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , unsyncCharArrayReader0 . read ( ) )
assertNotNull ( unsyncCharArrayReader0 )
assertEquals ( 0 , int0 )
assertEquals ( false , unsyncCharArrayReader0 . ready ( ) )
assertNotNull ( unsyncCharArrayReader0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , unsyncCharArrayReader0 . markSupported ( ) )
assertEquals ( 0 , unsyncCharArrayReader0 . read ( ) )
assertNotNull ( unsyncCharArrayReader0 )
assertEquals ( - 1 , unsyncCharArrayReader0 . read ( ) )
assertEquals ( 6 , charArrayWriter0 . size ( ) )
assertEquals ( 1 , charArrayWriter0 . size ( ) )
assertNotNull ( unsyncBufferedWriter0 )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" , charArrayWriter0 . toString ( ) )
assertEquals ( 3 , charArrayWriter0 . size ( ) )
assertEquals ( 10 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( unsyncBufferedOutputStream0 )
assertEquals ( 15 , byteArrayOutputStream0 . size ( ) )
assertEquals ( 1 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( unsyncStringWriter0 )
assertNotNull ( stringBundler0 )
assertEquals ( "~" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "" , string0 )
assertNotNull ( unsyncStringWriter1 )
assertNotNull ( unsyncStringWriter0 )
assertNotNull ( unsyncStringWriter0 )
assertNotNull ( unsyncStringWriter1 )
assertNotNull ( unsyncStringWriter0 )
assertEquals ( "" , string0 )
assertEquals ( "" , unsyncStringWriter0 . toString ( ) )
assertNotNull ( unsyncStringWriter0 )
assertEquals ( "~" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "\uF9CB" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "null" , unsyncStringWriter0 . toString ( ) )
assertEquals ( "" , unsyncStringWriter0 . toString ( ) )
assertNotNull ( unsyncStringWriter0 )
assertEquals ( 125 , unsyncStringReader0 . read ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 125 , unsyncStringReader0 . read ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 69 , unsyncStringReader0 . read ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , unsyncStringReader0 . read ( ) )
assertEquals ( 78 , unsyncStringReader0 . read ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , unsyncStringReader0 . ready ( ) )
assertEquals ( 64 , unsyncStringReader0 . read ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 1 , unsyncStringReader0 . read ( ) )
assertNotNull ( unsyncBufferedReader0 )
assertNotNull ( unsyncBufferedReader0 )
assertEquals ( true , unsyncBufferedReader0 . markSupported ( ) )
assertEquals ( - 1 , unsyncBufferedReader0 . read ( ) )
assertEquals ( true , unsyncBufferedReader0 . ready ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertNull ( string0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertNotNull ( unsyncBufferedReader0 )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertEquals ( 5 , unsyncFilterInputStream0 . available ( ) )
assertEquals ( 0 , unsyncFilterInputStream0 . available ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( unsyncBufferedInputStream0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( true , unsyncBufferedInputStream0 . markSupported ( ) )
assertEquals ( true , unsyncBufferedInputStream0 . markSupported ( ) )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( unsyncBufferedInputStream0 )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( unsyncBufferedInputStream0 )
assertEquals ( 0 , byteArrayInputStream0 . available ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertEquals ( 0 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 2 , unsyncByteArrayInputStream0 . available ( ) )
assertEquals ( - 1 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 0 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 0 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 7 , unsyncByteArrayInputStream0 . available ( ) )
assertEquals ( 1 , unsyncByteArrayInputStream0 . available ( ) )
assertEquals ( - 1 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( - 1 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( 1 , unsyncByteArrayInputStream0 . available ( ) )
assertEquals ( 0 , unsyncByteArrayInputStream0 . read ( ) )
assertEquals ( "\u0000\u0000" , byteArrayOutputStream0 . toString ( ) )
assertEquals ( 1 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( rollingChecksum0 )
assertNotNull ( rollingChecksum0 )
assertNotNull ( rollingChecksum0 )
assertNotNull ( rollingChecksum0 )
assertNotNull ( rollingChecksum0 )
assertNotNull ( rollingChecksum0 )
assertNotNull ( deltaUtil0 )
assertNotNull ( byteChannelWriter0 )
assertNotNull ( byteChannelReader0 )
assertEquals ( false , boolean0 )
assertNotNull ( byteChannelReader0 )
assertNotNull ( byteChannelReader0 )
assertNotNull ( byteChannelReader0 )
assertNotNull ( byteChannelReader0 )
assertNotNull ( byteChannelReader0 )
assertEquals ( false , byteChannelReader0 . hasRemaining ( ) )
assertNotNull ( byteChannelReader0 )
assertEquals ( 0 , byteChannelReader0 . remaining ( ) )
assertEquals ( false , byteChannelReader0 . hasRemaining ( ) )
assertNotNull ( byteChannelReader0 )
assertNotNull ( byteChannelReader0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( Level . MEDIUM , level1 )
assertEquals ( Level . OFF , level0 )
assertNull ( baseDataSample0 . getUser ( ) )
assertEquals ( "" , baseDataSample0 . getNamespace ( ) )
assertEquals ( 0L , baseDataSample0 . getDuration ( ) )
assertNull ( baseDataSample0 . getDescription ( ) )
assertEquals ( false , hashMap0 . isEmpty ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( ( - 1L ) , countStatistics0 . getCount ( ) )
assertEquals ( 0L , countStatistics0 . getCount ( ) )
assertEquals ( ( - 96L ) , countStatistics0 . getCount ( ) )
assertEquals ( 1L , countStatistics0 . getCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , averageStatistics0 . getAverageTime ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 2L , averageStatistics0 . getCount ( ) )
assertEquals ( ( - 15L ) , averageStatistics0 . getAverageTime ( ) )
assertEquals ( 2L , averageStatistics0 . getCount ( ) )
assertEquals ( 711L , averageStatistics0 . getLastTime ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 1L , requestStatistics0 . getRequestCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( "" , string0 )
assertEquals ( 1L , requestStatistics0 . getRequestCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 1L , requestStatistics0 . getRequestCount ( ) )
assertEquals ( 0L , requestStatistics0 . getAverageTime ( ) )
assertEquals ( "" , requestStatistics0 . getName ( ) )
assertEquals ( 198L , baseStatistics0 . getMaxTime ( ) )
assertEquals ( 0L , baseStatistics0 . getLowerBound ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 1L , baseStatistics0 . getLastTime ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 1234L , baseStatistics0 . getStartTime ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , baseStatistics0 . getLastTime ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , baseStatistics0 . getMaxTime ( ) )
assertEquals ( "X" , string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , baseStatistics0 . getMinTime ( ) )
assertEquals ( 1L , baseStatistics0 . getMinTime ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , baseStatistics0 . getLastTime ( ) )
assertNotNull ( classNameUtil0 )
assertEquals ( "" , string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , channelImpl0 . getUserId ( ) )
assertEquals ( 0L , channelImpl0 . getCompanyId ( ) )
assertEquals ( 0L , channelImpl0 . getCompanyId ( ) )
assertEquals ( 0L , channelImpl0 . getUserId ( ) )
assertEquals ( 0L , channelImpl0 . getCompanyId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertSame ( softReference1 , softReference0 )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 10 , int0 )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 1 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 1 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 1 , jobState0 . getExceptionsMaxSize ( ) )
assertNotNull ( jobState1 )
assertNotSame ( jobState1 , jobState0 )
assertNotNull ( objectValuePairArray0 )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertEquals ( 10 , jobState0 . getExceptionsMaxSize ( ) )
assertEquals ( 1372741291269L , date0 . getTime ( ) )
assertEquals ( 1372741291452L , date0 . getTime ( ) )
assertEquals ( " { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } " , intervalTrigger0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = null , trigger = null , triggerType = null , triggerValue = } " , string0 )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = null , trigger = null , triggerType = null , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertNull ( schedulerEntryImpl0 . getTimeUnit ( ) )
assertNull ( schedulerEntryImpl0 . getTimeUnit ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " - 4" , schedulerEntryImpl0 . getTriggerValue ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = null , trigger = null , triggerType = null , triggerValue = - 1547 } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = minute , trigger = { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } , triggerType = SIMPLE , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( "" , schedulerEntryImpl0 . getEventListenerClass ( ) )
assertNull ( schedulerEntryImpl0 . getTimeUnit ( ) )
assertNull ( messageListener0 )
assertEquals ( "" , string0 )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = null , trigger = { cronText = , { endDate = null , groupName = , jobName = , startDate = null , triggerType = CRON } } , triggerType = CRON , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = day , trigger = { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } , triggerType = SIMPLE , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = hour , trigger = { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } , triggerType = SIMPLE , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = second , trigger = { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } , triggerType = SIMPLE , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( " , description = , eventListener = null , eventListenerClass = , propertyKey = , timeUnit = week , trigger = { interval = 0 , { endDate = null , groupName = , jobName = , startDate = null , triggerType = SIMPLE } } , triggerType = SIMPLE , triggerValue = } " , schedulerEntryImpl0 . toString ( ) )
assertEquals ( 1372741007869L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372741026222L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741044128 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 5 , HOUR_OF_DAY = 5 , MINUTE = 57 , SECOND = 24 , MILLISECOND = 128 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741067222 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 5 , HOUR_OF_DAY = 5 , MINUTE = 57 , SECOND = 47 , MILLISECOND = 222 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741084591 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 5 , HOUR_OF_DAY = 5 , MINUTE = 58 , SECOND = 4 , MILLISECOND = 591 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741102416 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 5 , HOUR_OF_DAY = 5 , MINUTE = 58 , SECOND = 22 , MILLISECOND = 416 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741120498 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 5 , HOUR_OF_DAY = 5 , MINUTE = 58 , SECOND = 40 , MILLISECOND = 498 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372741138462L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372741174389L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372741192620L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741210803 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 6 , HOUR_OF_DAY = 6 , MINUTE = 0 , SECOND = 10 , MILLISECOND = 803 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741228930 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB - Eire\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB - Eire , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 6 , HOUR_OF_DAY = 6 , MINUTE = 0 , SECOND = 28 , MILLISECOND = 930 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "day" , string0 )
assertEquals ( TimeUnit . DAY , timeUnit0 )
assertEquals ( TimeUnit . HOUR , timeUnit0 )
assertEquals ( TimeUnit . MINUTE , timeUnit0 )
assertEquals ( TimeUnit . SECOND , timeUnit0 )
assertEquals ( TimeUnit . WEEK , timeUnit0 )
assertEquals ( 0 , triggerType0 . ordinal ( ) )
assertEquals ( TriggerType . CRON , cronTrigger0 . getTriggerType ( ) )
assertNull ( date0 )
assertEquals ( "" , string0 )
assertNull ( date0 )
assertEquals ( "89rqXNAq5fX3" , intervalTrigger0 . getGroupName ( ) )
assertEquals ( TriggerType . SIMPLE , intervalTrigger0 . getTriggerType ( ) )
assertEquals ( "# ! xFr : " , cronTrigger0 . getTriggerContent ( ) )
assertEquals ( "" , cronTrigger0 . getTriggerContent ( ) )
assertEquals ( " { cronText = , { endDate = null , groupName = , jobName = , startDate = null , triggerType = CRON } } " , string0 )
assertEquals ( "" , string0 )
assertNotNull ( jobStateSerializeUtil0 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( triggerFactoryUtil0 )
assertEquals ( 1372742601945L , date0 . getTime ( ) )
assertEquals ( 1372742602087L , date0 . getTime ( ) )
assertEquals ( 1372741269348L , date0 . getTime ( ) )
assertNotNull ( string0 )
assertEquals ( "W9 = ( Pp%uCi09zBH" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( lDAPUtil0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( object0 )
assertNull ( stringArray0 )
assertSame ( object1 , object0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "AcceleratorKey" , string0 )
assertNotNull ( string0 )
assertEquals ( "groovy . inspect . swingui . TreeNodeBuildingNodeOperation$_collectConstructorData_closure5" , string0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNull ( stringArray0 )
assertNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( " { fieldName = SO` - | , 34O | %X , type = 193 , reverse = true } " , sort0 . toString ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " { fieldName = SO` - | , 34O | %X , type = 0 , reverse = true } " , sort0 . toString ( ) )
assertEquals ( true , sort0 . isReverse ( ) )
assertEquals ( true , sort0 . isReverse ( ) )
assertEquals ( false , sort0 . isReverse ( ) )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( "\" C , n#ADFD" , field0 . getName ( ) )
assertEquals ( "t ) #77OUOr86F | P ) \"" , field0 . getValue ( ) )
assertEquals ( "t ) #77OUOr86F | P ) \"" , field0 . getValue ( ) )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( "t ) #77OUOr86F | P ) \"" , field0 . getName ( ) )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( ( - 17 . 502453F ) , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( " , Z , Yc9" , field0 . getName ( ) )
assertEquals ( 1 . 0F , field0 . getBoost ( ) , 0 . 01F )
assertEquals ( false , boolean0 )
assertNull ( indexSearcher0 )
assertNull ( string0 )
assertNull ( baseSearchEngine1 . getVendor ( ) )
assertNull ( indexWriter0 )
assertEquals ( false , boolean0 )
assertEquals ( false , dummyIndexer0 . isFilterSearch ( ) )
assertEquals ( "" , string0 )
assertNull ( hits0 )
assertNotNull ( indexerPostProcessorArray0 )
assertNull ( summary0 )
assertEquals ( false , dummyIndexer0 . isStagingAware ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , dummyIndexer0 . isFilterSearch ( ) )
assertNull ( booleanQuery0 )
assertEquals ( "" , string0 )
assertEquals ( false , dummyIndexer0 . isStagingAware ( ) )
assertEquals ( false , dummyIndexer0 . isStagingAware ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , dummyIndexer0 . isStagingAware ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , dummyIndexer0 . isPermissionAware ( ) )
assertEquals ( false , dummyIndexer0 . isPermissionAware ( ) )
assertNull ( document0 )
assertEquals ( false , boolean0 )
assertEquals ( false , dummyIndexer0 . isFilterSearch ( ) )
assertNull ( booleanQuery0 )
assertEquals ( false , documentComparatorOrderBy0 . isAsc ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , documentComparatorOrderBy0 . isCaseSensitive ( ) )
assertNotNull ( sortArray0 )
assertNotNull ( sortArray0 )
assertEquals ( " { fieldName = & _r ) O [ . = | ) tT < lwnn : , type = 1121 , reverse = true } " , sort0 . toString ( ) )
assertNotNull ( sort0 )
assertEquals ( " { fieldName = ( 9'N@k . 1d , type = 3 , reverse = false } " , sort0 . toString ( ) )
assertNotNull ( sortArray0 )
assertEquals ( " { fieldName = ( 9'N@k . 1d , type = 15 , reverse = false } " , sort0 . toString ( ) )
assertNotNull ( sortArray0 )
assertNotNull ( sortArray0 )
assertNotNull ( sortArray0 )
assertNotNull ( searchContextFactory0 )
assertNull ( documentArray0 )
assertNotNull ( stringArray0 )
assertEquals ( ( - 925 . 0F ) , hitsImpl0 . getSearchTime ( ) , 0 . 01F )
assertNotNull ( floatArray0 )
assertEquals ( 0 , hitsImpl0 . getLength ( ) )
assertNull ( query0 )
assertEquals ( 0 , hitsImpl0 . getLength ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , hitsImpl0 . getLength ( ) )
assertEquals ( 0L , hitsImpl0 . getStart ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 925 , hitsImpl0 . getLength ( ) )
assertEquals ( 1053L , hitsImpl0 . getStart ( ) )
assertEquals ( 0L , hitsImpl0 . getStart ( ) )
assertNull ( stringArray0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertNull ( string0 )
assertEquals ( "" , defaultSearchEngineConfigurator0 . getDefaultSearchEngineId ( ) )
assertNull ( defaultSearchEngineConfigurator0 . getDefaultSearchEngineId ( ) )
assertNull ( defaultSearchEngineConfigurator0 . getDefaultSearchEngineId ( ) )
assertNull ( indexWriter0 )
assertNull ( defaultSearchEngineConfigurator0 . getDefaultSearchEngineId ( ) )
assertNotNull ( instrumentingClassLoader0 )
assertNull ( messageBus0 )
assertNull ( indexSearcher0 )
assertEquals ( false , indexerWrapper0 . isPermissionAware ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "" , indexerWrapper0 . getPortletId ( ) )
assertNull ( summary0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertNull ( hits0 )
assertEquals ( false , indexerWrapper0 . isFilterSearch ( ) )
assertEquals ( false , indexerWrapper0 . isStagingAware ( ) )
assertNull ( booleanQuery0 )
assertNull ( document0 )
assertEquals ( false , indexerWrapper0 . isStagingAware ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0L , searchContext0 . getUserId ( ) )
assertNull ( booleanQuery0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , indexerWrapper0 . isFilterSearch ( ) )
assertEquals ( false , indexerWrapper0 . isFilterSearch ( ) )
assertNotNull ( indexerPostProcessorArray0 )
assertSame ( stringQueryImpl1 , stringQueryImpl0 )
assertEquals ( "HQ" , string0 )
assertNotNull ( termRangeQueryFactoryUtil0 )
assertEquals ( 12447 , summary0 . getMaxContentLength ( ) )
assertNull ( portletURL0 )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , summary0 . getTitle ( ) )
assertEquals ( "" , summary0 . getContent ( ) )
assertEquals ( "" , summary0 . getTitle ( ) )
assertNull ( locale0 )
assertEquals ( 20 , summary0 . getMaxContentLength ( ) )
assertEquals ( 0 , summary0 . getMaxContentLength ( ) )
assertEquals ( 1 , summary0 . getMaxContentLength ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( 947 , searchContext0 . getStart ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertNotNull ( stringArray0 )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( 10L , searchContext0 . getCompanyId ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( ( - 588L ) , searchContext0 . getOwnerUserId ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( 947L , searchContext0 . getUserId ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( true , searchContext0 . isAndSearch ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertEquals ( - 78 , searchContext0 . getEnd ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertEquals ( true , searchContext0 . isIncludeLiveGroups ( ) )
assertNotNull ( map0 )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isIncludeStagingGroups ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertNotNull ( map0 )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertEquals ( - 1 , searchContext0 . getEnd ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertEquals ( - 1 , searchContext0 . getStart ( ) )
assertEquals ( true , searchContext0 . isScopeStrict ( ) )
assertNull ( messageBus0 )
assertNull ( pluginSearchEngineConfigurator0 . getDefaultSearchEngineId ( ) )
assertNull ( string0 )
assertNotNull ( instrumentingClassLoader0 )
assertNotNull ( termQueryFactoryUtil0 )
assertEquals ( false , multiValueFacet0 . isStatic ( ) )
assertNull ( booleanClause0 )
assertNull ( booleanClause0 )
assertNull ( simpleFacet0 . getFieldName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , rangeFacet0 . isStatic ( ) )
assertNull ( facetCollector0 )
assertNull ( string0 )
assertNull ( simpleFacet0 . getFieldName ( ) )
assertNull ( modifiedFacet0 . getFieldName ( ) )
assertNotNull ( scopeFacet0 )
assertEquals ( "groupId" , scopeFacet0 . getFieldName ( ) )
assertEquals ( false , rangeFacet0 . isStatic ( ) )
assertNotNull ( facetFactoryUtil0 )
assertNotNull ( rangeParserUtil0 )
assertEquals ( true , boolean0 )
assertEquals ( true , facetConfiguration0 . isStatic ( ) )
assertEquals ( false , boolean0 )
assertEquals ( ( - 7 . 297586798879259 ) , facetConfiguration0 . getWeight ( ) , 0 . 01D )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNull ( string0 )
assertNull ( facetConfiguration0 . getFieldName ( ) )
assertEquals ( "" , facetConfiguration0 . getOrder ( ) )
assertEquals ( 0 , jSONObjectImpl1 . length ( ) )
assertNull ( string0 )
assertNull ( facetConfiguration0 . getFieldName ( ) )
assertEquals ( false , facetConfiguration0 . isStatic ( ) )
assertNull ( facetConfiguration0 . getDisplayStyle ( ) )
assertEquals ( "OrderHitsDesc" , string0 )
assertNotNull ( facetConfigurationUtil0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "GUEST" , portletClassLoaderUtil0 . getServletContextName ( ) )
assertEquals ( "GUEST" , string0 )
assertNull ( portletBag0 )
assertNull ( portletBag0 )
assertNotNull ( charsetEncoderUtil0 )
assertNotNull ( charsetDecoderUtil0 )
assertNotNull ( string0 )
assertEquals ( - 1601 , status0 . getCode ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( " } _n . ! 0" , companyWebDAVStorageImpl0 . getRootPath ( ) )
assertEquals ( false , companyWebDAVStorageImpl0 . isSupportsClassTwo ( ) )
assertEquals ( 403 , int0 )
assertEquals ( 403 , int0 )
assertEquals ( 403 , int0 )
assertEquals ( 403 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 403 , int0 )
assertNull ( string0 )
assertNull ( lock0 )
assertNull ( status0 )
assertEquals ( 403 , status0 . getCode ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 403 , int0 )
assertNull ( webDAVStorage0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertNotNull ( liferayFilterTracker0 )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( "\u0000\u0000\u0000\u0000" , byteArrayOutputStream0 . toString ( ) )
assertEquals ( " - 1" , byteArrayOutputStream0 . toString ( ) )
assertNotNull ( string0 )
assertNotNull ( webDirDetector0 )
assertNotNull ( string0 )
assertNull ( object0 )
assertEquals ( 0 , portletServletSession0 . getMaxInactiveInterval ( ) )
assertNull ( object0 )
assertEquals ( true , boolean0 )
assertNotNull ( sessionMessages0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , portletSessionImpl0 . getLastAccessedTime ( ) )
assertEquals ( false , mockSession0 . isNew ( ) )
assertEquals ( 0L , portletServletSession0 . getLastAccessedTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "comment" , string0 )
assertNull ( object0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( mockSession0 . getId ( ) )
assertEquals ( 0 , mockSession0 . getMaxInactiveInterval ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertNotNull ( set0 )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertFalse ( nonSerializableObjectHandler0 . equals ( nonSerializableObjectHandler1 ) )
assertSame ( object0 , object1 )
assertEquals ( "07 ; + " , string0 )
assertEquals ( "" , portalDelegatorServlet0 . getServletInfo ( ) )
assertEquals ( "" , portalClassLoaderServlet0 . getServletInfo ( ) )
assertNotNull ( sessionErrors0 )
assertEquals ( 0L , mockSession0 . getCreationTime ( ) )
assertEquals ( true , boolean0 )
assertNull ( object0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertNull ( mockSession0 . getId ( ) )
assertEquals ( 0L , portletSessionImpl0 . getCreationTime ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( mockSession0 . getId ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 0 , portletSessionImpl0 . getMaxInactiveInterval ( ) )
assertNotNull ( set0 )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , set0 . size ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 0L , portletSessionImpl0 . getCreationTime ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( true , servletVersionDetector0 . is2_5 ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , stringWriter0 . toString ( ) )
assertEquals ( "0\n" , charArrayWriter0 . toString ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( "\uFB4B" , stringWriter0 . toString ( ) )
assertEquals ( 3 , charArrayWriter0 . size ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( 2 , charArrayWriter0 . size ( ) )
assertEquals ( false , pipingJspWriter0 . isAutoFlush ( ) )
assertEquals ( "1346 . 4619104543608\n" , charArrayWriter0 . toString ( ) )
assertEquals ( 0 , pipingJspWriter0 . getRemaining ( ) )
assertEquals ( 3 , charArrayWriter0 . size ( ) )
assertEquals ( " ) \n" , stringWriter0 . toString ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( " , " , stringWriter0 . toString ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( 0 , pipingJspWriter0 . getRemaining ( ) )
assertEquals ( "\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000" , charArrayWriter0 . toString ( ) )
assertEquals ( 6 , charArrayWriter0 . size ( ) )
assertEquals ( "\n" , charArrayWriter0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( true , printWriter0 . checkError ( ) )
assertEquals ( 8 , charArrayWriter0 . size ( ) )
assertEquals ( 5 , charArrayWriter0 . size ( ) )
assertEquals ( "null" , charArrayWriter0 . toString ( ) )
assertEquals ( 15 , charArrayWriter0 . size ( ) )
assertEquals ( "null\n" , stringWriter0 . toString ( ) )
assertEquals ( false , mockHttpServletRequest0 . isRequestedSessionIdFromUrl ( ) )
assertNull ( object0 )
assertSame ( mockPageContext1 , mockPageContext0 )
assertSame ( mockPageContext0 , mockPageContext1 )
assertEquals ( "MockServletContext" , mockServletContext0 . getServletContextName ( ) )
assertEquals ( true , mockJspWriter0 . isAutoFlush ( ) )
assertNull ( jspWriter0 )
assertEquals ( "" , mockServletConfig0 . getServletName ( ) )
assertNull ( object0 )
assertNull ( eLContext0 )
assertEquals ( 0L , mockHttpSession0 . getLastAccessedTime ( ) )
assertNull ( jspWriter0 )
assertNotNull ( jspFactorySwapper0 )
assertEquals ( 0 , pipingJspWriter0 . getBufferSize ( ) )
assertNotNull ( metaInfoCacheServletResponse_MetaData0 )
assertEquals ( "PLUGIN_CLASS_LOADER" , servletContextAttributeEvent0 . getName ( ) )
assertEquals ( "LU4GIN_CASS_LvADER" , servletContextAttributeEvent0 . getName ( ) )
assertEquals ( " & : UAc2H5pA ] + [ " , servletContextAttributeEvent0 . getName ( ) )
assertEquals ( "javax . faces . LIFECYCLE_ID" , servletContextAttributeEvent0 . getName ( ) )
assertEquals ( "98623202" , string0 )
assertNotNull ( header0 )
assertEquals ( "on" , string0 )
assertNotNull ( header0 )
assertNotNull ( header0 )
assertNotNull ( header0 )
assertNotNull ( header0 )
assertNotNull ( header0 )
assertEquals ( true , boolean0 )
assertFalse ( header1 . equals ( header0 ) )
assertEquals ( "7" , header0 . toString ( ) )
assertEquals ( "144" , header1 . toString ( ) )
assertNotNull ( header0 )
assertEquals ( 1 , int0 )
assertEquals ( 7 , int0 )
assertNotNull ( header0 )
assertNotNull ( string0 )
assertNotNull ( header0 )
assertNotNull ( header0 )
assertNotNull ( servletRequestUtil0 )
assertNotNull ( pipingServletResponse0 )
assertEquals ( false , unsyncPrintWriter0 . checkError ( ) )
assertEquals ( false , gzipResponseStream0 . closed ( ) )
assertNull ( httpSession0 )
assertEquals ( false , boolean0 )
assertNull ( enumeration0 )
assertNull ( object0 )
assertEquals ( 0L , long0 )
assertNull ( servletContext0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , httpSessionWrapper0 . isNew ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , httpSessionWrapper0 . getLastAccessedTime ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , pluginContextLifecycleThreadLocal0 . isDestroying ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertNull ( string0 )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertNull ( httpServletRequest0 )
assertNull ( filter0 )
assertNull ( filterConfig0 )
assertNull ( portalClassLoaderFilter1 )
assertNotNull ( invokerFilterChain0 )
assertNull ( filter0 )
assertNotSame ( invokerFilterChain0 , invokerFilterChain1 )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( true , mockChain0 . isDoFilterRun ( ) )
assertNull ( string0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertNull ( servletContext0 )
assertEquals ( "u77NndE0 ] nL | bc ) } IH" , string0 )
assertNotNull ( filterMapping0 )
assertSame ( ntlmHttpFilter0 , ntlmHttpFilter1 )
assertNotNull ( filterMapping0 )
assertEquals ( false , boolean0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertNotNull ( filterMapping0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , tagSupport0 . doStartTag ( ) )
assertEquals ( 6 , int0 )
assertNull ( tag0 )
assertNull ( tag0 )
assertNull ( tag0 )
assertNull ( tagSupport2 )
assertSame ( tagSupport0 , tagSupport1 )
assertNotNull ( fileAvailabilityUtil0 )
assertTrue ( boolean1 = = boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , baseBodyTagSupport0 . doAfterBody ( ) )
assertNull ( bodyContent0 )
assertEquals ( 2 , baseBodyTagSupport0 . doStartTag ( ) )
assertEquals ( 2 , int0 )
assertEquals ( 0 , baseBodyTagSupport0 . doAfterBody ( ) )
assertNull ( string0 )
assertNull ( breadcrumbEntry0 . getURL ( ) )
assertNull ( breadcrumbEntry0 . getTitle ( ) )
assertNull ( breadcrumbEntry0 . getTitle ( ) )
assertNull ( map0 )
assertNull ( string0 )
assertNotNull ( stringBundler0 )
assertEquals ( "" , stringBundler0 . toString ( ) )
assertEquals ( 0 , stringBundler0 . length ( ) )
assertNotNull ( set0 )
assertSame ( scriptData1 , scriptData0 )
assertSame ( scriptData0 , scriptData1 )
assertSame ( scriptData0 , scriptData2 )
assertEquals ( 16 , stringBundler0 . capacity ( ) )
assertEquals ( 0 , stringBundler0 . length ( ) )
assertNull ( stringBundler1 )
assertSame ( stringBundler1 , stringBundler0 )
assertSame ( outputData1 , outputData0 )
assertSame ( outputData1 , outputData0 )
assertSame ( outputData4 , outputData3 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( propsUtil0 )
assertNull ( class0 )
assertNull ( method0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( method0 )
assertNull ( method0 )
assertEquals ( 1063877858 , int0 )
assertEquals ( 847 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , unicodeProperties0 . isSafe ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( 1 , unicodeProperties0 . size ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( false , unicodeProperties0 . isSafe ( ) )
assertEquals ( "F & @ = F & @\n" , unicodeProperties0 . toString ( ) )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( 1 , unicodeProperties0 . size ( ) )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( 1 , unicodeProperties0 . size ( ) )
assertEquals ( 132 , int0 )
assertNotNull ( hashUtil0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 12 , int0 )
assertEquals ( 16010 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( cSVUtil0 )
assertEquals ( "\"\n\"" , string0 )
assertNull ( string0 )
assertEquals ( "\"^ , k\"" , string0 )
assertNotNull ( string0 )
assertEquals ( "9p 23$sJH < " , string0 )
assertNotNull ( string0 )
assertNotNull ( classLoaderPool0 )
assertSame ( classLoader0 , classLoader1 )
assertEquals ( "" , string0 )
assertEquals ( - 2 , integerWrapper0 . increment ( ) )
assertEquals ( 1 , integerWrapper0 . getValue ( ) )
assertEquals ( - 2 , integerWrapper0 . decrement ( ) )
assertEquals ( - 1 , integerWrapper0 . getValue ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertNotNull ( timeZoneThreadLocal0 )
assertNull ( timeZone0 )
assertEquals ( "\\u0000\\u0000" , string0 )
assertNotNull ( byteArray0 )
assertSame ( charArray1 , charArray0 )
assertNotNull ( string0 )
assertSame ( charArray1 , charArray0 )
assertEquals ( "00000000" , string0 )
assertEquals ( "0065" , string0 )
assertEquals ( "01" , string0 )
assertEquals ( "\\u0073\\u0044\\u006e\\u0061\\u0023\\u0048\\u0051\\u0022\\u007e\\u004d\\u0052\\u0063\\u0030\\u0028\\u005b\\u005b\\u005a" , string0 )
assertEquals ( false , class1 . isSynthetic ( ) )
assertEquals ( "86 + r@Z ; 74" , string0 )
assertSame ( classLoader0 , classLoader1 )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "cut - to - clipboard" , string0 )
assertNotNull ( timeZoneUtil0 )
assertEquals ( "GMT" , timeZone0 . getID ( ) )
assertEquals ( 0 , timeZone0 . getDSTSavings ( ) )
assertEquals ( 44641L , thread0 . getId ( ) )
assertNotNull ( thread0 )
assertNotNull ( sessionParamUtil0 )
assertEquals ( false , notificationThreadLocal0 . isNotificationEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertNotNull ( list0 )
assertEquals ( true , boolean0 )
assertEquals ( "^kY7 ] 0bn ( " , string0 )
assertNotNull ( stringParserFragment0 )
assertNotNull ( stringParserFragment0 )
assertNotNull ( stringParserFragment0 )
assertNotNull ( stringParserFragment0 )
assertNotNull ( stringParserFragment0 )
assertEquals ( " { ! dM`sy6 )
assertNull ( string0 )
assertEquals ( 1 , safeProperties0 . size ( ) )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( pathUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( object0 )
assertEquals ( "0052" , string0 )
assertNotNull ( unicodeFormatter0 )
assertNotNull ( string0 )
assertSame ( charArray0 , charArray1 )
assertNotNull ( charArray1 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( "" , string0 )
assertEquals ( "String is not in hex format" , string0 )
assertNotNull ( string0 )
assertEquals ( "\\u4474\\u4423\\u4465\\u4453\\u4434\\u4462" , string0 )
assertNull ( string0 )
assertNotNull ( date0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( 388 . 0F , short0 . floatValue ( ) , 0 . 01F )
assertEquals ( 0 , int0 )
assertNotNull ( paramUtil_IW0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNotNull ( paramUtil_IW0 )
assertEquals ( 0L , long0 )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertEquals ( 0 , ( int ) integer0 )
assertNull ( serviceContext0 . getPortalURL ( ) )
assertEquals ( 0 . 0F , ( float ) float1 , 0 . 01F )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertNotNull ( paramUtil_IW0 )
assertNull ( date0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( false , boolean0 )
assertNotNull ( paramUtil_IW0 )
assertEquals ( "N : $x [ D [ JzE4wBG , " , string0 )
assertNotNull ( paramUtil_IW0 )
assertEquals ( "" , string0 )
assertEquals ( 1372742317458L , date0 . getTime ( ) )
assertNotNull ( paramUtil0 )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertEquals ( 1372742317562L , date0 . getTime ( ) )
assertEquals ( ( - 1803 . 5384657526708 ) , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( ( short ) 1635 , short0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , integer0 . shortValue ( ) )
assertEquals ( ( - 19L ) , long0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( " - 1803 . 5384657526708" , double1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( "" , string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , serviceContext0 . isCommandAdd ( ) )
assertNotNull ( heapUtil0 )
assertNull ( treeNode1 )
assertEquals ( true , treeNode0 . isRootNode ( ) )
assertNotNull ( treeNode1 )
assertNotNull ( treeNode1 )
assertEquals ( true , boolean0 )
assertNotNull ( reflectionUtil0 )
assertNull ( class1 )
assertNull ( class1 )
assertNull ( classArray0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertEquals ( false , transientValue0 . isNull ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , portalClassLoaderFilter0 . isFilterEnabled ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( validator_IW0 )
assertNotNull ( validator_IW0 )
assertNull ( objectArray0 )
assertEquals ( false , iPDetector0 . isPrefersV6 ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( " / 181 . 239 . 177 . 128" , string0 )
assertNotNull ( serializableUtil0 )
assertEquals ( "9 [ xl" , string0 )
assertSame ( classArray1 , classArray0 )
assertNotNull ( string0 )
assertEquals ( "byte" , methodKey0 . getMethodName ( ) )
assertEquals ( "byteGh - com . liferay . portal . kernel . util . MethodKeycom . liferay . portal . kernel . util . MethodKey" , methodKey1 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "java . util . GregorianCalendar [ time = - 62030448000000 , areFieldsSet = true , areAllFieldsSet = false , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = ? , YEAR = 4 , MONTH = 4 , WEEK_OF_YEAR = ? , WEEK_OF_MONTH = ? , DAY_OF_MONTH = 4 , DAY_OF_YEAR = ? , DAY_OF_WEEK = ? , DAY_OF_WEEK_IN_MONTH = ? , AM_PM = 0 , HOUR = 0 , HOUR_OF_DAY = 0 , MINUTE = 0 , SECOND = 0 , MILLISECOND = ? , ZONE_OFFSET = ? , DST_OFFSET = ? ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 31 , int0 )
assertNotNull ( intArray0 )
assertEquals ( "java . util . GregorianCalendar [ time = - 29912468599000 , areFieldsSet = true , areAllFieldsSet = false , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = ? , YEAR = 1022 , MONTH = 1 , WEEK_OF_YEAR = ? , WEEK_OF_MONTH = ? , DAY_OF_MONTH = 4 , DAY_OF_YEAR = ? , DAY_OF_WEEK = ? , DAY_OF_WEEK_IN_MONTH = ? , AM_PM = 1 , HOUR = 8 , HOUR_OF_DAY = 20 , MINUTE = 56 , SECOND = 41 , MILLISECOND = ? , ZONE_OFFSET = ? , DST_OFFSET = ? ] " , gregorianCalendar0 . toString ( ) )
assertNotNull ( calendarUtil0 )
assertEquals ( 31 , int0 )
assertEquals ( 31 , int0 )
assertEquals ( 31 , int0 )
assertEquals ( 1372741887181L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 31 , int0 )
assertEquals ( 31 , int0 )
assertEquals ( 29 , int0 )
assertEquals ( 30 , int0 )
assertEquals ( 30 , int0 )
assertEquals ( 30 , int0 )
assertEquals ( 30 , int0 )
assertEquals ( 28 , int0 )
assertEquals ( 29 , int0 )
assertEquals ( ( - 576973 ) , int0 )
assertEquals ( 141824 , int0 )
assertEquals ( 6 , int0 )
assertEquals ( 7 , int0 )
assertEquals ( 1372741988502L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 4 , int0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372741999900 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 2 , minimalDaysInFirstWeek = 4 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 6 , HOUR_OF_DAY = 6 , MINUTE = 13 , SECOND = 19 , MILLISECOND = 900 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertNull ( timestamp0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 100523273400000L ) , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = - 15433372800000 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GB\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = GB , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 1480 , MONTH = 10 , WEEK_OF_YEAR = 49 , WEEK_OF_MONTH = 5 , DAY_OF_MONTH = 29 , DAY_OF_YEAR = 334 , DAY_OF_WEEK = 4 , DAY_OF_WEEK_IN_MONTH = 5 , AM_PM = 0 , HOUR = 0 , HOUR_OF_DAY = 0 , MINUTE = 0 , SECOND = 0 , MILLISECOND = 0 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( ( - 1914L ) , treeNodeView0 . getId ( ) )
assertEquals ( 479L , treeNodeView0 . getId ( ) )
assertNotNull ( string0 )
assertEquals ( ( - 1L ) , treeNodeView0 . getId ( ) )
assertEquals ( ( - 1914L ) , treeNodeView0 . getId ( ) )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( ( - 1286L ) , treeNodeView0 . getParentId ( ) )
assertEquals ( true , treeNodeView0 . isLeaf ( ) )
assertEquals ( ( - 1914L ) , treeNodeView0 . getId ( ) )
assertNotNull ( string0 )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( ( - 1L ) , treeNodeView0 . getId ( ) )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( 1 , treeNodeView0 . getDepth ( ) )
assertEquals ( "javascript : ; " , treeNodeView0 . getHref ( ) )
assertEquals ( ( - 1L ) , treeNodeView0 . getId ( ) )
assertSame ( initialThreadLocal2 , initialThreadLocal0 )
assertNotNull ( locale1 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( portalInitableUtil0 )
assertNotNull ( setUtil0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , set0 . size ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertNotNull ( set0 )
assertNotNull ( set0 )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , set0 . size ( ) )
assertNotNull ( set0 )
assertEquals ( 0 , set0 . size ( ) )
assertNotNull ( set0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( false , set0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , set0 . size ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( 1 , set0 . size ( ) )
assertNotNull ( primitiveIntList0 )
assertNotNull ( primitiveIntList0 )
assertNotNull ( primitiveIntList0 )
assertNotNull ( primitiveIntList0 )
assertNotNull ( primitiveIntList0 )
assertNull ( map0 )
assertEquals ( 0 , inheritableMap0 . size ( ) )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "Ki" , inheritableMap3 )
assertEquals ( "Ki" , inheritableMap3 )
assertNotNull ( string0 )
assertEquals ( 1 , primitiveIntSet0 . size ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , primitiveIntSet0 . size ( ) )
assertNotNull ( intArray0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertNotNull ( progressTracker0 )
assertEquals ( false , boolean0 )
assertEquals ( false , resourceBundleThreadLocal0 . isReplace ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 3 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 172506291 , int0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( stringBundler0 )
assertNotNull ( portalClassInvoker0 )
assertEquals ( "6 . 2 . 0" , string0 )
assertEquals ( "Liferay Portal Community Edition" , string0 )
assertEquals ( "Liferay , Inc . " , string0 )
assertEquals ( 6200 , int0 )
assertEquals ( "Newton" , releaseInfo0 . getCodeName ( ) )
assertEquals ( 6200 , int0 )
assertEquals ( 1372744657888L , date0 . getTime ( ) )
assertEquals ( "Newton" , string0 )
assertEquals ( "Liferay Portal Community Edition 6 . 2 . 0 CE ( Newton / Build 6200 / June 1 , 2012 ) " , string0 )
assertEquals ( "Liferay Portal Community Edition / 6 . 2 . 0" , string0 )
assertEquals ( false , memoryMultiValueMap0 . isEmpty ( ) )
assertEquals ( 1 , memoryMultiValueMap0 . size ( ) )
assertEquals ( 1 , memoryMultiValueMap0 . size ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , collection0 . size ( ) )
assertNotNull ( primitiveLongList0 )
assertNotNull ( primitiveLongList0 )
assertNotNull ( primitiveLongList0 )
assertNotNull ( primitiveLongList0 )
assertNotNull ( primitiveLongList0 )
assertEquals ( "1 Minute" , string0 )
assertNotNull ( time0 )
assertEquals ( "1 Minute" , string0 )
assertEquals ( "0 Seconds" , string0 )
assertNotNull ( string0 )
assertEquals ( "1 Month" , string0 )
assertNotNull ( string0 )
assertEquals ( "1 Day" , string0 )
assertEquals ( "1 Year" , string0 )
assertEquals ( "0 Week" , string0 )
assertNotNull ( string0 )
assertEquals ( "1 Hour" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( clearTimerThreadUtil0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( threadLocalDistributorArray0 )
assertNotNull ( threadLocalDistributorRegistry0 )
assertNotNull ( objectValuePair2 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( false , hashMap0 . isEmpty ( ) )
assertNotNull ( serviceLoader0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertEquals ( ( - 1927 . 5846005100811 ) , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 1 . 0 , double0 , 0 . 01D )
assertNotNull ( bigDecimalUtil0 )
assertNotNull ( contextPathUtil0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( " / woS" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " , CZzYR ] y4" , string0 )
assertNotNull ( floatArray0 )
assertNotNull ( intArray0 )
assertNotNull ( stringUtil0 )
assertEquals ( "0" , string0 )
assertNotNull ( string0 )
assertEquals ( "~" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "THq / " , string0 )
assertNotNull ( booleanArray0 )
assertNotNull ( string0 )
assertEquals ( "8L ] 1LBs6hS" , string0 )
assertEquals ( "Series 1 , Series 2" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( shortArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertEquals ( "iSpgorv . antwJaesarjax . " , string0 )
assertEquals ( "'THq / '" , string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertNotNull ( doubleArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( longArray0 )
assertEquals ( "null" , string0 )
assertEquals ( "0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0" , string0 )
assertEquals ( "false" , string0 )
assertNotNull ( string0 )
assertEquals ( "T ( uLa ? OY\"5YDl } P - %yE = t^fq$N > -  ) # | ^HE = t^fq$N > -  ) # | ^HE = t^fq$N > -  ) # | ^H" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "00000000000000000000" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "q / " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "9" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( longArray0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "script1000002 . groovy" , groovyClassLoader0 . generateScriptName ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( string0 )
assertEquals ( " / " , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "~" , string0 )
assertNull ( string0 )
assertEquals ( "1_ EQ' , \"" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( 16 , stringBundler0 . length ( ) )
assertEquals ( 16 , stringBundler0 . capacity ( ) )
assertNotNull ( stringBundler1 )
assertEquals ( "Zd ! sHb23AKG" , string0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNotNull ( shortArray0 )
assertNotNull ( booleanArray0 )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( 14 , int0 )
assertEquals ( "initOutArchive . en . . . " , string0 )
assertEquals ( " | JnxRPI" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( false , oSDetector0 . isAIX ( ) )
assertEquals ( "64" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , printStream0 . checkError ( ) )
assertNotNull ( propertiesUtil0 )
assertEquals ( " - - listing properties - - \n" , string0 )
assertNotNull ( properties0 )
assertNotNull ( properties0 )
assertNotNull ( properties0 )
assertEquals ( 1 , hashtable0 . size ( ) )
assertNotNull ( properties0 )
assertNotNull ( properties0 )
assertNotNull ( properties0 )
assertEquals ( 0 , properties0 . size ( ) )
assertNotNull ( properties0 )
assertNotNull ( properties0 )
assertEquals ( "" , string0 )
assertEquals ( false , safeProperties0 . isEmpty ( ) )
assertNotNull ( properties0 )
assertEquals ( ( - 1261117144389836967L ) , randomizer0 . nextLong ( ) )
assertNotNull ( instanceFactory0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( uRLCodec0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "\"q > = 8N ] PM" , string0 )
assertNotNull ( string0 )
assertEquals ( " isot ahx ch#ar" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "e%24mE%3FJV3Y2%27d%25" , string0 )
assertEquals ( "de%2Fclichtherle%2Fni%2Fchart%2FI47Chrset" , string0 )
assertEquals ( "H2%20%281%3AAP5%60q%3C" , string0 )
assertNotNull ( string0 )
assertEquals ( "%60eK%7B + b%60%7E5" , string0 )
assertEquals ( "script1000002 . groovy" , groovyClassLoader0 . generateScriptName ( ) )
assertSame ( instrumentingClassLoader1 , instrumentingClassLoader0 )
assertEquals ( false , unsyncPrintWriterPool0 . isEnabled ( ) )
assertEquals ( false , unsyncPrintWriter0 . checkError ( ) )
assertNotNull ( proxyFactory0 )
assertNull ( stringArray0 )
assertEquals ( "~ & Y [ = 'h + > fV4 { " , string0 )
assertEquals ( "~ & Y [ = 'h + > fV4 { " , string0 )
assertNotNull ( objectArray0 )
assertEquals ( " { className = ~ & Y [ = 'h + > fV4 { , methodName = ~ & Y [ = 'h + > fV4 { , arguments = [ ] } " , methodWrapper0 . getClassName ( ) )
assertNotNull ( string0 )
assertEquals ( "Coordinated Universal Time" , timeZone0 . getDisplayName ( ) )
assertEquals ( "GMT" , timeZone0 . getID ( ) )
assertEquals ( " [ { } ( ) \" * ZU^K . %#\t" , string0 )
assertNotNull ( stringParser0 )
assertNotNull ( tempFileUtil0 )
assertNotNull ( stringArray0 )
assertNotNull ( prefsParamUtil0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 4 ) , int0 )
assertEquals ( ( - 63 ) , int0 )
assertNotNull ( booleanArray1 )
assertFalse ( longArray1 . equals ( longArray0 ) )
assertNotNull ( shortArray1 )
assertNotNull ( stringArray0 )
assertFalse ( longArray1 . equals ( longArray0 ) )
assertNotNull ( byteArray1 )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertFalse ( objectArray0 . equals ( objectArray1 ) )
assertNotNull ( stringArray0 )
assertNotNull ( arrayUtil_IW0 )
assertFalse ( doubleArray1 . equals ( doubleArray0 ) )
assertSame ( longArray0 , longArray1 )
assertNotNull ( integerArray0 )
assertFalse ( intArray0 . equals ( intArray1 ) )
assertEquals ( false , boolean0 )
assertFalse ( doubleArray0 . equals ( doubleArray1 ) )
assertFalse ( byteArray1 . equals ( byteArray0 ) )
assertNotNull ( floatArray1 )
assertNotNull ( arrayUtil_IW0 )
assertEquals ( "0 . 0" , string0 )
assertFalse ( intArray1 . equals ( intArray0 ) )
assertFalse ( stringArray0 . equals ( stringArray1 ) )
assertFalse ( charArray1 . equals ( charArray0 ) )
assertFalse ( charArray1 . equals ( charArray0 ) )
assertSame ( charArray1 , charArray0 )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertFalse ( stringArray1 . equals ( stringArray0 ) )
assertNotNull ( doubleArray1 )
assertFalse ( shortArray1 . equals ( shortArray0 ) )
assertNotNull ( stringArray0 )
assertFalse ( stringArray0 . equals ( stringArray1 ) )
assertFalse ( doubleArray0 . equals ( doubleArray1 ) )
assertNotNull ( booleanArray1 )
assertSame ( objectArray1 , objectArray0 )
assertFalse ( charArray1 . equals ( charArray0 ) )
assertFalse ( integerArray0 . equals ( integerArray1 ) )
assertEquals ( false , boolean0 )
assertFalse ( intArray1 . equals ( intArray0 ) )
assertNotNull ( intArray1 )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( booleanArray1 . equals ( booleanArray0 ) )
assertNotNull ( doubleArray1 )
assertSame ( shortArray0 , shortArray1 )
assertEquals ( false , boolean0 )
assertFalse ( byteArray1 . equals ( byteArray0 ) )
assertFalse ( charArray0 . equals ( charArray1 ) )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertEquals ( false , boolean0 )
assertNotNull ( doubleArray1 )
assertNotNull ( booleanArray1 )
assertNotNull ( intArray1 )
assertFalse ( stringArray1 . equals ( stringArray0 ) )
assertSame ( byteArray0 , byteArray1 )
assertFalse ( intArray1 . equals ( intArray0 ) )
assertNotNull ( longArray1 )
assertNotNull ( objectArray1 )
assertNotNull ( stringArray0 )
assertFalse ( booleanArray0 . equals ( booleanArray1 ) )
assertNotNull ( shortArray1 )
assertFalse ( booleanArray0 . equals ( booleanArray1 ) )
assertNotNull ( stringArray0 )
assertNotNull ( byteArray1 )
assertFalse ( objectArray1 . equals ( objectArray0 ) )
assertNotNull ( stringArray0 )
assertNotNull ( characterArray0 )
assertNotNull ( stringArray0 )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertNotNull ( longArray1 )
assertEquals ( false , boolean0 )
assertNotNull ( charArray1 )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertFalse ( doubleArray1 . equals ( doubleArray0 ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertNotSame ( floatArray1 , floatArray0 )
assertFalse ( doubleArray1 . equals ( doubleArray0 ) )
assertNotNull ( floatArray1 )
assertNotNull ( longArray1 )
assertFalse ( byteArray0 . equals ( byteArray1 ) )
assertEquals ( false , boolean0 )
assertNotNull ( longArray0 )
assertFalse ( objectArray0 . equals ( objectArray1 ) )
assertFalse ( longArray0 . equals ( longArray1 ) )
assertNotNull ( arrayUtil_IW0 )
assertFalse ( shortArray0 . equals ( shortArray1 ) )
assertFalse ( longArray0 . equals ( longArray1 ) )
assertEquals ( - 1 , binarySearch0 . getLastIndex ( ) )
assertEquals ( ( - 2 ) , int0 )
assertEquals ( 0 , binarySearch0 . getLastIndex ( ) )
assertEquals ( - 1 , binarySearch0 . getLastIndex ( ) )
assertEquals ( 0 , binarySearch0 . getLastIndex ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( - 1 , binarySearch0 . getLastIndex ( ) )
assertEquals ( 0 , binarySearch0 . getLastIndex ( ) )
assertEquals ( 0 , binarySearch0 . getLastIndex ( ) )
assertNotNull ( clearThreadLocalUtil0 )
assertNotNull ( themeHelper0 )
assertEquals ( false , boolean0 )
assertNotNull ( progressTrackerThreadLocal0 )
assertEquals ( " [ - 21 , - 12 ] " , sortedArrayList0 . toString ( ) )
assertEquals ( 1 , sortedArrayList0 . size ( ) )
assertEquals ( true , weakValueConcurrentHashMap1 . isEmpty ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , weakValueConcurrentHashMap0 . size ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( weakValueConcurrentHashMap0 )
assertNull ( serializable0 )
assertNull ( reference0 )
assertEquals ( 0 , collection0 . size ( ) )
assertEquals ( 1 , primitiveLongSet0 . size ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , primitiveLongSet0 . size ( ) )
assertNotNull ( longArray0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertNull ( object0 )
assertEquals ( "ActionCommandKey" , string0 )
assertNotNull ( propertiesParamUtil0 )
assertEquals ( "" , string0 )
assertNotNull ( proxyUtil0 )
assertNotNull ( camelCaseUtil0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "jy Y`gMzFrzq" , string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( "dueDate DESC , workflowTaskId DESC" , string0 )
assertEquals ( "\n\nFull thread dump of Java HotSpot ( TM ) 64 - Bit Server VM 20 . 4 - b02 on Tue Jul 02 07 : 15 : 25 BST 2013\n\n\"RMI TCP Connection ( 1 ) - 192 . 168 . 0 . 157\" ( RMI Runtime ) , priority = 5 , id = 13 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1011 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . tryAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1303 ) \n\tjava . util . concurrent . CountDownLatch . await ( CountDownLatch . java : 253 ) \n\torg . evosuite . rmi . service . ClientNodeImpl . waitUntilDone ( ClientNodeImpl . java : 137 ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 39 ) \n\tsun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 25 ) \n\tjava . lang . reflect . Method . invoke ( Method . java : 597 ) \n\tsun . rmi . server . UnicastServerRef . dispatch ( UnicastServerRef . java : 303 ) \n\tsun . rmi . transport . Transport$1 . run ( Transport . java : 159 ) \n\tjava . security . AccessController . doPrivileged ( Native Method ) \n\tsun . rmi . transport . Transport . serviceCall ( Transport . java : 155 ) \n\tsun . rmi . transport . tcp . TCPTransport . handleMessages ( TCPTransport . java : 535 ) \n\tsun . rmi . transport . tcp . TCPTransport$ConnectionHandler . run0 ( TCPTransport . java : 790 ) \n\tsun . rmi . transport . tcp . TCPTransport$ConnectionHandler . run ( TCPTransport . java : 649 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"GC Daemon\" ( system ) , priority = 2 , id = 11 , state = TIMED_WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tsun . misc . GC$Daemon . run ( GC . java : 100 ) \n\n\"RMI TCP Accept - 10023\" ( system ) , priority = 5 , id = 9 , state = RUNNABLE\n\tjava . net . PlainSocketImpl . socketAccept ( Native Method ) \n\tjava . net . PlainSocketImpl . accept ( PlainSocketImpl . java : 408 ) \n\tjava . net . ServerSocket . implAccept ( ServerSocket . java : 462 ) \n\tjava . net . ServerSocket . accept ( ServerSocket . java : 430 ) \n\tsun . rmi . transport . tcp . TCPTransport$AcceptLoop . executeAcceptLoop ( TCPTransport . java : 369 ) \n\tsun . rmi . transport . tcp . TCPTransport$AcceptLoop . run ( TCPTransport . java : 341 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"RMI Reaper\" ( system ) , priority = 5 , id = 10 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 134 ) \n\tsun . rmi . transport . ObjectTable$Reaper . run ( ObjectTable . java : 333 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"TEST_EXECUTION_THREAD_1\" ( Test Execution ) , priority = 5 , id = 19 , state = RUNNABLE\n\tjava . lang . Thread . dumpThreads ( Native Method ) \n\tjava . lang . Thread . getAllStackTraces ( Thread . java : 1530 ) \n\tcom . liferay . portal . kernel . util . ThreadUtil . _getThreadDumpFromStackTrace ( ThreadUtil . java : 129 ) \n\tcom . liferay . portal . kernel . util . ThreadUtil . threadDump ( ThreadUtil . java : 63 ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 39 ) \n\tsun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 25 ) \n\tjava . lang . reflect . Method . invoke ( Method . java : 597 ) \n\torg . evosuite . assertion . Inspector . getValue ( Inspector . java : 73 ) \n\torg . evosuite . assertion . InspectorTraceObserver . visit ( InspectorTraceObserver . java : 68 ) \n\torg . evosuite . assertion . AssertionTraceObserver . visitDependencies ( AssertionTraceObserver . java : 75 ) \n\torg . evosuite . assertion . AssertionTraceObserver . afterStatement ( AssertionTraceObserver . java : 129 ) \n\torg . evosuite . testcase . TestRunnable . informObservers_after ( TestRunnable . java : 243 ) \n\torg . evosuite . testcase . TestRunnable . call ( TestRunnable . java : 364 ) \n\torg . evosuite . testcase . TestRunnable . call ( TestRunnable . java : 44 ) \n\tjava . util . concurrent . FutureTask$Sync . innerRun ( FutureTask . java : 303 ) \n\tjava . util . concurrent . FutureTask . run ( FutureTask . java : 138 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Reference Handler\" ( system ) , priority = 10 , id = 2 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . Object . wait ( Object . java : 485 ) \n\tjava . lang . ref . Reference$ReferenceHandler . run ( Reference . java : 116 ) \n\n\"Thread - 1\" ( main ) , priority = 5 , id = 16 , state = WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . park ( LockSupport . java : 156 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer$ConditionObject . await ( AbstractQueuedSynchronizer . java : 1987 ) \n\tjava . util . concurrent . LinkedBlockingQueue . take ( LinkedBlockingQueue . java : 399 ) \n\torg . evosuite . rmi . service . ClientNodeImpl$2 . run ( ClientNodeImpl . java : 228 ) \n\n\"RMI RenewClean - [ 192 . 168 . 0 . 157 : 12613 ] \" ( system ) , priority = 5 , id = 14 , state = TIMED_WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tsun . rmi . transport . DGCClient$EndpointEntry$RenewCleanThread . run ( DGCClient . java : 516 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Signal Dispatcher\" ( system ) , priority = 9 , id = 4 , state = RUNNABLE\n\n\"pool - 3 - thread - 1\" ( main ) , priority = 5 , id = 15 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1011 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . tryAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1303 ) \n\tjava . util . concurrent . FutureTask$Sync . innerGet ( FutureTask . java : 227 ) \n\tjava . util . concurrent . FutureTask . get ( FutureTask . java : 91 ) \n\torg . evosuite . testcase . TimeoutHandler . executeWithTimeout ( TimeoutHandler . java : 107 ) \n\torg . evosuite . testcase . TimeoutHandler . execute ( TimeoutHandler . java : 96 ) \n\torg . evosuite . testcase . TestCaseExecutor . execute ( TestCaseExecutor . java : 304 ) \n\torg . evosuite . testcase . TestCaseExecutor . execute ( TestCaseExecutor . java : 249 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . runTest ( MutationAssertionGenerator . java : 120 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . runTest ( MutationAssertionGenerator . java : 97 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . addAssertions ( MutationAssertionGenerator . java : 297 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . addAssertions ( MutationAssertionGenerator . java : 273 ) \n\torg . evosuite . TestSuiteGenerator . addAssertions ( TestSuiteGenerator . java : 625 ) \n\torg . evosuite . TestSuiteGenerator . generateTests ( TestSuiteGenerator . java : 327 ) \n\torg . evosuite . TestSuiteGenerator . generateTestSuite ( TestSuiteGenerator . java : 247 ) \n\torg . evosuite . rmi . service . ClientNodeImpl$1 . run ( ClientNodeImpl . java : 95 ) \n\tjava . util . concurrent . Executors$RunnableAdapter . call ( Executors . java : 441 ) \n\tjava . util . concurrent . FutureTask$Sync . innerRun ( FutureTask . java : 303 ) \n\tjava . util . concurrent . FutureTask . run ( FutureTask . java : 138 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"RMI Scheduler ( 0 ) \" ( system ) , priority = 5 , id = 12 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer$ConditionObject . awaitNanos ( AbstractQueuedSynchronizer . java : 2025 ) \n\tjava . util . concurrent . DelayQueue . take ( DelayQueue . java : 164 ) \n\tjava . util . concurrent . ScheduledThreadPoolExecutor$DelayedWorkQueue . take ( ScheduledThreadPoolExecutor . java : 609 ) \n\tjava . util . concurrent . ScheduledThreadPoolExecutor$DelayedWorkQueue . take ( ScheduledThreadPoolExecutor . java : 602 ) \n\tjava . util . concurrent . ThreadPoolExecutor . getTask ( ThreadPoolExecutor . java : 947 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 907 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Finalizer\" ( system ) , priority = 8 , id = 3 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 134 ) \n\tjava . lang . ref . Finalizer$FinalizerThread . run ( Finalizer . java : 159 ) \n\n\"main\" ( main ) , priority = 5 , id = 1 , state = WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . park ( LockSupport . java : 156 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . parkAndCheckInterrupt ( AbstractQueuedSynchronizer . java : 811 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedInterruptibly ( AbstractQueuedSynchronizer . java : 969 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . acquireSharedInterruptibly ( AbstractQueuedSynchronizer . java : 1281 ) \n\tjava . util . concurrent . CountDownLatch . await ( CountDownLatch . java : 207 ) \n\torg . evosuite . rmi . service . ClientNodeImpl . waitUntilDone ( ClientNodeImpl . java : 143 ) \n\torg . evosuite . ClientProcess . run ( ClientProcess . java : 67 ) \n\torg . evosuite . ClientProcess . main ( ClientProcess . java : 91 ) \n\n" , threadUtil0 . threadDump ( ) )
assertNotNull ( threadArray0 )
assertEquals ( "\n\nFull thread dump of Java HotSpot ( TM ) 64 - Bit Server VM 20 . 4 - b02 on Tue Jul 02 07 : 15 : 56 BST 2013\n\n\"RMI TCP Connection ( 1 ) - 192 . 168 . 0 . 157\" ( RMI Runtime ) , priority = 5 , id = 13 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1011 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . tryAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1303 ) \n\tjava . util . concurrent . CountDownLatch . await ( CountDownLatch . java : 253 ) \n\torg . evosuite . rmi . service . ClientNodeImpl . waitUntilDone ( ClientNodeImpl . java : 137 ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 39 ) \n\tsun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 25 ) \n\tjava . lang . reflect . Method . invoke ( Method . java : 597 ) \n\tsun . rmi . server . UnicastServerRef . dispatch ( UnicastServerRef . java : 303 ) \n\tsun . rmi . transport . Transport$1 . run ( Transport . java : 159 ) \n\tjava . security . AccessController . doPrivileged ( Native Method ) \n\tsun . rmi . transport . Transport . serviceCall ( Transport . java : 155 ) \n\tsun . rmi . transport . tcp . TCPTransport . handleMessages ( TCPTransport . java : 535 ) \n\tsun . rmi . transport . tcp . TCPTransport$ConnectionHandler . run0 ( TCPTransport . java : 790 ) \n\tsun . rmi . transport . tcp . TCPTransport$ConnectionHandler . run ( TCPTransport . java : 649 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"GC Daemon\" ( system ) , priority = 2 , id = 11 , state = TIMED_WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tsun . misc . GC$Daemon . run ( GC . java : 100 ) \n\n\"TEST_EXECUTION_THREAD_6\" ( Test Execution ) , priority = 5 , id = 24 , state = RUNNABLE\n\tjava . lang . Thread . dumpThreads ( Native Method ) \n\tjava . lang . Thread . getAllStackTraces ( Thread . java : 1530 ) \n\tcom . liferay . portal . kernel . util . ThreadUtil . _getThreadDumpFromStackTrace ( ThreadUtil . java : 129 ) \n\tcom . liferay . portal . kernel . util . ThreadUtil . threadDump ( ThreadUtil . java : 63 ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke0 ( Native Method ) \n\tsun . reflect . NativeMethodAccessorImpl . invoke ( NativeMethodAccessorImpl . java : 39 ) \n\tsun . reflect . DelegatingMethodAccessorImpl . invoke ( DelegatingMethodAccessorImpl . java : 25 ) \n\tjava . lang . reflect . Method . invoke ( Method . java : 597 ) \n\torg . evosuite . testcase . MethodStatement$1 . execute ( MethodStatement . java : 262 ) \n\torg . evosuite . testcase . AbstractStatement . exceptionHandler ( AbstractStatement . java : 142 ) \n\torg . evosuite . testcase . MethodStatement . execute ( MethodStatement . java : 217 ) \n\torg . evosuite . testcase . TestRunnable . call ( TestRunnable . java : 291 ) \n\torg . evosuite . testcase . TestRunnable . call ( TestRunnable . java : 44 ) \n\tjava . util . concurrent . FutureTask$Sync . innerRun ( FutureTask . java : 303 ) \n\tjava . util . concurrent . FutureTask . run ( FutureTask . java : 138 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"RMI TCP Accept - 10023\" ( system ) , priority = 5 , id = 9 , state = RUNNABLE\n\tjava . net . PlainSocketImpl . socketAccept ( Native Method ) \n\tjava . net . PlainSocketImpl . accept ( PlainSocketImpl . java : 408 ) \n\tjava . net . ServerSocket . implAccept ( ServerSocket . java : 462 ) \n\tjava . net . ServerSocket . accept ( ServerSocket . java : 430 ) \n\tsun . rmi . transport . tcp . TCPTransport$AcceptLoop . executeAcceptLoop ( TCPTransport . java : 369 ) \n\tsun . rmi . transport . tcp . TCPTransport$AcceptLoop . run ( TCPTransport . java : 341 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"RMI Reaper\" ( system ) , priority = 5 , id = 10 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 134 ) \n\tsun . rmi . transport . ObjectTable$Reaper . run ( ObjectTable . java : 333 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Reference Handler\" ( system ) , priority = 10 , id = 2 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . Object . wait ( Object . java : 485 ) \n\tjava . lang . ref . Reference$ReferenceHandler . run ( Reference . java : 116 ) \n\n\"Thread - 1\" ( main ) , priority = 5 , id = 16 , state = WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . park ( LockSupport . java : 156 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer$ConditionObject . await ( AbstractQueuedSynchronizer . java : 1987 ) \n\tjava . util . concurrent . LinkedBlockingQueue . take ( LinkedBlockingQueue . java : 399 ) \n\torg . evosuite . rmi . service . ClientNodeImpl$2 . run ( ClientNodeImpl . java : 228 ) \n\n\"RMI RenewClean - [ 192 . 168 . 0 . 157 : 12613 ] \" ( system ) , priority = 5 , id = 14 , state = TIMED_WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tsun . rmi . transport . DGCClient$EndpointEntry$RenewCleanThread . run ( DGCClient . java : 516 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Signal Dispatcher\" ( system ) , priority = 9 , id = 4 , state = RUNNABLE\n\n\"pool - 3 - thread - 1\" ( main ) , priority = 5 , id = 15 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1011 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . tryAcquireSharedNanos ( AbstractQueuedSynchronizer . java : 1303 ) \n\tjava . util . concurrent . FutureTask$Sync . innerGet ( FutureTask . java : 227 ) \n\tjava . util . concurrent . FutureTask . get ( FutureTask . java : 91 ) \n\torg . evosuite . testcase . TimeoutHandler . executeWithTimeout ( TimeoutHandler . java : 107 ) \n\torg . evosuite . testcase . TimeoutHandler . execute ( TimeoutHandler . java : 96 ) \n\torg . evosuite . testcase . TestCaseExecutor . execute ( TestCaseExecutor . java : 304 ) \n\torg . evosuite . testcase . TestCaseExecutor . execute ( TestCaseExecutor . java : 249 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . runTest ( MutationAssertionGenerator . java : 120 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . runTest ( MutationAssertionGenerator . java : 97 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . addAssertions ( MutationAssertionGenerator . java : 297 ) \n\torg . evosuite . assertion . MutationAssertionGenerator . addAssertions ( MutationAssertionGenerator . java : 273 ) \n\torg . evosuite . TestSuiteGenerator . addAssertions ( TestSuiteGenerator . java : 625 ) \n\torg . evosuite . TestSuiteGenerator . generateTests ( TestSuiteGenerator . java : 327 ) \n\torg . evosuite . TestSuiteGenerator . generateTestSuite ( TestSuiteGenerator . java : 247 ) \n\torg . evosuite . rmi . service . ClientNodeImpl$1 . run ( ClientNodeImpl . java : 95 ) \n\tjava . util . concurrent . Executors$RunnableAdapter . call ( Executors . java : 441 ) \n\tjava . util . concurrent . FutureTask$Sync . innerRun ( FutureTask . java : 303 ) \n\tjava . util . concurrent . FutureTask . run ( FutureTask . java : 138 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . runTask ( ThreadPoolExecutor . java : 886 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 908 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"RMI Scheduler ( 0 ) \" ( system ) , priority = 5 , id = 12 , state = TIMED_WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . parkNanos ( LockSupport . java : 196 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer$ConditionObject . awaitNanos ( AbstractQueuedSynchronizer . java : 2025 ) \n\tjava . util . concurrent . DelayQueue . take ( DelayQueue . java : 164 ) \n\tjava . util . concurrent . ScheduledThreadPoolExecutor$DelayedWorkQueue . take ( ScheduledThreadPoolExecutor . java : 609 ) \n\tjava . util . concurrent . ScheduledThreadPoolExecutor$DelayedWorkQueue . take ( ScheduledThreadPoolExecutor . java : 602 ) \n\tjava . util . concurrent . ThreadPoolExecutor . getTask ( ThreadPoolExecutor . java : 947 ) \n\tjava . util . concurrent . ThreadPoolExecutor$Worker . run ( ThreadPoolExecutor . java : 907 ) \n\tjava . lang . Thread . run ( Thread . java : 662 ) \n\n\"Finalizer\" ( system ) , priority = 8 , id = 3 , state = WAITING\n\tjava . lang . Object . wait ( Native Method ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 118 ) \n\tjava . lang . ref . ReferenceQueue . remove ( ReferenceQueue . java : 134 ) \n\tjava . lang . ref . Finalizer$FinalizerThread . run ( Finalizer . java : 159 ) \n\n\"main\" ( main ) , priority = 5 , id = 1 , state = WAITING\n\tsun . misc . Unsafe . park ( Native Method ) \n\tjava . util . concurrent . locks . LockSupport . park ( LockSupport . java : 156 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . parkAndCheckInterrupt ( AbstractQueuedSynchronizer . java : 811 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . doAcquireSharedInterruptibly ( AbstractQueuedSynchronizer . java : 969 ) \n\tjava . util . concurrent . locks . AbstractQueuedSynchronizer . acquireSharedInterruptibly ( AbstractQueuedSynchronizer . java : 1281 ) \n\tjava . util . concurrent . CountDownLatch . await ( CountDownLatch . java : 207 ) \n\torg . evosuite . rmi . service . ClientNodeImpl . waitUntilDone ( ClientNodeImpl . java : 143 ) \n\torg . evosuite . ClientProcess . run ( ClientProcess . java : 67 ) \n\torg . evosuite . ClientProcess . main ( ClientProcess . java : 91 ) \n\n" , string0 )
assertEquals ( false , properties0 . isEmpty ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( portalClassLoaderUtil0 )
assertEquals ( 1 , uniqueList0 . size ( ) )
assertEquals ( 1 , uniqueList1 . size ( ) )
assertNotNull ( uniqueList1 )
assertEquals ( false , uniqueList2 . isEmpty ( ) )
assertEquals ( " [ [ ] ] " , uniqueList3 . toString ( ) )
assertEquals ( false , uniqueList1 . isEmpty ( ) )
assertEquals ( - 1 , stringReader0 . read ( ) )
assertNotNull ( classUtil0 )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( - 1 , charArrayReader0 . read ( ) )
assertEquals ( "script1000002 . groovy" , groovyClassLoader0 . generateScriptName ( ) )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( - 2 , shortWrapper0 . decrement ( ) )
assertEquals ( 0 , shortWrapper0 . decrement ( ) )
assertEquals ( - 2 , shortWrapper0 . getValue ( ) )
assertEquals ( - 1 , shortWrapper0 . decrement ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertNotNull ( floatArray0 )
assertEquals ( "" , string0 )
assertEquals ( "0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0" , string0 )
assertEquals ( "h" , string0 )
assertNotNull ( doubleArray0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "0000" , string0 )
assertEquals ( "pH { MELOT@r [ R0" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( stringUtil_IW0 )
assertEquals ( "iL | $D~Q~7 { @\"B" , string0 )
assertNotNull ( doubleArray0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "670 , 670 , 670 , 670 , 670 , 0" , string0 )
assertEquals ( "''" , string0 )
assertEquals ( "En ? - % - nH$D1 . 3" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( " } W~uo & = 3Wo ; y } W~uo & = 3Wo ; y } W~uo & = 3Wo ; y" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0 , 0 . 0" , string0 )
assertEquals ( "Q - 7EDGs , " , stringBundler0 . toString ( ) )
assertEquals ( "%" , string0 )
assertEquals ( "8" , string0 )
assertNull ( string0 )
assertNotNull ( stringUtil_IW0 )
assertNotNull ( stringUtil_IW0 )
assertEquals ( "Yn7~5 , layout - flow" , string0 )
assertEquals ( "0" , string0 )
assertEquals ( "0 , 0 , 0 , 0 , 0 , 0" , string0 )
assertEquals ( "0000000000000000" , string0 )
assertEquals ( "false , false , false , false" , string0 )
assertEquals ( "%j' ] 6" , string0 )
assertNotNull ( string0 )
assertEquals ( "null" , string0 )
assertEquals ( "0" , string0 )
assertNull ( string0 )
assertEquals ( "Yn7~5" , string0 )
assertEquals ( "null" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " ( ~5 { ? " , string0 )
assertEquals ( "%j' ] 6" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( " * H\"G0ruL" , string0 )
assertEquals ( " ( Ljava / lang / Object ; ) ( Ljava / lang / Object ; ) ( Ljava / lang / Object ; ) " , string0 )
assertEquals ( "tabbedPane" , string0 )
assertNotNull ( intArray0 )
assertEquals ( "U" , string0 )
assertNotNull ( longArray0 )
assertEquals ( "tabbedPane" , string0 )
assertNotNull ( string0 )
assertEquals ( " * H\"G0ruL" , string0 )
assertEquals ( "0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0Q - 7EDGs0 . 0" , string0 )
assertEquals ( "%" , string0 )
assertEquals ( "true & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue & uR ! B ; 4p8efalse & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue & uR ! B ; 4p8etrue" , string0 )
assertNotNull ( booleanArray0 )
assertEquals ( "false & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse & uR ! B ; 4p8efalse" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( floatArray0 )
assertNotNull ( stringArray0 )
assertNull ( string0 )
assertEquals ( "ac" , string0 )
assertEquals ( "nullnullnullnullnullnullnull" , string0 )
assertNotNull ( stringUtil_IW0 )
assertNull ( string0 )
assertEquals ( "0 , 0 , 0 , 0 , 0 , 0 , 0" , string0 )
assertNull ( string0 )
assertEquals ( " + U + " , string0 )
assertEquals ( "QB" , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( stringUtil_IW0 )
assertEquals ( " } W~uo & = 3Wo ; y" , string0 )
assertEquals ( "144120120120 , , " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertSame ( string1 , string0 )
assertEquals ( "670 , 670 , 670 , 670 , 670 , 0" , string0 )
assertNotNull ( shortArray0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "85" , string0 )
assertNotNull ( booleanArray0 )
assertEquals ( "0 . 0null0 . 0null0 . 0null0 . 0null0 . 0" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( " , q { M ( X# , d J_% = ) 8 > ; " , string0 )
assertEquals ( "0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0" , string0 )
assertNotNull ( stringUtil_IW0 )
assertNotNull ( stringUtil_IW0 )
assertNotNull ( longArray0 )
assertNotNull ( intArray0 )
assertEquals ( " ! ! ZtitzC } 1 = F - u'in" , string0 )
assertEquals ( " , , , , , " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( " } W~uo & = 3Wo ; y" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( shortArray0 )
assertNotNull ( stringUtil_IW0 )
assertEquals ( " ( ) " , string0 )
assertEquals ( " | { z . [ * ALQh'0zx" , methodParameter0 . getSignature ( ) )
assertEquals ( " | { z . [ * ALQh'0zx" , string0 )
assertEquals ( "EgPA ] < SOO : u } a ; 2 > p" , string0 )
assertNull ( classArray0 )
assertNotNull ( classArray0 )
assertNull ( classArray0 )
assertNull ( classArray0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertNull ( object0 )
assertEquals ( " { } " , sortedProperties0 . toString ( ) )
assertEquals ( " { = } " , sortedProperties0 . toString ( ) )
assertEquals ( false , sortedProperties0 . isEmpty ( ) )
assertEquals ( "_LcYWnY`anU > , Mh` ? U = _LcYWnY`anU > , Mh` ? U\n" , charArrayWriter0 . toString ( ) )
assertEquals ( 1 , sortedProperties0 . size ( ) )
assertNotNull ( prefsPropsUtil0 )
assertNull ( classLoader1 )
assertNull ( aggregateClassLoader0 )
assertNull ( classLoader0 )
assertEquals ( 1 , list0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( aggregateClassLoader1 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( 1 , int0 )
assertNull ( object0 )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "" , string0 )
assertNotNull ( base64_0 )
assertNotNull ( byteArray0 )
assertNull ( object0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( ' ? ' , char0 )
assertNotNull ( string0 )
assertEquals ( '1' , char0 )
assertEquals ( "AAAAAAAAAP + IAA = = " , string0 )
assertNotNull ( byteArray0 )
assertNotNull ( byteArray0 )
assertEquals ( ( - 1772 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( kMPSearch0 )
assertEquals ( 0 , int0 )
assertNotNull ( intArray0 )
assertNotNull ( intArray0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 2 ) , int0 )
assertEquals ( 2 , int0 )
assertNotNull ( resourceBundleUtil0 )
assertEquals ( false , randomizer0 . nextBoolean ( ) )
assertEquals ( 0 . 15768039F , randomizer0 . nextFloat ( ) , 0 . 01F )
assertNotNull ( intArray0 )
assertNotNull ( string0 )
assertEquals ( ( - 316923953663567096L ) , randomizer0 . nextLong ( ) )
assertEquals ( " [ W#St@M ] " , linkedList0 . toString ( ) )
assertNotNull ( randomizer0 )
assertNotNull ( randomizer0 )
assertNotSame ( booleanArray0 , booleanArray1 )
assertNotNull ( objectArray1 )
assertNotSame ( shortArray0 , shortArray1 )
assertNotNull ( charArray1 )
assertNotSame ( shortArray0 , shortArray1 )
assertNotSame ( longArray0 , longArray1 )
assertNotSame ( booleanArray0 , booleanArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( longArray1 )
assertNotSame ( doubleArray0 , doubleArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( intArray1 )
assertNotNull ( byteArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( byteArray1 )
assertNotSame ( integerArray0 , integerArray1 )
assertNotNull ( charArray1 )
assertNotNull ( byteArray2 )
assertNotSame ( longArray1 , longArray0 )
assertNotNull ( byteArray1 )
assertNotNull ( stringArray1 )
assertNotSame ( intArray1 , intArray0 )
assertNotSame ( shortArray1 , shortArray0 )
assertNotNull ( arrayUtil0 )
assertNotNull ( floatArray1 )
assertNotSame ( byteArray1 , byteArray0 )
assertNotNull ( doubleArray1 )
assertNotSame ( floatArray1 , floatArray0 )
assertNotNull ( booleanArray1 )
assertNotNull ( byteArray1 )
assertNotNull ( charArray1 )
assertNotNull ( doubleArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( intArray1 )
assertNotNull ( longArray1 )
assertNotNull ( shortArray1 )
assertNotNull ( stringArray1 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 8 , int0 )
assertNull ( object0 )
assertNotSame ( booleanArray0 , booleanArray1 )
assertNotSame ( byteArray0 , byteArray1 )
assertNotSame ( charArray0 , charArray1 )
assertNotSame ( doubleArray1 , doubleArray0 )
assertNotSame ( intArray0 , intArray1 )
assertNotSame ( longArray0 , longArray1 )
assertNotSame ( longArray1 , longArray0 )
assertNotSame ( shortArray0 , shortArray1 )
assertNotSame ( stringArray1 , stringArray0 )
assertNotSame ( stringArray0 , stringArray1 )
assertSame ( booleanArray1 , booleanArray0 )
assertSame ( booleanArray1 , booleanArray0 )
assertSame ( byteArray1 , byteArray0 )
assertSame ( byteArray0 , byteArray1 )
assertNotSame ( charArray1 , charArray0 )
assertSame ( charArray0 , charArray1 )
assertSame ( doubleArray0 , doubleArray1 )
assertSame ( doubleArray0 , doubleArray1 )
assertNotSame ( doubleArray1 , doubleArray0 )
assertSame ( floatArray0 , floatArray1 )
assertNotNull ( floatArray1 )
assertSame ( floatArray0 , floatArray1 )
assertSame ( intArray1 , intArray0 )
assertSame ( intArray0 , intArray1 )
assertSame ( longArray1 , longArray0 )
assertSame ( longArray1 , longArray0 )
assertSame ( longArray0 , longArray1 )
assertNotNull ( longArray1 )
assertNotNull ( shortArray1 )
assertSame ( floatArray0 , floatArray1 )
assertNotSame ( doubleArray0 , doubleArray1 )
assertSame ( shortArray0 , shortArray1 )
assertNotNull ( booleanArray1 )
assertNotNull ( byteArray1 )
assertNotNull ( characterArray0 )
assertNotNull ( doubleArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( floatArray1 )
assertNotNull ( integerArray0 )
assertNotNull ( longArray1 )
assertNotNull ( shortArray1 )
assertNotNull ( longArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertNotSame ( byteArray0 , byteArray1 )
assertNotSame ( doubleArray1 , doubleArray0 )
assertNotSame ( intArray0 , intArray1 )
assertNotSame ( longArray0 , longArray1 )
assertNotSame ( shortArray0 , shortArray1 )
assertEquals ( "v" , string0 )
assertNotNull ( systemEnv0 )
assertEquals ( " { env . SGE_O_SHELL = / bin / bash , env . LESSOPEN = | / usr / bin / lesspipe . sh %s , env . PVM_ROOT = / usr / local / packages / pvm3 , env . LOADEDMODULES = apps / java / 1 . 6 , env . SGE_STDIN_PATH = / dev / null , env . NQUEUES = 1 , env . TMPDIR = / tmp / 6386825 . 1 . short . q , env . SGE_TASK_FIRST = undefined , env . PWD = / fastdata / ac1gf / SF110 / dist / 108_liferay , env . SGE_TASK_STEPSIZE = undefined , env . JOB_ID = 6386825 , env . LANG = en_GB . UTF - 8 , env . SGE_O_WORKDIR = / mnt / fastdata / ac1gf / SF110 / scripts , env . GLOBUS_LOCATION = / usr / local / packages / globus - 2 . 4 , env . HISTSIZE = 1000 , env . _ = / usr / local / packages / java / jdk1 . 6 / bin / java , env . USER = ac1gf , env . SHELL = / bin / bash , env . KDEDIR = / usr , env . QTLIB = / usr / lib64 / qt - 3 . 3 / lib , env . SSH_TTY = / dev / pts / 10 , env . NLSPATH = / usr / dt / lib / nls / msg / %L / %N . cat , env . SGE_TASK_ID = undefined , env . PATH = / usr / local / packages / java / jdk1 . 6 / shef : / usr / local / packages / java / jdk1 . 6 / bin : / tmp / 6386825 . 1 . short . q : / usr / local / bin / : / usr / local / packages / biomed / bin / : / usr / local / packages / java / jdk1 . 5 . 0_05 / bin / : / usr / local / sge6_2 / bin / lx26 - amd64 : / usr / local / packages / pvm3 / lib : / usr / kerberos / bin : / usr / local / packages / globus - 2 . 4 / bin : / usr / local / bin : / bin : / usr / bin : / home / ac1gf / bin , env . MODULEPATH = / usr / share / Modules / modulefiles\t : / etc / modulefiles\t\t\t\t : / usr / local / modulefiles / : / usr / local / extras / modulefiles , env . SGE_STDERR_PATH = / mnt / fastdata / ac1gf / SF110 / scripts / EvoSuite_367_Tests_0 . sh . e6386825 , env . GPT_LOCATION = / usr / local / packages / gpt - 3 . 0 , env . SSH_CONNECTION = 143 . 167 . 166 . 42 57069 143 . 167 . 3 . 75 22 , env . _LMFILES_ = / usr / local / modulefiles / / apps / java / 1 . 6 , env . SSH_CLIENT = 143 . 167 . 166 . 42 57069 22 , env . BASH_ENV = / etc / profile . d / modules . sh , env . SGE_CELL = default , env . SGE_ARCH = lx26 - amd64 , env . SHLVL = 3 , env . SGE_EXECD_PORT = 804 , env . HOSTNAME = node057 . iceberg . shef . ac . uk , env . QTDIR = / usr / lib64 / qt - 3 . 3 , env . ARC = lx26 - amd64 , env . SGE_O_HOST = iceberg1 , env . LOGNAME = ac1gf , env . PVM_TMP = / usr / local / tmp , env . SGE_O_HOME = / home / ac1gf , env . SGE_JOB_SPOOL_DIR = / var / spool / sge / node057 / active_jobs / 6386825 . 1 , env . G_BROKEN_FILENAMES = 1 , env . SGE_ACCOUNT = sge , env . QTINC = / usr / lib64 / qt - 3 . 3 / include , env . QUEUE = short . q , env . PVM_ARCH = BEOLIN , env . JOB_NAME = EvoSuite_367_Tests_0 . sh , env . JAVA_HOME = / usr / local / packages / java / jdk1 . 6 , env . TERM = xterm , env . TMP = / tmp / 6386825 . 1 . short . q , env . NAG_KUSARI_FILE = / usr / local / packages / nag21 / license . lic , env . MANPATH = / usr / share / man : / usr / man : / usr / local / man : / usr / local / share / man : / usr / X11R6 / man : / usr / local / packages / java / jdk1 . 6 / man : / usr / share / man : / usr / man : / usr / local / man : / usr / local / share / man : / usr / X11R6 / man : / usr / local / sge6_2 / man : / usr / local / packages / pvm3 / man : , env . ENVIRONMENT = BATCH , env . SGE_TASK_LAST = undefined , env . SGE_O_MAIL = / var / spool / mail / ac1gf , env . RESTARTED = 0 , env . SGE_QMASTER_PORT = 803 , env . SGE_O_LOGNAME = ac1gf , env . CVS_RSH = ssh , env . SGE_BINARY_PATH = / usr / local / sge6_2 / bin / lx26 - amd64 , env . XFILESEARCHPATH = / usr / dt / app - defaults / %L / Dt , env . MODULESHOME = / usr / share / Modules , env . SGE_STDOUT_PATH = / mnt / fastdata / ac1gf / SF110 / scripts / EvoSuite_367_Tests_0 . sh . o6386825 , env . HOME = / home / ac1gf , env . LS_COLORS = no = 00 : fi = 00 : di = 00 ; 34 : ln = 00 ; 36 : pi = 40 ; 33 : so = 00 ; 35 : bd = 40 ; 33 ; 01 : cd = 40 ; 33 ; 01 : or = 01 ; 05 ; 37 ; 41 : mi = 01 ; 05 ; 37 ; 41 : ex = 00 ; 32 : * . cmd = 00 ; 32 : * . exe = 00 ; 32 : * . com = 00 ; 32 : * . btm = 00 ; 32 : * . bat = 00 ; 32 : * . sh = 00 ; 32 : * . csh = 00 ; 32 : * . tar = 00 ; 31 : * . tgz = 00 ; 31 : * . arj = 00 ; 31 : * . taz = 00 ; 31 : * . lzh = 00 ; 31 : * . zip = 00 ; 31 : * . z = 00 ; 31 : * . Z = 00 ; 31 : * . gz = 00 ; 31 : * . bz2 = 00 ; 31 : * . bz = 00 ; 31 : * . tz = 00 ; 31 : * . rpm = 00 ; 31 : * . cpio = 00 ; 31 : * . jpg = 00 ; 35 : * . gif = 00 ; 35 : * . bmp = 00 ; 35 : * . xbm = 00 ; 35 : * . xpm = 00 ; 35 : * . png = 00 ; 35 : * . tif = 00 ; 35 : , env . LD_LIBRARY_PATH = / usr / local / packages / java / jdk1 . 6 . 0_29 / jre / lib / amd64 / server : / usr / local / packages / java / jdk1 . 6 . 0_29 / jre / lib / amd64 : / usr / local / packages / java / jdk1 . 6 . 0_29 / jre / . . / lib / amd64 , env . NSLOTS = 1 , env . JOB_SCRIPT = / var / spool / sge / node057 / job_scripts / 6386825 , env . GLOBUS_TCP_PORT_RANGE = 65000 , 65256 , env . NHOSTS = 1 , env . ENV = / etc / profile . d / modules . sh , env . SGE_CLUSTER_NAME = iceberg , env . MALLOC_ARENA_MAX = 1 , env . REQNAME = EvoSuite_367_Tests_0 . sh , env . REQUEST = EvoSuite_367_Tests_0 . sh , env . INPUTRC = / etc / inputrc , env . SGE_ROOT = / usr / local / sge6_2 , env . MAIL = / var / spool / mail / ac1gf , env . GLOBUS_PATH = / usr / local / packages / globus - 2 . 4 , env . SGE_O_PATH = / usr / local / bin / : / usr / local / packages / biomed / bin / : / usr / local / packages / java / jdk1 . 5 . 0_05 / bin / : / usr / local / sge6_2 / bin / lx26 - amd64 : / usr / local / packages / pvm3 / lib : / usr / kerberos / bin : / usr / local / packages / globus - 2 . 4 / bin : / usr / local / bin : / bin : / usr / bin : / home / ac1gf / bin , env . SGE_CWD_PATH = / mnt / fastdata / ac1gf / SF110 / scripts , env . SSH_ASKPASS = / usr / libexec / openssh / gnome - ssh - askpass } " , properties0 . toString ( ) )
assertEquals ( false , booleanWrapper0 . getValue ( ) )
assertEquals ( 1 , int0 )
assertEquals ( false , booleanWrapper0 . getValue ( ) )
assertEquals ( true , booleanWrapper0 . getValue ( ) )
assertEquals ( ( - 1 ) , int0 )
assertNotNull ( portletClassInvoker0 )
assertNotSame ( floatArray1 , floatArray0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertNotNull ( dateArray0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( 0 . 0 , short1 . doubleValue ( ) , 0 . 01D )
assertEquals ( 0 , int0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( "u#" , string0 )
assertNull ( date0 )
assertEquals ( 2 , date0 . getDate ( ) )
assertEquals ( " - 1275 . 58992850803" , double1 . toString ( ) )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( longArray0 )
assertNotSame ( doubleArray0 , doubleArray1 )
assertNotNull ( getterUtil_IW0 )
assertNotNull ( doubleArray0 )
assertNotNull ( shortArray0 )
assertNotSame ( longArray1 , longArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( getterUtil_IW0 )
assertNotSame ( dateArray0 , dateArray1 )
assertEquals ( " ; 8jpuwZO" , string0 )
assertNotNull ( booleanArray0 )
assertNotNull ( doubleArray0 )
assertNotNull ( getterUtil_IW0 )
assertSame ( object1 , object0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , integer0 . byteValue ( ) )
assertSame ( longArray1 , longArray0 )
assertNotNull ( intArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "2 Jul 2013 05 : 11 : 08 GMT" , date0 . toGMTString ( ) )
assertEquals ( 0 , integer0 . intValue ( ) )
assertNotNull ( getterUtil_IW0 )
assertEquals ( 0L , long0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( getterUtil_IW0 )
assertSame ( intArray0 , intArray1 )
assertNull ( date0 )
assertEquals ( false , boolean0 )
assertNotNull ( getterUtil_IW0 )
assertNotNull ( intArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( "" , string0 )
assertNotSame ( intArray1 , intArray0 )
assertEquals ( false , boolean0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( " < HTML > " , string0 )
assertSame ( shortArray1 , shortArray0 )
assertNotNull ( floatArray0 )
assertNotNull ( booleanArray0 )
assertNotNull ( getterUtil_IW0 )
assertNotNull ( getterUtil_IW0 )
assertNotNull ( numberArray0 )
assertNotNull ( floatArray0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( "0" , string0 )
assertNotSame ( shortArray0 , shortArray1 )
assertSame ( booleanArray0 , booleanArray1 )
assertNotNull ( getterUtil_IW0 )
assertNotSame ( booleanArray1 , booleanArray0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( "E" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( "" , string0 )
assertNotNull ( getterUtil_IW0 )
assertSame ( dateArray1 , dateArray0 )
assertEquals ( 0L , long0 )
assertNotNull ( dateArray0 )
assertNotNull ( getterUtil_IW0 )
assertEquals ( 0 , int0 )
assertSame ( floatArray1 , floatArray0 )
assertEquals ( "Fri Oct 15 00 : 00 : 00 GMT 1582" , date1 . toString ( ) )
assertNotNull ( getterUtil_IW0 )
assertSame ( doubleArray1 , doubleArray0 )
assertNotNull ( numberArray0 )
assertNotSame ( numberArray0 , numberArray1 )
assertNotNull ( shortArray0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertNotNull ( getterUtil_IW0 )
assertEquals ( 0L , integer0 . longValue ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( unmodifiableList0 )
assertNotNull ( unmodifiableList0 )
assertNotNull ( unmodifiableList0 )
assertNotNull ( unmodifiableList0 )
assertEquals ( " [ ] " , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( unmodifiableList0 )
assertNotNull ( htmlEscapableObject0 )
assertEquals ( "" , string0 )
assertNotNull ( breadcrumbsUtil0 )
assertEquals ( "20 . 4 - b02" , string0 )
assertEquals ( "1 . 6 . 0_29 - b11" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "1 . 6 . 0_29" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 . 6 , double0 , 0 . 01D )
assertEquals ( " / fastdata / ac1gf / SF110 / evosuite - 0 . 1 - SNAPSHOT - jar - minimal . jar : lib / abdera . jar : lib / activation . jar : lib / alloy - taglib . jar : lib / annotations . jar : lib / ant - apache - bsf . jar : lib / ant - contrib . jar : lib / antelope . jar : lib / ant - ext . jar : lib / ant - installer . jar : lib / ant . jar : lib / antlr2 . jar : lib / antlr3 . jar : lib / antlr3 - runtime . jar : lib / aopalliance . jar : lib / asm - analysis . jar : lib / asm - commons . jar : lib / asm . jar : lib / asm - tree . jar : lib / asm - util . jar : lib / asm - xml . jar : lib / aspectj - rt . jar : lib / aspectj - weaver . jar : lib / axiom - api . jar : lib / axiom - impl . jar : lib / axis - ant . jar : lib / axis . jar : lib / backport - concurrent . jar : lib / bcmail . jar : lib / bcprov . jar : lib / bnd . jar : lib / bobo - browse . jar : lib / bsf . jar : lib / bsh . jar : lib / c3p0 . jar : lib / cas - client - core . jar : lib / catalina . jar : lib / ccpp . jar : lib / ccpp - ri . jar : lib / cglib . jar : lib / chardet . jar : lib / chemistry - opencmis - client - api . jar : lib / chemistry - opencmis - client - bindings . jar : lib / chemistry - opencmis - client - impl . jar : lib / chemistry - opencmis - commons - api . jar : lib / chemistry - opencmis - commons - impl . jar : lib / ckpackager . jar : lib / cobertura . jar : lib / commons - beanutils . jar : lib / commons - codec . jar : lib / commons - collections . jar : lib / commons - compress . jar : lib / commons - configuration . jar : lib / commons - dbcp . jar : lib / commons - digester . jar : lib / commons - discovery . jar : lib / commons - email . jar : lib / commons - fileupload . jar : lib / commons - httpclient . jar : lib / commons - io . jar : lib / commons - lang . jar : lib / commons - logging . jar : lib / commons - math . jar : lib / commons - pool . jar : lib / commons - validator . jar : lib / concurrent . jar : lib / crypt . jar : lib / daim . jar : lib / daisydiff . jar : lib / deployment . jar : lib / derby . jar : lib / derbytools . jar : lib / displaytag . jar : lib / dom4j . jar : lib / dtddoc . jar : lib / dtdparser . jar : lib / easyconf . jar : lib / ecj . jar : lib / eclipse - core - runtime . jar : lib / eclipselink . jar : lib / ecs . jar : lib / ehcache - core . jar : lib / ehcache - jgroupsreplication . jar : lib / equinox . jar : lib / fastutil . jar : lib / firebird . jar : lib / flexjson . jar : lib / fontbox . jar : lib / freemarker . jar : lib / freshcookies - security . jar : lib / geronimo - commonj_1 . 1_spec - 1 . 0 . jar : lib / geronimo - jcdi_1 . 0_spec - 1 . 0 . jar : lib / geronimo - spec - ejb - 2 . 1 - rc4 . jar : lib / gif89 . jar : lib / groovy . jar : lib / gt - coverage . jar : lib / gt - metadata . jar : lib / hamcrest - core . jar : lib / hamcrest - library . jar : lib / hessian . jar : lib / hibernate3 . jar : lib / hsql . jar : lib / htmlparser . jar : lib / httpclient . jar : lib / httpcore . jar : lib / ical4j . jar : lib / icefaces - comps . jar : lib / icefaces - facelets . jar : lib / icefaces . jar : lib / icq . jar : lib / im4java . jar : lib / interbase . jar : lib / j2h . jar : lib / jaas . jar : lib / jabsorb . jar : lib / jackrabbit - api . jar : lib / jackrabbit - core . jar : lib / jackrabbit - jcr - commons . jar : lib / jackrabbit - spi - commons . jar : lib / jackrabbit - spi . jar : lib / jai_codec . jar : lib / jai_core . jar : lib / jakarta - regexp . jar : lib / jalopy . jar : lib / jamwiki - core . jar : lib / jargs . jar : lib / jarjar . jar : lib / jasper . jar : lib / java - diff . jar : lib / javassist . jar : lib / javax . inject - 1 . jar : lib / javax . inject - tck - 1 . jar : lib / jaxb - api . jar : lib / jaxb - impl . jar : lib / jaxen . jar : lib / jaxrpc . jar : lib / jaxws - rt . jar : lib / jazzy . jar : lib / jbi_rt . jar : lib / jcifs . jar : lib / jcommon . jar : lib / jcr . jar : lib / jdom . jar : lib / jempbox . jar : lib / jena . jar : lib / jericho - html . jar : lib / jets3t . jar : lib / jetty - server . jar : lib / jetty - util . jar : lib / jfreechart . jar : lib / jgroups . jar : lib / jhighlight . jar : lib / jhlabs - filters . jar : lib / jms . jar : lib / jndi . jar : lib / jnet . jar : lib / jodconverter . jar : lib / jodd . jar : lib / jodd - wot . jar : lib / jrcs - diff . jar : lib / jruby . jar : lib / jsf - api . jar : lib / jsf - facelets . jar : lib / jsf - impl . jar : lib / jsf - portlet . jar : lib / json - java . jar : lib / jsonrpc . jar : lib / jsp - api . jar : lib / jspwiki . jar : lib / jsqlparser . jar : lib / jsr107cache . jar : lib / jsse . jar : lib / jstl - api . jar : lib / jstl - impl . jar : lib / jta . jar : lib / jtds . jar : lib / juh . jar : lib / junit . jar : lib / jurt . jar : lib / just - ice . jar : lib / jutf7 . jar : lib / jymsg . jar : lib / jython . jar : lib / kxml2 . jar : lib / liferay - doclet . jar : lib / liferay - icu4j . jar : lib / liferay - yui - compressor . jar : lib / log4j - extras . jar : lib / log4j . jar : lib / lucene - analyzers . jar : lib / lucene - core . jar : lib / lucene - highlighter . jar : lib / lucene - memory . jar : lib / mail . jar : lib / memcached . jar : lib / metadata - extractor . jar : lib / mimepull . jar : lib / mockito . jar : lib / msnm . jar : lib / myfaces - api . jar : lib / myfaces - impl . jar : lib / mysql . jar : lib / nekohtml . jar : lib / oauth . jar : lib / oauth - provider . jar : lib / objenesis . jar : lib / odmg . jar : lib / openid4java . jar : lib / orangevolt - ant - tasks . jar : lib / oro . jar : lib / oscache . jar : lib / p6spy . jar : lib / pdfbox . jar : lib / persistence . jar : lib / poi . jar : lib / poi - ooxml . jar : lib / poi - ooxml - schemas . jar : lib / poi - scratchpad . jar : lib / portal - client . jar : lib / portals - bridges . jar : lib / portletbridge - core . jar : lib / portletbridge - portlet . jar : lib / portlet . jar : lib / postgresql . jar : lib / powermock - mockito . jar : lib / qdox . jar : lib / quartz . jar : lib / rdffilter . jar : lib / relaxngDatatype - 20020414 . jar : lib / resin . jar : lib / rhino . jar : lib / ridl . jar : lib / rome . jar : lib / ruby - gems . jar : lib / saaj - api . jar : lib / saaj - impl . jar : lib / sap . jar : lib / saxpath . jar : lib / scribe . jar : lib / script - 10 . jar : lib / sdk - addon - api - 0 . 2 . jar : lib / selenium - java . jar : lib / selenium - server . jar : lib / serializer . jar : lib / servlet - api . jar : lib / simplecaptcha . jar : lib / slf4j - api . jar : lib / smtp . jar : lib / soap . jar : lib / sonar - ant - task . jar : lib / spring - aop . jar : lib / spring - asm . jar : lib / spring - aspects . jar : lib / spring - beans . jar : lib / spring - context . jar : lib / spring - context - support . jar : lib / spring - core . jar : lib / spring - expression . jar : lib / spring - instrument . jar : lib / spring - instrument - tomcat . jar : lib / spring - jdbc . jar : lib / spring - jms . jar : lib / spring - orm . jar : lib / spring - oxm . jar : lib / spring - test . jar : lib / spring - transaction . jar : lib / spring - web . jar : lib / spring - web - portlet . jar : lib / spring - web - servlet . jar : lib / spring - web - struts . jar : lib / stax - ex . jar : lib / stax . jar : lib / streambuffer . jar : lib / stringtemplate . jar : lib / struts - el . jar : lib / struts . jar : lib / tagsoup . jar : lib / tika - core . jar : lib / tika - parsers . jar : lib / tlddoc . jar : lib / tomcat - coyote . jar : lib / tomcat - jdbc . jar : lib / tomcat - juli . jar : lib / truezip . jar : lib / unoil . jar : lib / urlrewrite . jar : lib / vaadin . jar : lib / velocity . jar : lib / velocity - tools . jar : lib / wsdl4j . jar : lib / wstx . jar : lib / xalan . jar : lib / xbean . jar : lib / xbean - spring . jar : lib / xercesImpl . jar : lib / xml - apis . jar : lib / xmlsec . jar : lib / xmltask . jar : lib / xpp3 . jar : lib / xsdlib - 20030807 . jar : lib / xstream . jar : lib / xuggle - xuggler - noarch . jar : lib / z_j2ee - 1 . 4 . jar : liferay . jar" , string0 )
assertEquals ( "Java ( TM ) SE Runtime Environment" , string0 )
assertEquals ( "Sun Microsystems Inc . " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , javaDetector0 . isIBM ( ) )
assertNotNull ( string0 )
assertNotNull ( textFormatter0 )
assertEquals ( "W { ju { > gv4~k" , string0 )
assertEquals ( "d^1 { d#20m$p" , string0 )
assertNotNull ( string0 )
assertEquals ( " * & ! < t ] v : `" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "String is null" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "2 ) " , string0 )
assertEquals ( "0k" , string0 )
assertNotNull ( string0 )
assertEquals ( "$xow ) gl | $ & . { t8" , string0 )
assertEquals ( " * & ! < t ] v : `" , string0 )
assertNotNull ( string0 )
assertEquals ( " ] 2q - bc ! q | t > pn" , string0 )
assertEquals ( "CN ( " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " * & ! < t ] v : `" , string0 )
assertEquals ( " - R1 . 8ies" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " [ _a - zA - Z ] + [ _a - zA - Z0 - 9 ] * ses" , string0 )
assertEquals ( " [ _a - zA - Z ] + [ _a - zA - Z0 - 9 ] * s" , string0 )
assertNotNull ( string0 )
assertEquals ( " * & ! < t ] v : `" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "c > / + w . 5cE | 3'G / v" , string0 )
assertEquals ( "c > / + w . 5cE | 3'G / v" , string0 )
assertEquals ( "cn ( " , string0 )
assertNotNull ( string0 )
assertEquals ( "p > / + Np ! Kw4Wl [ " , string0 )
assertEquals ( "HQ" , string0 )
assertEquals ( "qw" , string0 )
assertEquals ( "va6 [ 48zb / 4 , i > f" , string0 )
assertNotNull ( string0 )
assertNotNull ( packagingUtil0 )
assertNotNull ( stackTraceUtil0 )
assertNotNull ( rulesResourceRetriever0 )
assertNull ( string0 )
assertEquals ( "M = " , rulesResourceRetriever0 . getRulesLanguage ( ) )
assertNull ( rulesResourceRetriever0 . getRulesLanguage ( ) )
assertEquals ( "Bm : YUmxsqL ) " , string0 )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , query0 . getIdentifier ( ) )
assertEquals ( "STANDARD" , queryType0 . toString ( ) )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , string0 )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , query0 . getIdentifier ( ) )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , query0 . getIdentifier ( ) )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , query0 . getIdentifier ( ) )
assertEquals ( "4# ; qKiS@PR0p ! U%k2 = " , query0 . getQueryName ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , byteArrayReportResultContainer1 . hasError ( ) )
assertEquals ( " ] + HS / / 1IP8" , string0 )
assertEquals ( false , byteArrayReportResultContainer0 . hasError ( ) )
assertNotNull ( unsyncByteArrayOutputStream0 )
assertEquals ( false , boolean0 )
assertEquals ( "$ ] 2_" , string0 )
assertEquals ( 5 , date0 . getHours ( ) )
assertNull ( inputStream0 )
assertEquals ( ReportFormat . RTF , reportRequest0 . getReportFormat ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( ReportFormat . PDF , reportRequest0 . getReportFormat ( ) )
assertEquals ( ReportFormat . RTF , reportRequest0 . getReportFormat ( ) )
assertSame ( reportRequestContext1 , reportRequestContext0 )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertSame ( contextClassloaderReportDesignRetriever0 , contextClassloaderReportDesignRetriever1 )
assertEquals ( "txt" , reportFormat0 . toString ( ) )
assertEquals ( ReportFormat . CSV , reportFormat0 )
assertEquals ( "csv" , string0 )
assertEquals ( ReportFormat . HTML , reportFormat0 )
assertEquals ( ReportFormat . PDF , reportFormat0 )
assertEquals ( ReportFormat . RTF , reportFormat0 )
assertEquals ( ReportFormat . TXT , reportFormat0 )
assertEquals ( ReportFormat . XLS , reportFormat0 )
assertEquals ( ReportFormat . XML , reportFormat0 )
assertEquals ( ReportDataSourceType . CSV , reportRequestContext0 . getReportDataSourceType ( ) )
assertNull ( serializable0 )
assertSame ( reportDataSourceType0 , reportDataSourceType1 )
assertEquals ( ReportDataSourceType . CSV , reportDataSourceType0 )
assertEquals ( "csv" , string0 )
assertEquals ( ReportDataSourceType . EMPTY , reportDataSourceType0 )
assertEquals ( ReportDataSourceType . PORTAL , reportDataSourceType0 )
assertEquals ( ReportDataSourceType . JDBC , reportDataSourceType0 )
assertEquals ( ReportDataSourceType . XML , reportDataSourceType0 )
assertEquals ( ReportDataSourceType . XLS , reportDataSourceType0 )
assertEquals ( "" , string0 )
assertNotNull ( unsyncByteArrayInputStream0 )
assertNotNull ( date1 )
assertEquals ( true , hashMap0 . isEmpty ( ) )
assertEquals ( 1372738128447L , date0 . getTime ( ) )
assertEquals ( "" , string0 )
assertNull ( byteArrayReportResultContainer0 . getReportName ( ) )
assertEquals ( false , byteArrayReportResultContainer0 . hasError ( ) )
assertEquals ( 4 , int0 )
assertEquals ( 3 , int0 )
assertEquals ( 0 , camelCaseUpgradePortletPreferences0 . getThreshold ( ) )
assertEquals ( 0 , int0 )
assertNull ( valueMapper0 )
assertEquals ( "" , string0 )
assertEquals ( 0 . 0F , integer1 . floatValue ( ) , 0 . 01F )
assertEquals ( "" , tempUpgradeColumnImpl0 . getName ( ) )
assertEquals ( 0L , integer1 . longValue ( ) )
assertEquals ( "e@ } * " , dateUpgradeColumnImpl0 . getName ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "e@ } * " , string0 )
assertEquals ( "e@ } * " , dateUpgradeColumnImpl0 . getName ( ) )
assertSame ( integer1 , integer0 )
assertEquals ( ( - 1 . 0 ) , integer1 . doubleValue ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0L , ( long ) long0 )
assertEquals ( 0L , ( long ) long0 )
assertNotNull ( valueMapperUtil0 )
assertEquals ( " < t | " , swapUpgradeColumnImpl0 . getName ( ) )
assertEquals ( 0 , ( int ) integer0 )
assertEquals ( 0 , memoryValueMapper0 . size ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "nqX6h`T7 : #9 . 13 / M - " , string0 )
assertEquals ( "Ze { V4v : 2nfNZ3K ; FmNV" , string0 )
assertEquals ( "nqX6h`T7 : #9 . 13 / M - " , string0 )
assertEquals ( "Ze { V4v : 2nfNZ3K ; FmNV" , string0 )
assertEquals ( "Ze { V4v : 2nfNZ3K ; FmNV" , string0 )
assertEquals ( " { startTime = 0 , endTime = 0 , payload = null , errorMessage = null , errorStackTrace = null } " , messageStatus0 . toString ( ) )
assertNull ( messageStatus0 . getExceptionMessage ( ) )
assertNull ( object0 )
assertNotNull ( string0 )
assertEquals ( false , messageStatus0 . hasException ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertNull ( messageListener0 )
assertNull ( instrumentingClassLoader0 )
assertEquals ( 0L , destinationStatistics0 . getSentMessageCount ( ) )
assertEquals ( "" , synchronousDestination0 . getName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , destinationStatistics0 . getMaxThreadPoolSize ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , destinationStatistics0 . getActiveThreadCount ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , long0 )
assertEquals ( 0 , destinationStatistics0 . getLargestThreadCount ( ) )
assertEquals ( ( - 1L ) , destinationStatistics0 . getPendingMessageCount ( ) )
assertEquals ( 0 , destinationStatistics0 . getMinThreadPoolSize ( ) )
assertEquals ( 0 , destinationStatistics0 . getActiveThreadCount ( ) )
assertEquals ( 0 , destinationStatistics0 . getCurrentThreadCount ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , int0 )
assertEquals ( 2 , parallelDestination0 . getWorkersCoreSize ( ) )
assertEquals ( 2147483647 , serialDestination0 . getMaximumQueueSize ( ) )
assertEquals ( 1 , serialDestination0 . getWorkersCoreSize ( ) )
assertEquals ( - 9 , serialDestination0 . getMaximumQueueSize ( ) )
assertEquals ( 1 , serialDestination0 . getWorkersMaxSize ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 2147483647 , parallelDestination0 . getMaximumQueueSize ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { companyId = 0 } } " , message0 . toString ( ) )
assertEquals ( 2147483647 , serialDestination0 . getMaximumQueueSize ( ) )
assertNull ( messageSender0 )
assertEquals ( "" , parallelDestination0 . getName ( ) )
assertEquals ( "" , synchronousDestination0 . getName ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , synchronousDestination0 . isRegistered ( ) )
assertEquals ( true , synchronousDestination0 . isRegistered ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 1 , synchronousDestination0 . getMessageListenerCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , synchronousDestination0 . getMessageListenerCount ( ) )
assertEquals ( false , synchronousDestination0 . isRegistered ( ) )
assertEquals ( "" , synchronousDestination0 . getName ( ) )
assertEquals ( 1 , serialDestination0 . getMessageListenerCount ( ) )
assertEquals ( false , synchronousDestination0 . isRegistered ( ) )
assertEquals ( false , synchronousDestination0 . isRegistered ( ) )
assertEquals ( 1 , synchronousDestination0 . getMessageListenerCount ( ) )
assertNull ( map0 )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = ? Q$OG + , payload = null , values = null } " , message0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "null" , string0 )
assertNull ( message0 . getResponseDestinationName ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = false , values = null } " , message0 . toString ( ) )
assertNull ( object0 )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = null } " , string0 )
assertNull ( string0 )
assertEquals ( "4" , message0 . getDestinationName ( ) )
assertNull ( object0 )
assertEquals ( "0ojcQP + " , message0 . getResponseDestinationName ( ) )
assertNotNull ( message1 )
assertNotSame ( message0 , message1 )
assertEquals ( 0L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { $h3u8 = false } } " , message0 . toString ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { null = 1152 . 9550895462382 } } " , message0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { ? Q$OG + = - 28 } } " , message0 . toString ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { ? Q$OG + = - 28 } } " , message0 . toString ( ) )
assertNull ( message0 . getDestinationName ( ) )
assertNull ( message0 . getDestinationName ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = { ? Q$OG + = - 28 } } " , message0 . toString ( ) )
assertNull ( message0 . getResponseDestinationName ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = null , payload = null , values = null } " , message0 . toString ( ) )
assertNull ( message0 . getResponseDestinationName ( ) )
assertNull ( message0 . getResponseId ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( true , collection0 . isEmpty ( ) )
assertNull ( destination0 )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , collection0 . size ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertNull ( destination0 )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 1 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( 2 , parallelDestination0 . getWorkersCoreSize ( ) )
assertEquals ( false , synchronousDestination0 . isRegistered ( ) )
assertEquals ( true , parallelDestination0 . isRegistered ( ) )
assertEquals ( "" , synchronousDestination0 . getName ( ) )
assertNull ( messageSender0 )
assertNull ( synchronousMessageSender0 )
assertNull ( singleDestinationMessageSender0 )
assertNull ( singleDestinationSynchronousMessageSender0 )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertNull ( message0 . getDestinationName ( ) )
assertNull ( message0 . getResponseDestinationName ( ) )
assertEquals ( false , proxyResponse0 . hasError ( ) )
assertEquals ( false , proxyResponse0 . hasError ( ) )
assertNull ( object0 )
assertEquals ( false , boolean0 )
assertNotNull ( messageValuesThreadLocal0 )
assertNull ( hashMap0 )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( " { } " , hashMap0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , proxyModeThreadLocal0 . isForceSync ( ) )
assertEquals ( "0" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , objectName0 . isDomainPattern ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( "17" , destinationStatisticsManager0 . getLastRefresh ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "host = localhost , product = Portal , type = MessageBusManager" , objectName0 . getCanonicalKeyPropertyListString ( ) )
assertNotNull ( objectName0 )
assertEquals ( 5 , parallelDestination0 . getWorkersMaxSize ( ) )
assertEquals ( 0 , parallelDestination0 . getMessageListenerCount ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertEquals ( "d76922e6 - 2b48 - 4c50 - b412 - 087aae803b5f" , portalUUIDImpl0 . generate ( ) )
assertNull ( object0 )
assertNull ( message0 . getResponseDestinationName ( ) )
assertEquals ( " { destinationName = null , response = null , responseDestinationName = null , responseId = , payload = null , values = null } " , message0 . toString ( ) )
assertEquals ( "c04c351d - c3ad - 4e28 - 88b3 - 33fb82cde891" , portalUUIDImpl0 . generate ( ) )
assertEquals ( "e9c2164d - c3a1 - 48d2 - bf5c - 4961d781d4c3" , portalUUIDImpl0 . generate ( ) )
assertEquals ( 0 , defaultMessageBus0 . getDestinationCount ( ) )
assertNotNull ( defaultSynchronousMessageSender0 )
assertEquals ( "fd2078e1 - 2999 - 43d7 - a7e0 - 54a43016589e" , portalUUIDImpl0 . generate ( ) )
assertEquals ( "01e511e7 - d643 - 4e31 - a999 - 0004d06c580f" , portalUUIDImpl0 . generate ( ) )
assertNull ( object0 )
assertEquals ( true , linkedList0 . isEmpty ( ) )
assertNotNull ( recurrenceSerializer0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739754940 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GMT\" , offset = 0 , dstSavings = 0 , useDaylight = false , transitions = 0 , lastRule = null ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 35 , SECOND = 54 , MILLISECOND = 940 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "0 58 13 ? 5 ? 2089 / 1" , string0 )
assertEquals ( "43 43 19 13 9 ? 46" , string0 )
assertEquals ( 1372739787070L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739807682 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GMT\" , offset = 0 , dstSavings = 0 , useDaylight = false , transitions = 0 , lastRule = null ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 36 , SECOND = 47 , MILLISECOND = 682 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372739818073L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739838952L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "com . liferay . portal . kernel . cal . Recurrence [ dtStart = java . util . GregorianCalendar [ time = ? , areFieldsSet = false , areAllFieldsSet = false , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"UTC\" , offset = 0 , dstSavings = 0 , useDaylight = false , transitions = 0 , lastRule = null ] , firstDayOfWeek = 2 , minimalDaysInFirstWeek = 4 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 37 , SECOND = 29 , MILLISECOND = 422 , ZONE_OFFSET = ? , DST_OFFSET = ? ] , duration = com . liferay . portal . kernel . cal . Duration [ weeks = 0 , days = 5 , hours = 5 , minutes = 5 , seconds = 5 ] , frequency = 5 , interval = 1 , until = null , byDay = null , byMonthDay = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] , byYearDay = null , byWeekNo = null , byMonth = null ] " , recurrence0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739864436 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"GMT\" , offset = 0 , dstSavings = 0 , useDaylight = false , transitions = 0 , lastRule = null ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 37 , SECOND = 44 , MILLISECOND = 436 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "0 58 13 6 5 6 2089" , string0 )
assertNotNull ( string0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739999512 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = f , offset = 0 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = - 2042 , endTime = 1391 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 39 , SECOND = 59 , MILLISECOND = 512 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372740010370 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = f , offset = 0 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = - 2042 , endTime = 1391 , endTimeMode = 0 ] , firstDayOfWeek = 2 , minimalDaysInFirstWeek = 4 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 40 , SECOND = 10 , MILLISECOND = 370 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372740010821L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372740011979 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = f , offset = 0 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = - 2042 , endTime = 1391 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 40 , SECOND = 11 , MILLISECOND = 979 , ZONE_OFFSET = 0 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372740022686L , gregorianCalendar0 . getTimeInMillis ( ) )
assertNotSame ( dayAndPosition1 , dayAndPosition0 )
assertNotNull ( dayAndPosition1 )
assertNotNull ( dayAndPosition0 )
assertEquals ( "com . liferay . portal . kernel . cal . DayAndPosition [ day = 0 , position = 0 ] " , dayAndPosition0 . toString ( ) )
assertNotNull ( dayAndPosition0 )
assertEquals ( "com . liferay . portal . kernel . cal . DayAndPosition [ day = 3 , position = - 1 ] " , dayAndPosition0 . toString ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( dayAndPosition0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , dayAndPosition0 . getDayPosition ( ) )
assertNotNull ( dayAndPosition1 )
assertEquals ( 0 , dayAndPosition0 . getDayPosition ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , long0 )
assertNotSame ( duration1 , duration0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1222774000L , duration0 . getInterval ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , duration0 . getDays ( ) )
assertEquals ( 0 , duration0 . getHours ( ) )
assertEquals ( 31 , duration0 . getMinutes ( ) )
assertEquals ( 0L , duration0 . getInterval ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738824596 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 20 , SECOND = 24 , MILLISECOND = 597 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738872476 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 21 , SECOND = 12 , MILLISECOND = 477 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372738894584L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738908864 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 21 , SECOND = 48 , MILLISECOND = 865 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738921436 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 22 , SECOND = 1 , MILLISECOND = 437 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738934070 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 22 , SECOND = 14 , MILLISECOND = 71 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738944798 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 22 , SECOND = 24 , MILLISECOND = 799 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372738955713L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372738967553 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 22 , SECOND = 47 , MILLISECOND = 554 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372738980399L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372738993045L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739004022 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 23 , SECOND = 24 , MILLISECOND = 23 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739034412 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 23 , SECOND = 54 , MILLISECOND = 413 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372739045293L , gregorianCalendar0 . getTimeInMillis ( ) )
assertNotNull ( recurrence0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739074318 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 24 , SECOND = 34 , MILLISECOND = 319 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372739092416L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739103299L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739121582L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739132686L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739156581L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739187285L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739255712L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739266868 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 27 , SECOND = 46 , MILLISECOND = 869 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739300762 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 28 , SECOND = 20 , MILLISECOND = 763 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( 1372739327952L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( 1372739354922L , gregorianCalendar0 . getTimeInMillis ( ) )
assertEquals ( "java . util . GregorianCalendar [ time = 1372739394057 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = java . util . SimpleTimeZone [ id = - 1k + = ) {  , offset = 1 , dstSavings = 3600000 , useDaylight = false , startYear = 0 , startMode = 0 , startMonth = 0 , startDay = 0 , startDayOfWeek = 0 , startTime = 0 , startTimeMode = 0 , endMode = 0 , endMonth = 0 , endDay = 0 , endDayOfWeek = 0 , endTime = 0 , endTimeMode = 0 ] , firstDayOfWeek = 2 , minimalDaysInFirstWeek = 4 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 4 , HOUR_OF_DAY = 4 , MINUTE = 29 , SECOND = 54 , MILLISECOND = 58 , ZONE_OFFSET = 1 , DST_OFFSET = 0 ] " , gregorianCalendar0 . toString ( ) )
assertNotNull ( atomCollectionAdapterRegistryUtil0 )
assertNull ( atomEntryContent0 . getSrcLink ( ) )
assertEquals ( AtomEntryContent . Type . HTML , atomEntryContent_Type0 )
assertEquals ( "Y\"" , atomEntryContent0 . getText ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( AtomEntryContent . Type . HTML , atomEntryContent0 . getType ( ) )
assertEquals ( AtomEntryContent . Type . HTML , atomEntryContent0 . getType ( ) )
assertEquals ( AtomEntryContent . Type . XHTML , atomEntryContent0 . getType ( ) )
assertNull ( string0 )
assertNotNull ( dependencyManagementThreadLocal0 )
assertEquals ( "false" , boolean0 . toString ( ) )
assertEquals ( 0 , mockServletContext1 . getMinorVersion ( ) )
assertSame ( classLoader0 , classLoader1 )
assertNull ( hotDeployEvent0 . getServletContextName ( ) )
assertNull ( pluginPackage0 )
assertNull ( string0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertNull ( sandboxDeployDir0 )
assertNotNull ( sandboxDeployScanner0 )
assertNotNull ( autoDeployScanner0 )
assertEquals ( 57L , autoDeployDir0 . getInterval ( ) )
assertEquals ( 57L , autoDeployDir0 . getInterval ( ) )
assertEquals ( ( - 836L ) , autoDeployDir0 . getInterval ( ) )
assertEquals ( 9223372036854775805L , autoDeployDir0 . getInterval ( ) )
assertEquals ( "liferay - portlet - ext . tld" , autoDeployDir0 . getName ( ) )
assertEquals ( 57L , long0 )
assertEquals ( ( - 1124L ) , autoDeployDir0 . getInterval ( ) )
assertEquals ( "liferay - portlet - ext . tld" , autoDeployDir0 . getName ( ) )
assertEquals ( "" , autoDeployDir0 . getName ( ) )
assertEquals ( ( - 836L ) , autoDeployDir0 . getInterval ( ) )
assertEquals ( ( - 1124L ) , autoDeployDir0 . getInterval ( ) )
assertEquals ( 10000L , autoDeployDir0 . getInterval ( ) )
assertEquals ( " < " , autoDeployDir0 . getName ( ) )
assertEquals ( "" , autoDeployDir0 . getName ( ) )
assertNull ( autoDeployDir0 )
assertNull ( string0 )
assertNull ( autoDeploymentContext0 . getContext ( ) )
assertNull ( autoDeploymentContext0 . getDestDir ( ) )
assertEquals ( "presence : " , autoDeploymentContext0 . getDestDir ( ) )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "19f9bcf8 - 2fbc - 47f3 - b58a - 45ae913d442a" , portalUUIDUtil0 . generate ( ) )
assertNotNull ( string0 )
assertNull ( string1 )
assertEquals ( "693e9af8 - 4d3d - 3cc7 - 9e64 - 0e005bdc5e2e" , string0 )
assertNull ( threadPoolExecutor1 )
assertNull ( object0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertNull ( object0 )
assertEquals ( 534 . 26605F , float0 , 0 . 01F )
assertEquals ( ( short ) ( - 649 ) , short0 )
assertEquals ( 0 , int0 )
assertEquals ( "I1 ] 1BV , AyXl^udJ ; HG" , string0 )
assertEquals ( ( byte ) 18 , byte0 )
assertEquals ( 669L , long0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( true , boolean0 )
assertEquals ( ( byte ) 0 , byte0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 1 , int0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertNull ( class0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( 0L , long0 )
assertEquals ( 31 . 0F , float0 , 0 . 01F )
assertEquals ( ( byte ) 21 , byte0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( classLoader0 )
assertNotNull ( portalBeanLocatorUtil0 )
assertNotNull ( portletBeanLocatorUtil0 )
assertNull ( object0 )
assertEquals ( true , boolean0 )
assertEquals ( true , mergeLayoutPrototypesThreadLocal0 . isInProgress ( ) )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNotNull ( auditMessage0 )
assertNull ( auditRequestThreadLocal0 . getServerName ( ) )
assertEquals ( 0 , auditRequestThreadLocal0 . getServerPort ( ) )
assertNotNull ( auditRequestThreadLocal0 )
assertNull ( auditRequestThreadLocal0 . getClientIP ( ) )
assertNull ( string0 )
assertNull ( auditRequestThreadLocal0 . getClientIP ( ) )
assertNull ( string0 )
assertNull ( auditRequestThreadLocal1 . getClientIP ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , auditRequestThreadLocal0 . getRealUserId ( ) )
assertEquals ( 1 , float1 . intValue ( ) )
assertNotSame ( numberIncrement0 , increment0 )
assertEquals ( 310 . 7509460449219 , float0 . doubleValue ( ) , 0 . 01D )
assertNotSame ( numberIncrement0 , increment0 )
assertEquals ( 48 , double0 . byteValue ( ) )
assertEquals ( 0L , ( long ) long1 )
assertEquals ( 2030 . 0F , long1 . floatValue ( ) , 0 . 01F )
assertNull ( number0 )
assertEquals ( "2030" , long1 . toString ( ) )
assertNotSame ( numberIncrement0 , increment0 )
assertEquals ( 2030 , long1 . shortValue ( ) )
assertNull ( number0 )
assertEquals ( "2030" , long1 . toString ( ) )
assertNotNull ( incrementFactory0 )
assertNotNull ( increment0 )
assertEquals ( "text ( ) " , dOMText1 . getUniquePath ( ) )
assertNotNull ( string0 )
assertEquals ( 1570094838 , int0 )
assertNotNull ( string0 )
assertEquals ( ( short ) 13 , short0 )
assertEquals ( "Q , " , string0 )
assertNull ( namespace0 )
assertEquals ( "namespace : : * [ name ( ) = '' ] " , string0 )
assertEquals ( "" , string0 )
assertEquals ( "Cannot retrieve the name of an unnamed savepoint . " , elementImpl0 . getText ( ) )
assertEquals ( "\n < anyType / > " , string0 )
assertEquals ( "" , elementImpl1 . getTextTrim ( ) )
assertEquals ( "\n < / > " , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , elementImpl1 . attributeCount ( ) )
assertEquals ( " < GY`dy ? v`BLMZ : > < ! - - GY`dy ? v`BLMZ : - - > < / GY`dy ? v`BLMZ : > " , elementImpl0 . asXML ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertNull ( string0 )
assertEquals ( 1 , dOMElement0 . nodeCount ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 1 , elementImpl0 . attributeCount ( ) )
assertEquals ( true , dOMElement0 . hasContent ( ) )
assertEquals ( "GY`dy ? v`BLMZ : " , string0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( " { H | ; \" , " , string0 )
assertEquals ( "" , string0 )
assertEquals ( 280832969 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "\n < GY`dy ? v`BLMZ : xmlns = \"ZIkGn . UHqL\" ZIkGn . UHqL = \"GY`dy ? v`BLMZ : \" / > " , elementImpl0 . formattedString ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( " ) . " , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , elementImpl0 . isTextOnly ( ) )
assertEquals ( "" , elementImpl0 . getName ( ) )
assertNull ( string0 )
assertEquals ( true , defaultElement0 . hasContent ( ) )
assertFalse ( elementImpl0 . equals ( elementImpl1 ) )
assertNull ( string0 )
assertEquals ( " < anyType xmlns : anyType = \"anyType\" > < / anyType > " , elementImpl0 . asXML ( ) )
assertNotNull ( string0 )
assertEquals ( "anyType" , string0 )
assertEquals ( true , userDataElement0 . hasContent ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( "5BU" , elementImpl0 . getTextTrim ( ) )
assertEquals ( "" , elementImpl0 . getNamespaceURI ( ) )
assertEquals ( true , dOMElement0 . hasChildNodes ( ) )
assertEquals ( true , elementImpl0 . hasContent ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNull ( attributeImpl0 )
assertNull ( attributeImpl0 )
assertNull ( elementImpl1 )
assertNull ( elementImpl1 )
assertEquals ( "namespace : : * [ name ( ) = '' ] " , namespaceImpl0 . getUniquePath ( ) )
assertNull ( namespaceImpl0 )
assertEquals ( "" , namespaceImpl0 . formattedString ( ) )
assertNull ( namespaceImpl0 )
assertNull ( qNameImpl0 )
assertNull ( nodeImpl0 )
assertEquals ( "hB_% > N0p\"5CE1K" , elementImpl0 . getName ( ) )
assertEquals ( 1 , elementImpl0 . nodeCount ( ) )
assertEquals ( " < > < ~ / > < / > " , elementImpl0 . compactString ( ) )
assertEquals ( true , dOMElement0 . hasContent ( ) )
assertEquals ( 1 , elementImpl0 . nodeCount ( ) )
assertNotNull ( namespaceImpl0 )
assertEquals ( "" , elementImpl0 . getName ( ) )
assertEquals ( " < Xn ? JHNp ! . CC { d / > " , elementImpl0 . asXML ( ) )
assertEquals ( "" , documentImpl0 . getXMLEncoding ( ) )
assertEquals ( true , elementImpl0 . isRootElement ( ) )
assertEquals ( "xmlns = \"\"" , namespaceImpl0 . asXML ( ) )
assertEquals ( " [ XPath : msg . obj . getter . parms ] " , xPathImpl0 . toString ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "0~A , tYtm [ " , textImpl0 . compactString ( ) )
assertNull ( documentImpl0 . getXMLEncoding ( ) )
assertEquals ( " & ; " , entityImpl0 . asXML ( ) )
assertEquals ( true , list1 . isEmpty ( ) )
assertNotNull ( list1 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , list1 . isEmpty ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertNotNull ( string0 )
assertNull ( cDATA0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 271455300 , int0 )
assertNull ( processingInstruction0 )
assertNull ( string0 )
assertEquals ( 0 , map0 . size ( ) )
assertNull ( string0 )
assertEquals ( " < ? P } H null ? > " , processingInstructionImpl0 . formattedString ( ) )
assertNotNull ( wstxInputFactory0 )
assertNotNull ( stAXReaderUtil0 )
assertEquals ( 2071084086 , int0 )
assertNotNull ( string0 )
assertSame ( defaultComment1 , defaultComment0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 1 , dOMElement0 . nodeCount ( ) )
assertFalse ( elementImpl0 . equals ( elementImpl1 ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( " < > < / > < / > " , elementImpl0 . asXML ( ) )
assertEquals ( " < wpJL@A b > < ! - - wpJL@A b - - > < / wpJL@A b > " , elementImpl0 . asXML ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 1957301071 , int0 )
assertEquals ( false , elementImpl0 . isReadOnly ( ) )
assertEquals ( "\n < > \n\t < / > \n < / > " , elementImpl0 . formattedString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , elementImpl0 . isTextOnly ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "" , elementImpl0 . getStringValue ( ) )
assertNull ( nodeImpl0 )
assertEquals ( "Week " , nodeImpl0 . getText ( ) )
assertEquals ( " / viyv ) $ | xB , / processing - instruction ( ) " , processingInstructionImpl0 . getPath ( ) )
assertNull ( processingInstructionImpl0 )
assertNotNull ( string0 )
assertNull ( entity0 )
assertNotNull ( translatedList0 )
assertNull ( dOMDocumentType1 . getName ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 1403961517 , int0 )
assertEquals ( 399933341 , int0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "F" , string0 )
assertEquals ( "F" , string0 )
assertSame ( qName0 , qName1 )
assertEquals ( 47806 , int0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "namespace : : * [ name ( ) = '' ] " , namespaceImpl0 . getXPathNameStep ( ) )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \" = 5a`h08qtBs9i < i0\" ? > \n < ! DOCTYPE = 5a`h08qtBs9i < i0 SYSTEM \" = 5a`h08qtBs9i < i0\" > " , defaultDocument0 . asXML ( ) )
assertNotNull ( elementImpl0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > \n < ! DOCTYPE > " , dOMDocument0 . asXML ( ) )
assertNull ( documentTypeImpl0 . getSystemId ( ) )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > \n < / > " , documentImpl0 . asXML ( ) )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \" ? KT\"k%aV$ ] / gu\" ? > \n < ! - - - - > " , defaultDocument0 . asXML ( ) )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > \n" , defaultDocument1 . asXML ( ) )
assertEquals ( 112501796 , int0 )
assertEquals ( false , dOMAttribute1 . hasAttributes ( ) )
assertEquals ( "" , string0 )
assertEquals ( " = \"soapActorName\"" , dOMAttribute0 . asXML ( ) )
assertEquals ( 1947576679 , int0 )
assertNotNull ( string0 )
assertEquals ( 13 , namespaceImpl0 . getNodeType ( ) )
assertEquals ( "" , qNameImpl0 . getNamespaceURI ( ) )
assertNull ( qNameImpl0 )
assertEquals ( "true" , boolean0 . toString ( ) )
assertEquals ( true , ( boolean ) boolean0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( liferayFunctionContext0 )
assertEquals ( "" , wikiPageTrashHandler0 . getSubcontainerModelName ( ) )
assertNull ( trashHandler0 )
assertEquals ( "" , blogsEntryTrashHandler0 . getRootContainerModelName ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "OFF" , string0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( ( - 1L ) , long0 )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 0L , companyStatistics0 . getCompanyId ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( "0" , companyStatistics0 . getWebId ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( 0L , requestStatistics0 . getRequestCount ( ) )
assertEquals ( "sT$c" , string0 )
assertEquals ( 0L , requestStatistics0 . getMinTime ( ) )
assertEquals ( 0L , requestStatistics0 . getAverageTime ( ) )
assertNull ( string0 )
assertEquals ( "sT$c" , string0 )
assertNull ( portletStatistics0 . getPortletId ( ) )
assertEquals ( "sT$c" , requestStatistics0 . getName ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( transactionAttribute0 )
assertNotNull ( liferayPersistenceUnitPostProcessor0 )
assertNull ( string0 )
assertEquals ( 1284652111211L , authenticatingHttpInvokerRequestExecutor0 . getUserId ( ) )
assertEquals ( 0L , long0 )
assertNotNull ( springUtil0 )
assertEquals ( "org . springframework . transaction . interceptor . MatchAlwaysTransactionAttributeSource : PROPAGATION_REQUIRED , ISOLATION_DEFAULT" , matchAlwaysTransactionAttributeSource0 . toString ( ) )
assertNotNull ( transactionAttributeBuilder0 )
assertNull ( transactionAttribute0 )
assertNotNull ( transactionManagerFactory0 )
assertNull ( defaultTransactionAttribute0 )
assertEquals ( "null" , string0 )
assertSame ( jSONSerializerImpl0 , jSONSerializerImpl1 )
assertSame ( jSONSerializerImpl1 , jSONSerializerImpl0 )
assertEquals ( 2 , jSONArrayImpl0 . length ( ) )
assertSame ( jSONArrayImpl1 , jSONArrayImpl0 )
assertEquals ( "" , string0 )
assertEquals ( " [ ] " , string0 )
assertEquals ( 1 , jSONArrayImpl0 . length ( ) )
assertEquals ( Double . NaN , double0 , 0 . 01D )
assertEquals ( 1 , jSONArrayImpl0 . length ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0L , long0 )
assertEquals ( " [ 0 ] " , jSONArrayImpl0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertEquals ( " [ false ] " , jSONArrayImpl0 . toString ( ) )
assertNotNull ( stringWriter1 )
assertEquals ( " [ ] " , string0 )
assertEquals ( " [ { \"bytes\" : [ 91 , 34 , 91 , 93 , 34 , 93 ] , \"empty\" : false } ] " , jSONArrayImpl0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertNull ( jSONArrayImpl1 )
assertNull ( jSONObjectImpl0 )
assertNotSame ( jSONObjectImpl0 , jSONObjectImpl1 )
assertEquals ( " { } " , jSONObjectImpl1 . toString ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( true , boolean0 )
assertNull ( object0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertNotNull ( charArrayWriter1 )
assertEquals ( ( - 183 ) , int0 )
assertEquals ( 0L , long0 )
assertEquals ( " { } " , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( " [ \"bytes\" , \"empty\" ] " , jSONArrayImpl0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , jSONObjectImpl0 . length ( ) )
assertEquals ( " { } " , string0 )
assertEquals ( Double . NaN , double0 , 0 . 01D )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 1216L , long0 )
assertEquals ( "borderPainted" , string0 )
assertNull ( jSONArrayImpl0 )
assertNull ( jSONObjectImpl1 )
assertSame ( jSONObjectImpl0 , jSONObjectImpl1 )
assertSame ( jSONObjectImpl1 , jSONObjectImpl0 )
assertSame ( jSONObjectImpl0 , jSONObjectImpl1 )
assertEquals ( 0 , jSONObjectImpl1 . length ( ) )
assertSame ( jSONObjectImpl1 , jSONObjectImpl0 )
assertEquals ( " { } " , jSONObjectImpl1 . toString ( ) )
assertEquals ( " { } " , jSONObjectImpl1 . toString ( ) )
assertSame ( jSONObjectImpl1 , jSONObjectImpl0 )
assertSame ( jSONObjectImpl1 , jSONObjectImpl0 )
assertNotNull ( jSONInit0 )
assertNotNull ( jSONDeserializer0 )
assertEquals ( "2qo" , string0 )
assertNotNull ( jSONDeserializer0 )
assertSame ( stringArray1 , stringArray0 )
assertSame ( stringArray1 , stringArray0 )
assertNotNull ( hashMap1 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( map0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( processedObject0 )
assertNotNull ( processedObject0 )
assertNotNull ( classArray0 )
assertNotNull ( classArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "text / html" , resourceRequestWrapper0 . getResponseContentType ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "3987" , string0 )
assertEquals ( "00 : 00 : 00 . 00" , string0 )
assertNotNull ( zipReaderFactoryImpl0 )
assertNotNull ( zipWriterFactoryImpl0 )
assertEquals ( "ear | jar | war | zip" , defaultArchiveDetector0 . getSuffixes ( ) )
assertNull ( string0 )
assertNull ( inputStream0 )
assertNull ( string0 )
assertNull ( inputStream0 )
assertNull ( string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( list0 )
assertNotNull ( addressServiceUtil0 )
assertNull ( lockLocalService0 )
assertNull ( layoutBranchService0 )
assertNotNull ( repositoryLocalServiceUtil0 )
assertNotNull ( portalLocalServiceUtil0 )
assertNull ( userLocalService0 )
assertNotNull ( teamLocalServiceUtil0 )
assertNull ( userService0 )
assertNull ( layoutSetService0 )
assertNotNull ( userGroupLocalServiceUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( passwordTrackerLocalServiceUtil0 )
assertNull ( layoutSetPrototypeService0 )
assertNull ( userIdMapperLocalService0 )
assertNull ( phoneLocalService0 )
assertNull ( ticketLocalService0 )
assertNull ( portalService0 )
assertNotNull ( groupLocalServiceUtil0 )
assertNotNull ( themeLocalServiceUtil0 )
assertNotNull ( membershipRequestServiceUtil0 )
assertNotNull ( pluginSettingLocalServiceUtil0 )
assertNotNull ( resourcePermissionServiceUtil0 )
assertNull ( userTrackerPathLocalService0 )
assertNull ( quartzLocalService0 )
assertNull ( themeService0 )
assertNull ( passwordPolicyLocalService0 )
assertNull ( emailAddressService0 )
assertNotNull ( organizationServiceUtil0 )
assertNull ( orgLaborService0 )
assertNull ( userGroupLocalService0 )
assertNull ( contactService0 )
assertNull ( userGroupGroupRoleService0 )
assertNull ( companyService0 )
assertNotNull ( portalServiceUtil0 )
assertNotNull ( emailAddressServiceUtil0 )
assertNull ( membershipRequestService0 )
assertNull ( emailAddressLocalService0 )
assertNotNull ( portletPreferencesLocalServiceUtil0 )
assertNull ( permissionService0 )
assertNotNull ( themeServiceUtil0 )
assertNotNull ( userNotificationEventLocalServiceUtil0 )
assertNull ( themeLocalService0 )
assertNull ( passwordTrackerLocalService0 )
assertNull ( passwordPolicyRelLocalService0 )
assertNotNull ( layoutSetLocalServiceUtil0 )
assertNotNull ( portletServiceUtil0 )
assertNull ( countryService0 )
assertNull ( organizationService0 )
assertNull ( userGroupRoleService0 )
assertNull ( orgLaborLocalService0 )
assertNull ( passwordPolicyService0 )
assertNull ( layoutSetBranchLocalService0 )
assertNull ( layoutBranchLocalService0 )
assertNotNull ( orgLaborServiceUtil0 )
assertNull ( portalLocalService0 )
assertNull ( repositoryLocalService0 )
assertNull ( resourceActionLocalService0 )
assertNull ( repositoryService0 )
assertNotNull ( layoutSetPrototypeServiceUtil0 )
assertNotNull ( organizationLocalServiceUtil0 )
assertNull ( portletPreferencesLocalService0 )
assertNotNull ( accountServiceUtil0 )
assertNotNull ( userGroupGroupRoleServiceUtil0 )
assertNull ( teamLocalService0 )
assertNotNull ( layoutBranchLocalServiceUtil0 )
assertNull ( virtualHostLocalService0 )
assertNotNull ( pluginSettingServiceUtil0 )
assertNull ( portletLocalService0 )
assertNull ( portletPreferencesService0 )
assertNotNull ( webDAVPropsLocalServiceUtil0 )
assertNull ( imageService0 )
assertNull ( membershipRequestLocalService0 )
assertNull ( accountLocalService0 )
assertNull ( layoutSetBranchService0 )
assertNull ( userGroupRoleLocalService0 )
assertNull ( listTypeService0 )
assertNull ( organizationLocalService0 )
assertNotNull ( layoutBranchServiceUtil0 )
assertNull ( resourcePermissionService0 )
assertNull ( resourceTypePermissionLocalService0 )
assertNull ( teamService0 )
assertNotNull ( ticketLocalServiceUtil0 )
assertNotNull ( contactServiceUtil0 )
assertNotNull ( passwordPolicyServiceUtil0 )
assertNotNull ( layoutSetServiceUtil0 )
assertNotNull ( releaseLocalServiceUtil0 )
assertNull ( layoutTemplateLocalService0 )
assertNotNull ( layoutSetBranchLocalServiceUtil0 )
assertNotNull ( layoutSetPrototypeLocalServiceUtil0 )
assertNull ( layoutSetLocalService0 )
assertNotNull ( userLocalServiceUtil0 )
assertNotNull ( permissionServiceUtil0 )
assertNull ( regionService0 )
assertNotNull ( contactLocalServiceUtil0 )
assertNull ( portletService0 )
assertNotNull ( listTypeServiceUtil0 )
assertNull ( portalPreferencesLocalService0 )
assertNull ( userTrackerLocalService0 )
assertNotNull ( portalPreferencesLocalServiceUtil0 )
assertNotNull ( resourceBlockLocalServiceUtil0 )
assertNotNull ( repositoryServiceUtil0 )
assertNull ( pluginSettingService0 )
assertNotNull ( layoutTemplateLocalServiceUtil0 )
assertNull ( pluginSettingLocalService0 )
assertNotNull ( userServiceUtil0 )
assertNotNull ( virtualHostLocalServiceUtil0 )
assertNotNull ( regionServiceUtil0 )
assertNull ( phoneService0 )
assertNull ( releaseLocalService0 )
assertNotNull ( userTrackerLocalServiceUtil0 )
assertNotNull ( portletItemLocalServiceUtil0 )
assertNotNull ( teamServiceUtil0 )
assertNotNull ( layoutSetBranchServiceUtil0 )
assertNotNull ( userGroupServiceUtil0 )
assertNull ( userGroupService0 )
assertNull ( addressService0 )
assertNull ( portletItemLocalService0 )
assertNotNull ( phoneServiceUtil0 )
assertNull ( repositoryEntryLocalService0 )
assertNull ( accountService0 )
assertNotNull ( countryServiceUtil0 )
assertNotNull ( quartzLocalServiceUtil0 )
assertNotNull ( portletPreferencesServiceUtil0 )
assertNotNull ( userGroupRoleServiceUtil0 )
assertNotNull ( imageServiceUtil0 )
assertNotNull ( companyServiceUtil0 )
assertNotNull ( layoutSetPrototypeServiceHttp0 )
assertNotNull ( themeServiceSoap0 )
assertNotNull ( layoutBranchServiceHttp0 )
assertNotNull ( regionServiceSoap0 )
assertNotNull ( resourceBlockServiceHttp0 )
assertNotNull ( listTypeServiceHttp0 )
assertNotNull ( userGroupServiceSoap0 )
assertNotNull ( userGroupGroupRoleServiceHttp0 )
assertNotNull ( organizationServiceSoap0 )
assertNotNull ( layoutPrototypeServiceSoap0 )
assertNotNull ( userGroupGroupRoleServiceSoap0 )
assertNotNull ( userGroupRoleServiceHttp0 )
assertNotNull ( teamServiceSoap0 )
assertNotNull ( imageServiceSoap0 )
assertNotNull ( layoutSetBranchServiceSoap0 )
assertNotNull ( portalServiceSoap0 )
assertNotNull ( pluginSettingServiceSoap0 )
assertNotNull ( layoutRevisionServiceSoap0 )
assertNotNull ( permissionServiceSoap0 )
assertNotNull ( membershipRequestServiceHttp0 )
assertNotNull ( permissionServiceHttp0 )
assertNotNull ( resourceBlockServiceSoap0 )
assertNotNull ( membershipRequestServiceSoap0 )
assertNotNull ( websiteServiceSoap0 )
assertNotNull ( layoutServiceSoap0 )
assertNotNull ( phoneServiceSoap0 )
assertNotNull ( layoutSetBranchServiceHttp0 )
assertNotNull ( layoutBranchServiceSoap0 )
assertNotNull ( passwordPolicyServiceHttp0 )
assertNotNull ( teamServiceHttp0 )
assertNotNull ( roleServiceSoap0 )
assertNotNull ( portletPreferencesServiceSoap0 )
assertNotNull ( imageServiceHttp0 )
assertNotNull ( repositoryServiceHttp0 )
assertNotNull ( orgLaborServiceHttp0 )
assertNotNull ( layoutSetPrototypeServiceSoap0 )
assertNotNull ( portalServiceHttp0 )
assertNotNull ( orgLaborServiceSoap0 )
assertNotNull ( layoutSetServiceHttp0 )
assertNotNull ( phoneServiceHttp0 )
assertNotNull ( listTypeServiceSoap0 )
assertNotNull ( userGroupRoleServiceSoap0 )
assertNotNull ( passwordPolicyServiceSoap0 )
assertNotNull ( emailAddressServiceSoap0 )
assertNotNull ( groupServiceSoap0 )
assertNotNull ( websiteServiceHttp0 )
assertNotNull ( userGroupServiceHttp0 )
assertNotNull ( regionServiceHttp0 )
assertNotNull ( groupServiceHttp0 )
assertNotNull ( themeServiceHttp0 )
assertNotNull ( portletPreferencesServiceHttp0 )
assertNotNull ( layoutRevisionServiceHttp0 )
assertNotNull ( portletServiceSoap0 )
assertNotNull ( resourcePermissionServiceHttp0 )
assertNotNull ( userServiceHttp0 )
assertNotNull ( roleServiceHttp0 )
assertNotNull ( userServiceSoap0 )
assertNotNull ( pluginSettingServiceHttp0 )
assertNotNull ( portletServiceHttp0 )
assertNotNull ( organizationServiceHttp0 )
assertNotNull ( repositoryServiceSoap0 )
assertNotNull ( layoutPrototypeServiceHttp0 )
assertNotNull ( layoutSetServiceSoap0 )
assertNotNull ( resourcePermissionServiceSoap0 )
assertEquals ( 0 , list1 . size ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( " [ ] " , string0 )
assertEquals ( false , arrayList0 . isEmpty ( ) )
assertEquals ( 0 , arrayList0 . size ( ) )
assertEquals ( false , batchSessionImpl0 . isEnabled ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( passwordPolicyFinderUtil0 )
assertNotNull ( groupUtil0 )
assertNotNull ( resourcePermissionUtil0 )
assertEquals ( false , boolean0 )
assertNotNull ( layoutPrototypePermissionImpl0 )
assertEquals ( false , boolean0 )
assertEquals ( "1_LAYOUT_H + R't + < 8pyb ! u1 | 2 . { F" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( layoutSetPrototypePermissionImpl0 )
assertNotNull ( userGroupRolePermissionImpl0 )
assertEquals ( false , class1 . isMemberClass ( ) )
assertNull ( framework0 )
assertNotNull ( portalProfileFactory0 )
assertNull ( uRL0 )
assertEquals ( "beanshell" , string0 )
assertNotNull ( boboFacetCollector0 )
assertNotNull ( boboTermCollector0 )
assertEquals ( "M / Gi ? D3 . + F" , string0 )
assertEquals ( "" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertEquals ( " } - - ` + / i : : { } - - ` + / i : TO } - - ` + / i : } " , string0 )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertSame ( wildcardQueryImpl1 , wildcardQueryImpl0 )
assertNull ( queryTerm0 )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertSame ( booleanQueryImpl1 , booleanQueryImpl0 )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( false , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( true , booleanQueryImpl0 . hasClauses ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertSame ( termQueryImpl0 , termQueryImpl1 )
assertNull ( queryTerm0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( termQueryImpl0 )
assertEquals ( false , hashtable0 . isEmpty ( ) )
assertEquals ( true , stopFilter0 . getEnablePositionIncrements ( ) )
assertEquals ( 1 , int0 )
assertEquals ( true , termRangeQuery0 . includesLower ( ) )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertEquals ( "~u3'WH~ ; T6A8 : : [ : TO : } " , string0 )
assertEquals ( true , termRangeQueryImpl0 . includesLower ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertEquals ( false , termRangeQueryImpl0 . includesUpper ( ) )
assertEquals ( false , booleanQuery0 . isCoordDisabled ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , termRangeQueryImpl0 . includesUpper ( ) )
assertNotNull ( luceneFields0 )
assertEquals ( "_PORTLET_0_FIELD_" , string0 )
assertEquals ( 0 , field0 . getBinaryLength ( ) )
assertNotNull ( numericField0 )
assertEquals ( "stored , indexed < U_u7bIbcfr5e75 ] < 10 : - 1495 > " , field0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( true , field0 . isIndexed ( ) )
assertEquals ( "stored , indexed < : 1781 . 0 > " , field0 . toString ( ) )
assertEquals ( " } nG2@h_PORTLET_ } nG2@h_PORTLET_ } nG2@h_FIELD_ } nG2@h_PORTLET_ } nG2@h_FIELD_ } nG2@h" , string0 )
assertNotNull ( booleanClauseOccurTranslator0 )
assertEquals ( "MUST_NOT" , booleanClause_Occur0 . name ( ) )
assertEquals ( " + " , booleanClause_Occur0 . toString ( ) )
assertEquals ( "" , booleanClause_Occur0 . toString ( ) )
assertEquals ( true , booleanQuery1 . isCoordDisabled ( ) )
assertEquals ( 0 , booleanQuery1 . getMinimumNumberShouldMatch ( ) )
assertEquals ( "\" ? \"" , string0 )
assertEquals ( "Clone not supported : : 950" , termQuery0 . toString ( ) )
assertEquals ( "Clone not supported : : 950" , string0 )
assertEquals ( "Document < stored , indexed < : 20130702060907 > > " , document0 . toString ( ) )
assertNull ( object0 )
assertEquals ( "" , booleanQuery0 . toString ( ) )
assertNull ( object0 )
assertEquals ( 1 . 0F , termQuery0 . getBoost ( ) , 0 . 01F )
assertEquals ( " does not want to merge all ol^ segments , merge remaining ones into new segment : : [ does not want to merge all ol^ segments , merge remaining ones into new segment : TO does not want to merge all ol^ segments , merge remaining ones into new segment : ] " , termRangeQuery0 . toString ( ) )
assertEquals ( "m`H [ V" , stringQueryImpl1 . toString ( ) )
assertEquals ( " * : " , luceneQueryImpl0 . toString ( ) )
assertEquals ( "null \" ? \"" , booleanQuery0 . toString ( ) )
assertNotNull ( termQueryImpl1 )
assertEquals ( "e \u0000$ : \"e \u0000$\"" , termQueryImpl0 . toString ( ) )
assertEquals ( 1 . 0F , wildcardQuery0 . getBoost ( ) , 0 . 01F )
assertEquals ( "" , string0 )
assertEquals ( "_j : _j" , termQueryImpl0 . toString ( ) )
assertEquals ( "_j : 735" , termQueryImpl0 . toString ( ) )
assertEquals ( true , booleanClause1 . isProhibited ( ) )
assertEquals ( " [ ] " , arrayList0 . toString ( ) )
assertEquals ( true , priorityQueue0 . isEmpty ( ) )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertEquals ( " ( startOffset = 0 , endOffset = 0 ) " , keywordTokenizer0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , luceneIndexer0 . isFinished ( ) )
assertEquals ( true , set0 . isEmpty ( ) )
assertEquals ( false , dummyIndexer0 . isFilterSearch ( ) )
assertNotNull ( luceneClusterUtil0 )
assertNotNull ( queryTermExtractor0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNotNull ( weightedTermArray0 )
assertNull ( message0 . getDestinationName ( ) )
assertEquals ( false , linkedList0 . isEmpty ( ) )
assertNotNull ( indexCommitSerializationUtil0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertNotNull ( indexCommitMetaInfo0 )
assertEquals ( 0 , liferayServletContext0 . getMajorVersion ( ) )
assertEquals ( 1 , linkedList0 . size ( ) )
assertNull ( fileEntry0 )
assertNull ( fileEntry0 )
assertNull ( fileEntry0 )
assertNotNull ( jCRFactoryUtil0 )
assertNotNull ( optionsMethodImpl0 )
assertNotNull ( moveMethodImpl0 )
assertNotNull ( mkcolMethodImpl0 )
assertNotNull ( unlockMethodImpl0 )
assertNotNull ( copyMethodImpl0 )
assertNotNull ( headMethodImpl0 )
assertNotNull ( getMethodImpl0 )
assertNotNull ( clearRenderParametersAction0 )
assertNull ( mockSession0 . getId ( ) )
assertEquals ( " < ? xml version = \"1 . 0\" ? > < root > < / root > " , string0 )
assertNotNull ( deviceServicePreAction0 )
assertNotNull ( eventsProcessorUtil0 )
assertNotNull ( channelLoginPostAction0 )
assertNotNull ( logSessionIdAction0 )
assertNotNull ( globalStartupAction0 )
assertEquals ( 0 , map0 . size ( ) )
assertNotNull ( sharedSessionAttributeCache0 )
assertNotNull ( sharedSessionAttributeCache0 )
assertEquals ( 0 , set0 . size ( ) )
assertEquals ( "" , i18nServlet0 . getServletInfo ( ) )
assertEquals ( "log4j . reset" , elementImpl0 . getNamespaceURI ( ) )
assertEquals ( "" , netvibesServlet0 . getServletInfo ( ) )
assertEquals ( "7 . 0" , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( sharedSessionAttributeListener0 )
assertNotNull ( portalSessionActivationListener0 )
assertEquals ( "" , widgetServlet0 . getServletInfo ( ) )
assertEquals ( "" , googleGadgetServlet0 . getServletInfo ( ) )
assertEquals ( "" , luceneServlet0 . getServletInfo ( ) )
assertEquals ( " [ ] " , treeSet0 . toString ( ) )
assertEquals ( "" , languageServlet0 . getServletInfo ( ) )
assertEquals ( "" , jSONServlet0 . getServletInfo ( ) )
assertNull ( string0 )
assertEquals ( "53Etq78zY" , string0 )
assertEquals ( false , boolean0 )
assertNull ( servlet0 )
assertSame ( groovyServlet0 , groovyServlet1 )
assertNotNull ( portalSessionListener0 )
assertNotNull ( eTagUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( inputPermissionsTagUtil0 )
assertNotNull ( inputPermissionsParamsTagUtil0 )
assertEquals ( "" , string0 )
assertEquals ( 1 , portalPreferencesImpl0 . size ( ) )
assertNotNull ( stringArray0 )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertNotNull ( string0 )
assertNull ( map0 )
assertNotNull ( map0 )
assertEquals ( "" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( 1 , portletPreferencesImpl0 . size ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( ( - 1151851136952L ) , date0 . getTime ( ) )
assertNotNull ( layoutCloneFactory0 )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 1219584725 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( 861101 , hashCodeImpl0 . toHashCode ( ) )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 1065353845 , hashCodeImpl0 . toHashCode ( ) )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 629 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( 629 , hashCodeImpl0 . toHashCode ( ) )
assertNotNull ( hashCodeImpl0 )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 629 , hashCodeImpl0 . toHashCode ( ) )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 738946171 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( - 2120005431 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( 17 , int0 )
assertNotNull ( hashCodeImpl0 )
assertNotNull ( hashCodeImpl0 )
assertEquals ( 2480 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( 738 , hashCodeImpl0 . toHashCode ( ) )
assertNotNull ( hashCodeImpl0 )
assertNotNull ( instancePool0 )
assertEquals ( 0 , int0 )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertEquals ( 1 , memoryMultiValueMap0 . size ( ) )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertNull ( string0 )
assertEquals ( true , memoryMultiValueMap0 . isEmpty ( ) )
assertNull ( methodParameterArray0 )
assertNotNull ( javaFieldsParser0 )
assertEquals ( "$ { " , string0 )
assertEquals ( " ] " , string0 )
assertNotNull ( jarUtil0 )
assertEquals ( 0 , progressTracker0 . getStatus ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , set0 . size ( ) )
assertNotNull ( portletListerImpl0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( false , orderByComparatorFactoryImpl_DefaultOrderByComparator0 . isAscending ( ) )
assertEquals ( "true" , string0 )
assertEquals ( true , properties0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( " & #x2014 ; " , string0 )
assertEquals ( "" , string0 )
assertEquals ( " - - > " , string0 )
assertNull ( string0 )
assertEquals ( "scanner / notify - builtin - refs" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( " & #034 ; " , string0 )
assertEquals ( " & lt ; `@ ! & #039 ; JWA ( p ( m#8 & amp ; 1" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertEquals ( "\\3e - b3l37\\3f\\25U\\24F" , string0 )
assertNotNull ( string0 )
assertEquals ( "xdR & #x27 ; 4j_j & #x27 ; usn & #x3e ; fBi & #x26 ; 1 & #x7e ; " , string0 )
assertEquals ( " & #x0a ; " , string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "\"\"" , string0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( "E ! { 1 " , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "f" , string0 )
assertNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( " & #x2014 ; " , string0 )
assertNotNull ( string0 )
assertEquals ( " [ WXU1S0 n , \"f" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 300 , consumerManager0 . getPreExpiryAssocLockInterval ( ) )
assertNotNull ( openIdUtil0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( file0 )
assertEquals ( 0 , multiValueMap0 . size ( ) )
assertEquals ( 17 , hashCodeImpl0 . toHashCode ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( list0 )
assertNotNull ( initUtil0 )
assertEquals ( false , boolean0 )
assertEquals ( true , groupTypeComparator0 . isAscending ( ) )
assertEquals ( "groupType DESC , groupName DESC" , string0 )
assertEquals ( true , groupTypeComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "emailAddress DESC" , userEmailAddressComparator0 . getOrderBy ( ) )
assertEquals ( "emailAddress DESC" , string0 )
assertEquals ( "emailAddress ASC" , string0 )
assertEquals ( "Layout . priority ASC" , layoutPriorityComparator0 . toString ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , layoutPriorityComparator0 . isAscending ( ) )
assertEquals ( "Layout . priority DESC" , string0 )
assertEquals ( true , layoutPriorityComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "Role_ . description DESC , Role_ . name DESC" , string0 )
assertEquals ( "Role_ . description ASC , Role_ . name ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "lastName DESC , firstName DESC , middleName DESC" , string0 )
assertEquals ( true , userLastNameComparator0 . isAscending ( ) )
assertEquals ( true , roleTypeComparator0 . isAscending ( ) )
assertEquals ( "Role_ . type_ DESC , Role_ . name DESC" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "Role_ . type_ ASC , Role_ . name ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "LayoutRevision . createDate DESC" , string0 )
assertEquals ( true , layoutRevisionCreateDateComparator0 . isAscending ( ) )
assertEquals ( "Layout . groupId DESC , Layout . layoutId DESC" , layoutComparator0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "Layout . groupId DESC , Layout . layoutId DESC" , string0 )
assertEquals ( true , layoutComparator0 . isAscending ( ) )
assertNotNull ( userTrackerModifiedDateComparator0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "Subscription . classNameId DESC" , string0 )
assertEquals ( "Subscription . classNameId ASC" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "UserGroup . description DESC , UserGroup . name DESC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( "UserGroup . description ASC , UserGroup . name ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "orgName DESC" , string0 )
assertEquals ( "orgName ASC" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "loginDate DESC" , string0 )
assertEquals ( true , userLoginDateComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "PasswordPolicy . description DESC" , string0 )
assertEquals ( "PasswordPolicy . description ASC" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "jobTitle DESC , lastName DESC , firstName DESC , middleName DESC" , string0 )
assertEquals ( true , userJobTitleComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "Role_ . name DESC" , string0 )
assertEquals ( true , roleNameComparator0 . isAscending ( ) )
assertEquals ( "groupName DESC" , groupNameComparator0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( "groupName DESC" , string0 )
assertEquals ( true , groupNameComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "groupFriendlyURL DESC" , string0 )
assertEquals ( true , groupFriendlyURLComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "PasswordPolicy . name DESC" , string0 )
assertEquals ( true , passwordPolicyNameComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( true , boolean0 )
assertEquals ( "Role_ . roleId DESC" , string0 )
assertEquals ( true , roleRoleIdComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "LayoutRevision . layoutRevisionId DESC" , string0 )
assertEquals ( true , layoutRevisionIdComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "orgType DESC , orgName DESC" , string0 )
assertEquals ( true , organizationTypeComparator0 . isAscending ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "screenName DESC" , string0 )
assertEquals ( true , userScreenNameComparator0 . isAscending ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( stringArray0 )
assertEquals ( "UserGroup . name DESC" , string0 )
assertEquals ( true , userGroupNameComparator0 . isAscending ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( "firstName DESC , middleName DESC , lastName DESC" , string0 )
assertEquals ( true , userFirstNameComparator0 . isAscending ( ) )
assertEquals ( "" , string0 )
assertEquals ( "xbyxA [ , bQ_pw" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "xbyxA [ , bQ_pw" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( "6 ] " , licenseInfo0 . getLicenseVersion ( ) )
assertEquals ( "6 ] " , string0 )
assertEquals ( "@u ? 4bg * InPE" , licenseInfo0 . getOwner ( ) )
assertEquals ( 539L , licenseInfo0 . getMaxUsers ( ) )
assertEquals ( 539L , licenseInfo0 . getMaxUsers ( ) )
assertEquals ( 1372745435459L , date0 . getTime ( ) )
assertEquals ( 597L , licenseInfo0 . getMaxUsers ( ) )
assertEquals ( "q $wCg#kl\"#mV : #R" , string0 )
assertEquals ( 0L , long0 )
assertEquals ( "6 ] " , licenseInfo0 . getDescription ( ) )
assertEquals ( 1372745436222L , date0 . getTime ( ) )
assertNotNull ( stringArray1 )
assertEquals ( "@u ? 4bg * InPE" , licenseInfo0 . getOwner ( ) )
assertEquals ( 0 , int0 )
assertNull ( list0 )
assertNull ( list0 )
assertNull ( map0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , jSONObjectImpl0 . length ( ) )
assertEquals ( 6000 , int0 )
assertEquals ( 6003 , int0 )
assertEquals ( 6100 , int0 )
assertEquals ( 6002 , int0 )
assertEquals ( 6005 , int0 )
assertEquals ( 6005 , int0 )
assertEquals ( 6200 , int0 )
assertEquals ( true , boolean0 )
assertEquals ( true , upgradeProcessUtil0 . isCreateIGImageDocumentType ( ) )
assertEquals ( 6101 , int0 )
assertEquals ( 6000 , int0 )
assertEquals ( 6000 , int0 )
assertEquals ( 6006 , int0 )
assertEquals ( 6001 , int0 )
assertEquals ( 6100 , int0 )
assertEquals ( 0 , upgradeLayoutSet0 . getThreshold ( ) )
assertEquals ( 0 , upgradeLayout0 . getThreshold ( ) )
assertEquals ( "preferences like '%portlet - setup - link - to - %'" , string0 )
assertEquals ( "$VWYMV ? #TyP ; VS" , string0 )
assertEquals ( 0 , upgradeCustomizablePortlets0 . getThreshold ( ) )
assertNull ( valueMapper0 )
assertEquals ( false , boolean0 )
assertNotNull ( pKUpgradeColumnImpl0 )
assertNotNull ( string0 )
assertEquals ( "" , elementImpl0 . getText ( ) )
assertEquals ( false , elementImpl0 . hasContent ( ) )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , linkedHashSet0 . size ( ) )
assertEquals ( 1 , memoryValueMapper0 . size ( ) )
assertEquals ( " [ ] " , string0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( 0 , int0 )
assertNull ( object0 )
assertEquals ( 0 , databaseValueMapper0 . size ( ) )
assertEquals ( 0 , databaseValueMapper0 . size ( ) )
assertEquals ( "2" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( "" , dLFileEntryTitleUpgradeColumnImpl0 . getName ( ) )
assertEquals ( "8 . 0" , string0 )
assertNotNull ( stringArray0 )
assertNotNull ( stringArray0 )
assertEquals ( 0 , unicodeProperties0 . size ( ) )
assertEquals ( false , unicodeProperties0 . isEmpty ( ) )
assertEquals ( 0 , upgradeLayout0 . getThreshold ( ) )
assertEquals ( "" , string0 )
assertEquals ( "preferences like '%lfrScopeLayoutUuid%'" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( 0L , userGroupTemplateInfo0 . getLayoutSetId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , boolean0 )
assertEquals ( 0L , userGroupTemplateInfo0 . getPageCount ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0L , userGroupTemplateInfo0 . getPageCount ( ) )
assertEquals ( 0L , userGroupTemplateInfo0 . getUserGroupId ( ) )
assertEquals ( 0L , userGroupTemplateInfo0 . getGroupId ( ) )
assertNull ( userGroupTemplateInfo0 . getCss ( ) )
assertNull ( userGroupTemplateInfo0 . getWapColorSchemeId ( ) )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 844L , userGroupTemplateInfo0 . getLayoutSetPrototypeId ( ) )
assertNull ( userGroupTemplateInfo0 . getSettings ( ) )
assertEquals ( 0L , long0 )
assertNull ( userGroupTemplateInfo0 . getColorSchemeId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( false , userGroupTemplateInfo0 . isPrivateLayout ( ) )
assertEquals ( 1552L , userGroupTemplateInfo0 . getLayoutSetId ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( false , userGroupTemplateInfo0 . isPrivateLayout ( ) )
assertEquals ( - 1373 , userGroupTemplateInfo0 . getLogo ( ) )
assertEquals ( 0L , userGroupTemplateInfo0 . getLogoId ( ) )
assertNotNull ( stringArray0 )
assertNull ( layoutsLocalPublisherRequest0 . getCronText ( ) )
assertNull ( layoutsLocalPublisherRequest0 . getCommand ( ) )
assertEquals ( 17L , layoutsLocalPublisherRequest0 . getSourceGroupId ( ) )
assertEquals ( 0L , layoutsLocalPublisherRequest0 . getUserId ( ) )
assertNull ( layoutsLocalPublisherRequest0 . getCommand ( ) )
assertNull ( date0 )
assertEquals ( "TtvElI" , layoutsLocalPublisherRequest0 . getCronText ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertNull ( map0 )
assertEquals ( false , layoutsLocalPublisherRequest0 . isPrivateLayout ( ) )
assertNull ( layoutsLocalPublisherRequest0 . getCronText ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , layoutsLocalPublisherRequest0 . getSourceGroupId ( ) )
assertNull ( map0 )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertEquals ( "" , layoutsLocalPublisherRequest0 . getCommand ( ) )
assertNull ( layoutsLocalPublisherRequest0 . getCommand ( ) )
assertEquals ( false , layoutsLocalPublisherRequest0 . isPrivateLayout ( ) )
assertNull ( date0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertNull ( date0 )
assertNull ( layoutsRemotePublisherRequest0 . getCronText ( ) )
assertEquals ( ( - 1L ) , layoutsRemotePublisherRequest0 . getUserId ( ) )
assertEquals ( true , layoutsRemotePublisherRequest0 . isSecureConnection ( ) )
assertNull ( string0 )
assertEquals ( "h0%" , layoutsRemotePublisherRequest0 . getRemoteAddress ( ) )
assertNull ( layoutsRemotePublisherRequest0 . getCronText ( ) )
assertEquals ( false , layoutsRemotePublisherRequest0 . isRemotePrivateLayout ( ) )
assertEquals ( false , boolean0 )
assertNull ( map0 )
assertEquals ( 113 , date0 . getYear ( ) )
assertNull ( date0 )
assertEquals ( 1129 , layoutsRemotePublisherRequest0 . getRemotePort ( ) )
assertEquals ( 0L , long0 )
assertEquals ( true , layoutsRemotePublisherRequest0 . isRemotePrivateLayout ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , layoutsRemotePublisherRequest0 . isPrivateLayout ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1L , layoutsRemotePublisherRequest0 . getRemoteGroupId ( ) )
assertNull ( layoutsRemotePublisherRequest0 . getRemotePathContext ( ) )
assertEquals ( ( - 244L ) , layoutsRemotePublisherRequest0 . getSourceGroupId ( ) )
assertEquals ( false , layoutsRemotePublisherRequest0 . isRemotePrivateLayout ( ) )
assertNull ( date0 )
assertEquals ( 0L , long0 )
assertNull ( map0 )
assertEquals ( 1664 , layoutsRemotePublisherRequest0 . getRemotePort ( ) )
assertNull ( layoutsRemotePublisherRequest0 . getCronText ( ) )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertNotNull ( layoutsLocalPublisherMessageListener0 )
assertNull ( httpServletResponse0 )
assertEquals ( "#B\"V ? m ! fFM" , sharepointRequest0 . getRootPath ( ) )
assertNull ( httpServletRequest0 )
assertEquals ( "D > \" < tN ; 7" , string0 )
assertNull ( byteArray0 )
assertNotNull ( string0 )
assertEquals ( "HShm^X , x ( ) 4" , sharepointRequest0 . getRootPath ( ) )
assertNull ( sharepointStorage0 )
assertNull ( user0 )
assertEquals ( "" , string0 )
assertEquals ( " < p > = \n" , property0 . parse ( ) )
assertNotNull ( string0 )
assertEquals ( " < ul > \n < p > < ul > \n < / ul > \n = < ul > \n < / ul > \n\n < / ul > \n" , tree0 . parse ( ) )
assertNotNull ( string0 )
assertNotNull ( companySharepointStorageImpl0 )
assertNotNull ( groupSharepointStorageImpl0 )
assertNotNull ( string0 )
assertEquals ( " < ul > \n < / ul > \n" , tree0 . parse ( ) )
assertEquals ( " < ul > \n < / ul > \n" , tree0 . parse ( ) )
assertEquals ( "External credentials cannot be null" , sharepointRequest0 . getRootPath ( ) )
assertEquals ( " < ul > \n < / ul > \n" , tree0 . parse ( ) )
assertEquals ( "" , sharepointRequest0 . getRootPath ( ) )
assertNull ( inputStream0 )
assertNull ( treeArray0 )
assertEquals ( "ROOT" , sharepointRequest0 . getRootPath ( ) )
assertNull ( treeArray0 )
assertEquals ( "" , string0 )
assertEquals ( "d" , string0 )
assertEquals ( " < li > = \n < li > \n < li > \n" , string0 )
assertEquals ( " < li > = QA / _\n" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "create url - directories" , string0 )
assertEquals ( "" , string0 )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( "open service" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "url to web url" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( serverVersionMethodImpl0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "remove documents" , string0 )
assertEquals ( "put document" , string0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "com . liferay . portlet . assetcategoriesnavigation" , assetCategoriesNavigationPortletDisplayTemplateHandler0 . getResourceName ( ) )
assertNull ( portletDisplayTemplateHandler0 )
assertNotNull ( longArray0 )
assertNotNull ( atomPager0 )
assertEquals ( 1 , int0 )
assertNotNull ( atomPager0 )
assertEquals ( 122 , atomPager0 . getTotalElements ( ) )
assertNotNull ( atomPager0 )
assertEquals ( 882 , atomPager0 . getElementsPerPage ( ) )
assertNotNull ( atomPager0 )
assertEquals ( 882 , atomPager0 . getElementsPerPage ( ) )
assertNotNull ( atomPager0 )
assertEquals ( 0 , atomPager0 . getStart ( ) )
assertNotNull ( atomPager0 )
assertNotNull ( atomPager0 )
assertNotNull ( atomTargetBuilder0 )
assertNull ( atomCollectionAdapter0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "users" , userAtomCollectionAdapter0 . getCollectionName ( ) )
assertNull ( string0 )
assertNotNull ( atomUtil0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "D ? page = - 1685" , string0 )
assertEquals ( " ? mcp | Rz * I & page = 5" , string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 0 , orderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListItemNode0 . getChildASTNodesCount ( ) )
assertEquals ( 8 , orderedListItemNode0 . getLevel ( ) )
assertEquals ( 9618 , headingNode0 . getLevel ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableDataNode0 . getChildASTNodesCount ( ) )
assertEquals ( " < p > < / p > " , string0 )
assertEquals ( 0 , lineNode0 . getChildASTNodesCount ( ) )
assertEquals ( false , boldTextNode0 . hasContent ( ) )
assertNull ( boldTextNode0 . getContent ( ) )
assertEquals ( 0 , collectionNode0 . size ( ) )
assertEquals ( 0 , formattedTextNode0 . getChildASTNodesCount ( ) )
assertNull ( italicTextNode0 . getContent ( ) )
assertNull ( italicTextNode0 . getContent ( ) )
assertEquals ( 0 , tableHeaderNode0 . getChildASTNodesCount ( ) )
assertNull ( italicTextNode0 . getContent ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertNull ( unformattedTextNode0 . getContent ( ) )
assertEquals ( 0 , headingNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , orderedListItemNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , wikiPageNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListItemNode0 . getLevel ( ) )
assertEquals ( 0 , lineNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , paragraphNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , boldTextNode0 . getChildASTNodesCount ( ) )
assertEquals ( 1 , collectionNode0 . size ( ) )
assertEquals ( 1 , orderedListNode0 . getChildASTNodesCount ( ) )
assertNull ( imageNode0 . getLink ( ) )
assertEquals ( true , imageNode0 . hasAltCollectionNode ( ) )
assertEquals ( 0 , italicTextNode0 . getChildASTNodesCount ( ) )
assertNull ( italicTextNode0 . getContent ( ) )
assertNull ( unformattedTextNode0 . getContent ( ) )
assertEquals ( 0 , orderedListItemNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , orderedListItemNode0 . getLevel ( ) )
assertEquals ( 0 , orderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , orderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , orderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , orderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , listNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , lineNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , lineNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , lineNode0 . getChildASTNodesCount ( ) )
assertNull ( string0 )
assertNull ( noWikiSectionNode0 . getContent ( ) )
assertEquals ( 0 , unorderedListItemNode0 . getLevel ( ) )
assertEquals ( 1198 , unorderedListItemNode0 . getLevel ( ) )
assertEquals ( "VH + 1 = | Qq * \" * cd`^6 , 3" , scapedNode0 . getContent ( ) )
assertNull ( scapedNode0 . getContent ( ) )
assertEquals ( false , unformattedTextNode0 . hasContent ( ) )
assertEquals ( 0 , unformattedTextNode0 . getChildASTNodesCount ( ) )
assertEquals ( false , linkNode0 . hasAltCollectionNode ( ) )
assertEquals ( true , imageNode0 . hasAltCollectionNode ( ) )
assertNull ( string0 )
assertEquals ( false , imageNode0 . hasAltCollectionNode ( ) )
assertNotNull ( stringArray0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , paragraphNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , paragraphNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , paragraphNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , unorderedListNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , wikiPageNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , wikiPageNode0 . getChildASTNodesCount ( ) )
assertNull ( boldTextNode0 . getContent ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , tableDataNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableDataNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableDataNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableHeaderNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableHeaderNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableHeaderNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableNode0 . getChildASTNodesCount ( ) )
assertEquals ( 0 , tableNode0 . getChildASTNodesCount ( ) )
assertNotNull ( tableOfContentsNode0 )
assertEquals ( false , linkNode0 . hasAltCollectionNode ( ) )
assertNull ( collectionNode0 )
assertEquals ( false , linkNode0 . hasAltCollectionNode ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 , creole10Lexer0 . getLine ( ) )
assertEquals ( " / home / migue / development / sourcecode / liferay / liferay - portal / portal / portal - impl / src / com / liferay / portal / parsers / creole / grammar / Creole10 . g" , creole10Lexer0 . getGrammarFileName ( ) )
assertEquals ( " / home / migue / development / sourcecode / liferay / liferay - portal / portal / portal - impl / src / com / liferay / portal / parsers / creole / grammar / Creole10 . g" , string0 )
assertEquals ( 1 , creole10Lexer0 . getCharIndex ( ) )
assertNull ( string0 )
assertNull ( pluginPackage0 )
assertNull ( pluginPackage0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( liferayResourceBundle0 )
assertNull ( string0 )
assertEquals ( "On7 & O~" , string0 )
assertEquals ( "reNaiPt" , string0 )
assertNull ( string0 )
assertNull ( microsoftTranslatorAuthenticator0 . getError ( ) )
assertEquals ( "id" , string0 )
assertEquals ( "no" , string0 )
assertNotNull ( microsoftTranslatorImpl0 )
assertNull ( string0 )
assertNotNull ( microsoftTranslatorAuthenticator0 )
assertEquals ( false , microsoftTranslatorAuthenticator0 . isStale ( ) )
assertNotNull ( string0 )
assertEquals ( "f589e748 - 5986 - 4ad3 - a1a3 - 249ee1220cb4" , portalUUIDImpl0 . generate ( ) )
assertEquals ( "dd93b778 - 63bc - 4ae2 - b352 - 71fc7c628983" , string0 )
assertEquals ( "4e9414d2 - 40b4 - 46cc - 8c5c - 0b2f25923316" , portalUUIDImpl0 . generate ( ) )
assertEquals ( 0 , threadPoolExecutor1 . getPendingTaskCount ( ) )
assertNull ( threadPoolExecutor0 )
assertSame ( threadPoolExecutor1 , threadPoolExecutor0 )
assertEquals ( 0 , hashMap0 . size ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNotNull ( class2 )
assertNotNull ( class1 )
assertNotNull ( themeLoaderFactory0 )
assertNull ( themeLoader0 )
assertEquals ( false , boolean0 )
assertNull ( themeLoader0 )
assertEquals ( false , boolean0 )
assertEquals ( false , themeCompanyId0 . isPattern ( ) )
assertNull ( list0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0 , themeDisplay0 . getRealCompanyLogoHeight ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( true , themeDisplay0 . isTilesSelectable ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isThemeJsBarebone ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isLifecycleRender ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isShowAddContentIconPermission ( ) )
assertEquals ( false , themeDisplay0 . isSignedIn ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( - 1286 , themeDisplay0 . getServerPort ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isShowPageCustomizationIcon ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isThemeImagesFastLoad ( ) )
assertEquals ( false , themeDisplay0 . isSecure ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isStateExclusive ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isShowSiteContentIcon ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( ( - 1384L ) , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( false , themeDisplay0 . isWidget ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isIncludePortletCssJs ( ) )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isThemeCssFastLoad ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 11L , themeDisplay0 . getRefererPlid ( ) )
assertEquals ( false , themeDisplay0 . isIsolated ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isShowSignInIcon ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isShowManageSiteMembershipsIcon ( ) )
assertEquals ( false , themeDisplay0 . isLifecycleAction ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isShowPortalIcon ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isThemeJsFastLoad ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( false , themeDisplay0 . isShowAddContentIcon ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isShowSiteMapSettingsIcon ( ) )
assertEquals ( - 1 , themeDisplay0 . getRealCompanyLogoWidth ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isShowPageSettingsIcon ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isAjax ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( - 1421 , themeDisplay0 . getCompanyLogoHeight ( ) )
assertEquals ( true , themeDisplay0 . isLifecycleEvent ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isAddSessionIdToURL ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 1288 , themeDisplay0 . getCompanyLogoWidth ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( "NameAttribute" , themeDisplay0 . getCDNBaseURL ( ) )
assertNotNull ( string0 )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertNotNull ( themeDisplay1 )
assertEquals ( 0L , themeDisplay1 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( false , themeDisplay0 . isFacebook ( ) )
assertEquals ( true , themeDisplay0 . isFacebook ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isI18n ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( true , themeDisplay0 . isI18n ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( 0L , themeDisplay0 . getDoAsGroupId ( ) )
assertEquals ( ( - 1L ) , themeDisplay0 . getParentGroupId ( ) )
assertEquals ( 903L , themeDisplay0 . getParentGroupId ( ) )
assertEquals ( true , themeDisplay0 . isFacebook ( ) )
assertEquals ( ( - 890L ) , themeDisplay0 . getPortletGroupId ( ) )
assertEquals ( 1284652111195L , themeDisplay0 . getPortletGroupId ( ) )
assertEquals ( 0 , portletDisplay0 . getColumnCount ( ) )
assertEquals ( 0 , portletDisplay0 . getColumnCount ( ) )
assertEquals ( true , portletDisplay0 . isModeConfig ( ) )
assertEquals ( false , portletDisplay0 . isModeHelp ( ) )
assertEquals ( "" , portletDisplay0 . getRootPortletId ( ) )
assertEquals ( false , portletDisplay0 . isShowPrintIcon ( ) )
assertEquals ( true , portletDisplay0 . isShowHelpIcon ( ) )
assertEquals ( false , portletDisplay0 . isRestoreCurrentView ( ) )
assertEquals ( false , portletDisplay0 . isStateNormal ( ) )
assertEquals ( false , themeDisplay0 . isShowSiteContentIcon ( ) )
assertEquals ( "" , portletDisplay0 . getURLRefresh ( ) )
assertEquals ( true , portletDisplay0 . isRestoreCurrentView ( ) )
assertEquals ( true , portletDisplay0 . isShowPortletIcon ( ) )
assertNotNull ( string0 )
assertEquals ( true , portletDisplay0 . isModeAbout ( ) )
assertEquals ( false , portletDisplay0 . isModeHelp ( ) )
assertEquals ( "" , portletDisplay0 . getPortletName ( ) )
assertEquals ( false , portletDisplay0 . isStateExclusive ( ) )
assertEquals ( "" , portletDisplay0 . getColumnId ( ) )
assertEquals ( false , portletDisplay0 . isModeEditDefaults ( ) )
assertEquals ( false , portletDisplay0 . isAccess ( ) )
assertEquals ( false , portletDisplay0 . isShowCloseIcon ( ) )
assertEquals ( false , portletDisplay0 . isModeConfig ( ) )
assertEquals ( false , portletDisplay0 . isStateMin ( ) )
assertEquals ( false , portletDisplay0 . isShowMoveIcon ( ) )
assertEquals ( false , portletDisplay0 . isWebDAVEnabled ( ) )
assertEquals ( 0 , portletDisplay0 . getColumnPos ( ) )
assertEquals ( true , portletDisplay0 . isStateMax ( ) )
assertEquals ( true , portletDisplay0 . isStateMin ( ) )
assertEquals ( "" , portletDisplay0 . getColumnId ( ) )
assertEquals ( false , portletDisplay0 . isModeEditGuest ( ) )
assertEquals ( false , portletDisplay0 . isStatePopUp ( ) )
assertEquals ( true , portletDisplay0 . isShowRefreshIcon ( ) )
assertEquals ( false , portletDisplay0 . isStateExclusive ( ) )
assertEquals ( false , portletDisplay0 . isModePrint ( ) )
assertEquals ( false , portletDisplay0 . isShowPortletCssIcon ( ) )
assertEquals ( true , portletDisplay0 . isShowEditDefaultsIcon ( ) )
assertEquals ( false , portletDisplay0 . isShowBackIcon ( ) )
assertEquals ( false , portletDisplay0 . isWebDAVEnabled ( ) )
assertEquals ( false , portletDisplay0 . isShowMinIcon ( ) )
assertEquals ( false , portletDisplay0 . isShowEditGuestIcon ( ) )
assertEquals ( true , portletDisplay0 . isModeView ( ) )
assertEquals ( false , portletDisplay0 . isRestoreCurrentView ( ) )
assertEquals ( "" , portletDisplay0 . getURLEditGuest ( ) )
assertEquals ( false , portletDisplay0 . isShowMinIcon ( ) )
assertEquals ( true , portletDisplay0 . isModeHelp ( ) )
assertEquals ( true , portletDisplay0 . isModeEdit ( ) )
assertEquals ( true , portletDisplay0 . isModePreview ( ) )
assertEquals ( true , portletDisplay0 . isShowEditGuestIcon ( ) )
assertEquals ( true , portletDisplay0 . isShowConfigurationIcon ( ) )
assertEquals ( "" , portletDisplay0 . getColumnId ( ) )
assertEquals ( 0 , portletDisplay0 . getColumnCount ( ) )
assertEquals ( false , portletDisplay0 . isWebDAVEnabled ( ) )
assertEquals ( false , portletDisplay0 . isShowMaxIcon ( ) )
assertEquals ( true , portletDisplay0 . isShowEditIcon ( ) )
assertEquals ( true , portletDisplay0 . isShowExportImportIcon ( ) )
assertEquals ( false , portletDisplay0 . isModeEditDefaults ( ) )
assertEquals ( "" , portletDisplay0 . getCustomCSSClassName ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , linkedList0 . size ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( commandFactory0 )
assertEquals ( "pw" , string0 )
assertEquals ( "O ; " , string0 )
assertEquals ( "64tEj" , string0 )
assertEquals ( "O ; " , string0 )
assertNull ( httpServletRequest0 )
assertEquals ( false , themeDisplay1 . isStateMaximized ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "0" , string0 )
assertEquals ( "0" , string0 )
assertEquals ( "0" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( true , stagingAdvicesThreadLocal0 . isEnabled ( ) )
assertEquals ( 1655 , portalPreferencesImpl0 . getOwnerType ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , portalPreferencesImpl0 . getOwnerType ( ) )
assertNotNull ( string0 )
assertEquals ( "https : / / null" , string0 )
assertEquals ( "http : / / http : T / s : 420http : T / s / c / my_sites / view ? groupId = 420 & amp ; privateLayout = false" , string0 )
assertNull ( group0 )
assertEquals ( 0L , long0 )
assertNotNull ( longArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "https : / / g + dA , : r" , string0 )
assertNull ( layoutRevision0 )
assertNull ( layoutSetBranch0 )
assertNull ( message0 . getDestinationName ( ) )
assertEquals ( 644L , counterSoap0 . getCurrentId ( ) )
assertNull ( counterSoap0 . getName ( ) )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertNotNull ( counterSoapArray0 )
assertEquals ( 308L , counterHolder0 . getCurrentValue ( ) )
assertEquals ( ( - 1L ) , counterHolder0 . getCurrentValue ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0 , counterRegister0 . getRangeSize ( ) )
assertNotNull ( counterHolder0 )
assertEquals ( - 1228 , counterRegister0 . getRangeSize ( ) )
assertNotNull ( competeLatch0 )
assertEquals ( 0 , int0 )
assertNull ( counter0 )
assertEquals ( false , class0 . isEnum ( ) )
assertEquals ( "com . liferay . counter . model . Counter" , string0 )
assertEquals ( true , hashtable0 . isEmpty ( ) )
assertNotNull ( string0 )
assertEquals ( " { name = #ZXv - < ! ] ZjAXou$k , currentId = 0 } " , counterCacheModel0 . toString ( ) )
assertEquals ( " { name = null , currentId = 0 } " , counterCacheModel0 . toString ( ) )
assertNull ( counterLocalService0 )
assertNull ( userService0 )
assertNull ( counterLocalService0 )
assertNull ( counterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( counterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . counter . model . Counter" , counterLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( false , class0 . desiredAssertionStatus ( ) )
assertNull ( userLocalService0 )
assertEquals ( "com . liferay . counter . model . Counter" , counterLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . counter . model . Counter" , counterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( string0 )
assertEquals ( "com . liferay . counter . model . Counter" , counterLocalServiceImpl0 . getModelClassName ( ) )
assertEquals ( "com . liferay . counter . model . Counter" , counterLocalServiceImpl0 . getModelClassName ( ) )
assertNull ( counterFinder0 )
assertNull ( userPersistence0 )
assertEquals ( " & wXb7 { " , counterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertNull ( userFinder0 )
assertNull ( resourceLocalService0 )
assertNull ( counterPersistence0 )
assertNull ( counterLocalServiceImpl0 . getBeanIdentifier ( ) )
assertEquals ( "com . liferay . counter . model . Counter" , string0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( 0 , inputPermissionsParamsTag0 . doStartTag ( ) )
assertEquals ( "index" , string0 )
assertNull ( searchContainerRowTag0 . getClassName ( ) )
assertEquals ( "clssame" , searchContainerRowTag0 . getKeyProperty ( ) )
assertNull ( searchContainerRowTag0 . getClassName ( ) )
assertEquals ( "model" , searchContainerRowTag0 . getModelVar ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , searchContainerRowTag0 . isStringKey ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , searchContainerRowTag0 . isBold ( ) )
assertEquals ( false , searchContainerRowTag0 . isEscapedModel ( ) )
assertEquals ( "model" , string0 )
assertNull ( resultRow0 )
assertEquals ( false , searchContainerRowTag0 . isStringKey ( ) )
assertNotNull ( string0 )
assertEquals ( true , searchContainerRowTag0 . isBold ( ) )
assertNull ( string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( "classNae" , searchContainerRowTag0 . getClassName ( ) )
assertEquals ( false , searchContainerRowTag0 . isStringKey ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertTrue ( map1 . equals ( map0 ) )
assertEquals ( " / html / taglib / ui / group_search / end . jsp" , groupSearchTag0 . getEndPage ( ) )
assertEquals ( " / html / taglib / ui / group_search / end . jsp" , string0 )
assertEquals ( 6 , groupSearchTag0 . doEndTag ( ) )
assertEquals ( " / html / taglib / ui / group_search / start . jsp" , string0 )
assertEquals ( 0 , groupSearchTag0 . doAfterBody ( ) )
assertEquals ( " / html / taglib / ui / group_search / end . jsp" , groupSearchTag0 . getEndPage ( ) )
assertEquals ( 6 , customAttributesAvailableTag0 . doEndTag ( ) )
assertEquals ( 6 , customAttributesAvailableTag0 . doEndTag ( ) )
assertNotNull ( variableInfoArray0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( " = xZM5 / b^" , userDisplayTag0 . getStartPage ( ) )
assertEquals ( " = xZM5 / b^" , userDisplayTag0 . getEndPage ( ) )
assertEquals ( 0 , userDisplayTag0 . doAfterBody ( ) )
assertEquals ( 0 , userDisplayTag0 . doAfterBody ( ) )
assertEquals ( " / html / taglib / ui / user_display / start . jsp" , userDisplayTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / user_display / start . jsp" , userDisplayTag0 . getStartPage ( ) )
assertNotNull ( string0 )
assertNotNull ( variableInfoArray0 )
assertNotNull ( variableInfoArray0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( "Wl_k < [ Y1N & 6 } ^" , errorTag0 . getStartPage ( ) )
assertEquals ( "e / , e < n & : 9$B" , errorTag0 . getEndPage ( ) )
assertEquals ( " / html / taglib / ui / error / end . jsp" , errorTag0 . getEndPage ( ) )
assertEquals ( 0 , int0 )
assertEquals ( " / html / taglib / ui / error / start . jsp" , errorTag0 . getStartPage ( ) )
assertEquals ( 0 , errorTag0 . doAfterBody ( ) )
assertNotNull ( string0 )
assertEquals ( " / html / taglib / ui / error / start . jsp" , string0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( - 1 , searchContainerColumnJSPTag0 . getIndex ( ) )
assertEquals ( "left" , searchContainerColumnJSPTag0 . getAlign ( ) )
assertEquals ( "middle" , searchContainerColumnTextTag0 . getValign ( ) )
assertEquals ( "middle" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , searchContainerColumnTextTag0 . getCssClass ( ) )
assertEquals ( 1 , searchContainerColumnJSPTag0 . getColspan ( ) )
assertEquals ( 1 , int0 )
assertEquals ( "left" , string0 )
assertEquals ( "" , string0 )
assertEquals ( - 1 , searchContainerColumnTextTag0 . getIndex ( ) )
assertEquals ( 0 , int0 )
assertNull ( searchContainerResultsTag0 . getId ( ) )
assertEquals ( "results" , searchContainerResultsTag0 . getResultsVar ( ) )
assertNotNull ( string0 )
assertEquals ( "results" , string0 )
assertNull ( list0 )
assertEquals ( - 9 , searchContainerResultsTag0 . getTotal ( ) )
assertNull ( appViewNavigationTag0 . getId ( ) )
assertEquals ( "NtlmHttpChal" , appViewNavigationTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / app_view_navigation / start . jsp" , string0 )
assertEquals ( "false" , boolean0 . toString ( ) )
assertEquals ( " / html / taglib / ui / panel_container / start . jsp" , panelContainerTag0 . getStartPage ( ) )
assertEquals ( " ] 6m^%jGJh2p / K & M / ) i" , panelContainerTag0 . getStartPage ( ) )
assertNull ( string0 )
assertEquals ( "S < 5" , panelContainerTag0 . getEndPage ( ) )
assertEquals ( " / html / taglib / ui / panel_container / end . jsp" , panelContainerTag0 . getEndPage ( ) )
assertNull ( panelContainerTag0 . getId ( ) )
assertNull ( panelContainerTag0 . getId ( ) )
assertEquals ( "zwbi" , panelContainerTag0 . getId ( ) )
assertEquals ( "bcnj" , panelContainerTag0 . getId ( ) )
assertNotNull ( string0 )
assertEquals ( " / html / taglib / ui / panel_container / start . jsp" , string0 )
assertNull ( panelFloatingContainerTag0 . getId ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / end . jsp" , panelFloatingContainerTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / end . jsp" , panelFloatingContainerTag0 . getEndPage ( ) )
assertNull ( panelFloatingContainerTag0 . getId ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / end . jsp" , panelFloatingContainerTag0 . getEndPage ( ) )
assertNull ( panelFloatingContainerTag0 . getId ( ) )
assertEquals ( " | I4 - N" , panelFloatingContainerTag0 . getEndPage ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / start . jsp" , panelFloatingContainerTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / start . jsp" , panelFloatingContainerTag0 . getStartPage ( ) )
assertNull ( string0 )
assertNull ( panelFloatingContainerTag0 . getId ( ) )
assertNull ( panelFloatingContainerTag0 . getId ( ) )
assertEquals ( "yfdi" , panelFloatingContainerTag0 . getId ( ) )
assertEquals ( " { ZaJSL > " , panelFloatingContainerTag0 . getId ( ) )
assertEquals ( " / html / taglib / ui / panel_floating_container / end . jsp" , string0 )
assertEquals ( " / html / taglib / ui / panel_floating_container / start . jsp" , string0 )
assertEquals ( " / html / taglib / ui / app_view_toolbar / start . jsp" , string0 )
assertEquals ( "jsp . error . attempt_to_clear_flushed_buffer" , appViewToolbarTag0 . getEndPage ( ) )
assertEquals ( 0 , appViewToolbarTag0 . doAfterBody ( ) )
assertEquals ( 0 , appViewToolbarTag0 . doAfterBody ( ) )
assertEquals ( 0 , appViewToolbarTag0 . doAfterBody ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0 , messageTag0 . doAfterBody ( ) )
assertEquals ( " / html / taglib / ui / table_iterator / start . jsp" , string0 )
assertNull ( tableIteratorTag0 . getId ( ) )
assertEquals ( " / html / taglib / ui / table_iterator / end . jsp" , tableIteratorTag0 . getEndPage ( ) )
assertEquals ( "o" , tableIteratorTag0 . getBodyPage ( ) )
assertNotNull ( string0 )
assertNull ( tableIteratorTag0 . getId ( ) )
assertEquals ( " / html / taglib / ui / table_iterator / start . jsp" , tableIteratorTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / table_iterator / end . jsp" , tableIteratorTag0 . getEndPage ( ) )
assertEquals ( " / html / taglib / ui / table_iterator / body . jsp" , string0 )
assertEquals ( " / html / taglib / ui / table_iterator / end . jsp" , string0 )
assertNotNull ( string0 )
assertNull ( toggleValueTag0 . getId ( ) )
assertNull ( toggleValueTag0 . getId ( ) )
assertNotNull ( variableInfoArray0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( 6 , searchContainerRowParameterTag0 . doEndTag ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertNull ( searchContainerColumnTextTag0 . getProperty ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 1 , searchContainerColumnTextTag0 . getColspan ( ) )
assertNull ( string0 )
assertEquals ( "middle" , searchContainerColumnTextTag0 . getValign ( ) )
assertEquals ( false , searchContainerColumnTextTag0 . isAllowEmptyParam ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , searchContainerColumnTextTag0 . isOrderable ( ) )
assertNull ( searchContainerColumnTextTag0 . getTarget ( ) )
assertNull ( string0 )
assertNull ( object0 )
assertNull ( variableInfoArray0 )
assertEquals ( " / html / taglib / ui / icon_list / start . jsp" , string0 )
assertEquals ( " / html / taglib / ui / icon_list / start . jsp" , iconListTag0 . getStartPage ( ) )
assertEquals ( " / html / taglib / ui / icon_list / end . jsp" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( " / html / taglib / ui / icon_list / end . jsp" , string0 )
assertNotNull ( string0 )
assertEquals ( 0 , permissionsURLTag0 . doStartTag ( ) )
assertEquals ( 0 , permissionsURLTag0 . doAfterBody ( ) )
assertEquals ( 0 , permissionsURLTag0 . doStartTag ( ) )
assertEquals ( 0 , permissionsURLTag0 . doStartTag ( ) )
assertNull ( permissionsURLTag0 . getId ( ) )
assertEquals ( 0 , permissionsURLTag0 . doAfterBody ( ) )
assertEquals ( 0 , permissionsURLTag0 . doStartTag ( ) )
assertNull ( permissionsURLTag0 . getId ( ) )
assertNull ( variableInfoArray0 )
assertEquals ( 0 , encryptTag0 . doAfterBody ( ) )
assertEquals ( 0 , encryptTag0 . doAfterBody ( ) )
assertNull ( variableInfoArray0 )
assertEquals ( 0 , runtimeTag0 . doStartTag ( ) )
assertEquals ( 0 , runtimeTag0 . doStartTag ( ) )
assertEquals ( 0 , runtimeTag0 . doAfterBody ( ) )
assertEquals ( 6 , int0 )
assertNotNull ( aUIUtil0 )
assertEquals ( "textarea textarea - text textarea - first d ! Iwo0 { @sW ) | 3Y" , string0 )
assertEquals ( "button button - disabled button - first button" , string0 )
assertNotNull ( string0 )
assertEquals ( "string string - text string - first string" , string0 )
assertEquals ( "8ulk 8ulk - 8ulk 8ulk - inline 8ulk - disabled 8ulk - first 8ulk" , string0 )
assertEquals ( " - select - menu - disabled" , string0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNull ( toolTag0 . getId ( ) )
assertNull ( scriptTag0 . getUse ( ) )
assertEquals ( false , validatorTagImpl0 . isCustom ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , validatorTagImpl0 . isCustom ( ) )
assertEquals ( " ? e ; ] j'' + Jh < sM" , validatorTagImpl0 . getBody ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "''" , string0 )
assertEquals ( "" , string0 )
assertEquals ( " ? e ; ] j'' + Jh < sM" , string0 )
assertEquals ( true , validatorTagImpl0 . isCustom ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( " / html / taglib / aui / validator / page . jsp" , string0 )
assertEquals ( 6 , baseValidatorTagImpl0 . doEndTag ( ) )
assertNull ( baseValidatorTagImpl0 . getName ( ) )
assertEquals ( 2 , baseValidatorTagImpl0 . doStartTag ( ) )
assertEquals ( 2 , int0 )
assertEquals ( " / html / taglib / aui / tool / page . jsp" , string0 )
assertNull ( string0 )
assertNull ( baseToolTag0 . getIcon ( ) )
assertEquals ( 6 , baseToolTag0 . doEndTag ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , baseToolTag0 . doAfterBody ( ) )
assertEquals ( "KB^ksh_ddz@^OG ( BC" , baseToolTag0 . getIcon ( ) )
assertEquals ( 2 , int0 )
assertEquals ( " / html / taglib / aui / script / page . jsp" , string0 )
assertEquals ( 2 , baseScriptTag0 . doStartTag ( ) )
assertNull ( string0 )
assertEquals ( " / html / taglib / aui / script / page . jsp" , baseScriptTag0 . getPage ( ) )
assertEquals ( 6 , ifTag0 . doEndTag ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , ifTag0 . doStartTag ( ) )
assertEquals ( true , otherwiseTag0 . condition ( ) )
assertEquals ( true , otherwiseTag0 . condition ( ) )
assertEquals ( 0 , ifTag0 . doStartTag ( ) )
assertEquals ( true , otherwiseTag0 . condition ( ) )
assertEquals ( 6 , otherwiseTag0 . doEndTag ( ) )
assertEquals ( false , whenTag0 . condition ( ) )
assertEquals ( 0 , whenTag0 . doStartTag ( ) )
assertEquals ( 0 , whenTag0 . doStartTag ( ) )
assertEquals ( true , whenTag0 . condition ( ) )
assertEquals ( false , ifTag0 . condition ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , ifTag0 . doStartTag ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , chooseTag0 . canRun ( ) )
assertEquals ( true , chooseTag0 . canRun ( ) )
assertEquals ( false , chooseTag0 . canRun ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , chooseTag0 . canRun ( ) )
assertNull ( variableInfoArray0 )
assertEquals ( 0 , actionURLTag0 . doAfterBody ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( 0 , actionURLTag0 . doAfterBody ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( 0 , actionURLTag0 . doAfterBody ( ) )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( 1 , actionURLTag0 . doStartTag ( ) )
assertEquals ( 1 , int0 )
assertEquals ( "ACTION_PHASE" , actionURLTag0 . getLifecycle ( ) )
assertEquals ( false , actionURLTag0 . isAllowEmptyParam ( ) )
assertEquals ( 6 , int0 )
assertEquals ( "RENDER_PHASE" , string0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( "RESOURCE_PHASE" , string0 )
assertEquals ( 0 , renderURLParamsTag0 . doStartTag ( ) )
assertEquals ( 6 , positionTagSupport0 . doEndTag ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "auto" , positionTagSupport0 . getPosition ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( set0 )
assertEquals ( 0 , paramAndPropertyAncestorTagImpl0 . doAfterBody ( ) )
assertEquals ( false , paramAndPropertyAncestorTagImpl0 . isAllowEmptyParam ( ) )
assertNull ( map0 )
assertEquals ( true , paramAndPropertyAncestorTagImpl0 . isAllowEmptyParam ( ) )
assertEquals ( 0 , paramAndPropertyAncestorTagImpl0 . doAfterBody ( ) )
assertEquals ( 6 , paramAndPropertyAncestorTagImpl0 . doEndTag ( ) )
assertEquals ( false , paramAndPropertyAncestorTagImpl0 . isAllowEmptyParam ( ) )
assertEquals ( 6 , paramAndPropertyAncestorTagImpl0 . doEndTag ( ) )
assertEquals ( 6 , paramAndPropertyAncestorTagImpl0 . doEndTag ( ) )
assertEquals ( 2 , paramAndPropertyAncestorTagImpl0 . doStartTag ( ) )
assertNull ( map0 )
assertEquals ( 1 , map0 . size ( ) )
assertEquals ( 0 , attributesTagSupport0 . doAfterBody ( ) )
assertEquals ( 0 , attributesTagSupport0 . doAfterBody ( ) )
assertEquals ( 0 , map0 . size ( ) )
assertEquals ( 0 , attributesTagSupport0 . doAfterBody ( ) )
assertEquals ( 0 , attributesTagSupport0 . doAfterBody ( ) )
assertEquals ( "" , string0 )
assertEquals ( true , map0 . isEmpty ( ) )
assertEquals ( 6 , paramTag0 . doEndTag ( ) )
assertEquals ( 6 , paramTag0 . doEndTag ( ) )
assertEquals ( 6 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 273L , long0 )
assertEquals ( 0 , getUrlTag0 . doStartTag ( ) )
assertNull ( getUrlTag0 . getId ( ) )
assertEquals ( 0 , getUrlTag0 . doAfterBody ( ) )
assertNotNull ( inlineUtil0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNotNull ( string0 )
assertEquals ( "ji , f / n6tJ#2xT - / Bg = \"ji , f / n6tJ#2xT - / Bg\" " , string0 )
assertEquals ( 2 , int0 )
assertEquals ( 0 , bufferTag0 . doAfterBody ( ) )
assertEquals ( 6 , propertyTag0 . doEndTag ( ) )
assertEquals ( 6 , propertyTag0 . doEndTag ( ) )
assertEquals ( 0 , int0 )
assertNull ( variableInfoArray0 )
assertNotNull ( themeUtil0 )
assertNull ( string0 )
assertEquals ( "wptdpk ; rvzw / ^$pwfp , " , windowState0 . toString ( ) )
assertEquals ( 0 , phoneNumberConverterTag0 . doAfterBody ( ) )
assertNull ( phoneNumberConverterTag0 . getId ( ) )
assertNotNull ( object0 )
assertEquals ( "adq . dda ( dD - [ k > : - } - - `" , phoneNumberConverter0 . getUnitedStatesFormat ( ) )
assertEquals ( true , phoneNumberConverter0 . isTransient ( ) )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( "type" , string0 )
assertNull ( object0 )
assertEquals ( "208" , string0 )
assertEquals ( 0 , emailAddressValidatorTag0 . doAfterBody ( ) )
assertEquals ( false , emailAddressValidator0 . isTransient ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , emailAddressValidator0 . isTransient ( ) )
assertNull ( object0 )
assertNotNull ( jSFTagUtil0 )
assertNull ( string0 )
assertEquals ( "E@ ! ( # < ^" , string0 )
assertNull ( string0 )
assertEquals ( false , wrapPortletTag0 . isAllowEmptyParam ( ) )
assertEquals ( 2 , int0 )
assertNotNull ( variableInfoArray0 )
assertEquals ( "org . slf4j . helpers . BasicMarkerFactory" , string0 )
assertNotNull ( basicMarkerFactory0 )
assertEquals ( "ch . qos . logback . classic . util . LogbackMDCAdapter" , string0 )
assertNotNull ( logbackMDCAdapter0 )
