assertNotNull ( sSLSocketFactoryImpl0 )
assertNull ( keyManagerArray0 )
assertNull ( trustManagerArray0 )
assertEquals ( "Outgoing" , string0 )
assertEquals ( 3649L , ghostSocketReaper0 . getId ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 3768L , ghostSocketReaper0 . getId ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( 1947 , theClient0 . getTimeout ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( " { TheClient Socket [ unconnected ] , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( true , theClient0 . getCommunicationLogging ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " { TheClient no socket , Event : ( ClientEvent - Run Blocking ) } " , theClient0 . toString ( ) )
assertEquals ( false , theClient0 . getTrusted ( ) )
assertEquals ( " ( ClientEvent - Max Connection Blocking ) " , string0 )
assertEquals ( "Object" , string0 )
assertEquals ( "Success" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 14 , registerChannelRequest0 . getOps ( ) )
assertEquals ( 14 , registerChannelRequest0 . getOps ( ) )
assertEquals ( 1578 , registerChannelRequest0 . getOps ( ) )
assertEquals ( 1578 , registerChannelRequest0 . getOps ( ) )
assertEquals ( 1578 , registerChannelRequest0 . getOps ( ) )
assertNull ( clientHandler0 )
assertEquals ( " < ClientHandler - Pool#9 - ID : 1 > " , nonBlockingClientHandler0 . getName ( ) )
assertNull ( clientHandler0 )
assertEquals ( " { < ClientHandler - Pool#27 - ID : 1 > - [ non - connected ] } " , nonBlockingClientHandler0 . toString ( ) )
assertEquals ( " < ClientHandler - Pool# - 40 - ID : 23 > " , blockingClientHandler0 . getName ( ) )
assertNull ( clientHandler0 )
assertEquals ( " { < ClientHandler - Pool# - 1 - ID : 1 > - [ non - connected ] } " , nonBlockingClientHandler0 . toString ( ) )
assertNull ( clientHandler0 )
assertNull ( clientHandler0 )
assertEquals ( " < ClientHandler - Pool#0 - ID : 1 > " , blockingClientHandler0 . getName ( ) )
assertNull ( clientHandler0 )
assertEquals ( " { < ClientHandler - Pool#9 - ID : 1 > - [ non - connected ] } " , nonBlockingClientHandler0 . info ( ) )
assertNull ( clientHandler0 )
assertEquals ( 27 , nonBlockingClientHandler0 . getInstanceCount ( ) )
assertNotNull ( string0 )
assertEquals ( false , qSAdminShell0 . isAlive ( ) )
assertNotNull ( qSAdminShell0 )
assertEquals ( true , qSAdminShell0 . isDaemon ( ) )
assertEquals ( "GUIAdminShell" , qSAdminShell0 . getName ( ) )
assertEquals ( 34401L , qSAdminShell0 . getId ( ) )
assertEquals ( 34401L , qSAdminShell0 . getId ( ) )
assertEquals ( 0 , headerPanel0 . getWidth ( ) )
assertNotNull ( headerPanel0 )
assertNotNull ( headerPanel0 )
assertNotNull ( headerPanel0 )
assertNotNull ( headerPanel0 )
assertNotNull ( mainCommandPanel0 )
assertNotNull ( mainCommandPanel0 )
assertEquals ( false , qSAdminMain0 . isConnected ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( false , qSAdminMain0 . isConnected ( ) )
assertEquals ( false , qSAdminMain0 . isConnected ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( false , qSAdminMain0 . isConnected ( ) )
assertEquals ( true , qSAdminMain0 . getAppendToConsole ( ) )
assertEquals ( false , qSAdminMain0 . isConnected ( ) )
assertNotNull ( propertiePanel0 )
assertNotNull ( propertiePanel0 )
assertNotNull ( list0 )
assertEquals ( 23 , map0 . size ( ) )
assertEquals ( "server" , string0 )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertNotNull ( string0 )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "server" , propertie0 . getTarget ( ) )
assertNotNull ( string0 )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertNotNull ( string0 )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "server" , propertie0 . getTarget ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "get server null" , propertie0 . getGetCommand ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "server" , propertie0 . getTarget ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "server" , propertie0 . getTarget ( ) )
assertEquals ( "get server null" , propertie0 . getGetCommand ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( "message for excess clients" , propertie0 . getVersion ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( " < propertie > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < get > no < / get > \n\t < set > no < / set > \n\t < type > edit < / type > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / propertie > \n" , propertie0 . toXML ( ) )
assertEquals ( false , propertie0 . isGet ( ) )
assertEquals ( false , propertie0 . isSet ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "yes" , propertie0 . getTargetNeeded ( ) )
assertEquals ( false , propertie0 . isGet ( ) )
assertEquals ( "get server null" , propertie0 . getType ( ) )
assertEquals ( 7 , jPasswordField0 . countComponents ( ) )
assertEquals ( 17 , map0 . size ( ) )
assertEquals ( 17 , list0 . size ( ) )
assertEquals ( " . / . . / plugin" , string0 )
assertEquals ( false , cmdConsole0 . isPaintingForPrint ( ) )
assertEquals ( 0 . 5F , cmdConsole0 . getAlignmentY ( ) , 0 . 01F )
assertEquals ( true , cmdConsole0 . isDoubleBuffered ( ) )
assertEquals ( "null server" , simpleCommand0 . getSimpleCommand ( ) )
assertEquals ( " < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( "no" , simpleCommand0 . getMultiLineResponse ( ) )
assertEquals ( " < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( " < simple - command > \n\t < name > null < / name > \n\t < command > < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > no < / target - needed > \n < / simple - command > \n < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( " < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < desc > yes < / desc > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( " < simple - command > \n\t < name > < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > no < / target - needed > \n < / simple - command > \n < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( "server" , simpleCommand0 . getTarget ( ) )
assertNotNull ( string0 )
assertEquals ( "no" , simpleCommand0 . getMultiLineResponse ( ) )
assertEquals ( " < simple - command > \n\t < name > null < / name > \n\t < command > null < / command > \n\t < multi - line - response > no < / multi - line - response > \n\t < version > 1 . 3 < / version > \n\t < target - needed > yes < / target - needed > \n < / simple - command > \n" , simpleCommand0 . toXML ( ) )
assertEquals ( "null server" , simpleCommand0 . getSimpleCommand ( ) )
assertEquals ( "server" , simpleCommand0 . getTarget ( ) )
assertNotNull ( string0 )
assertEquals ( "null server" , string0 )
assertEquals ( "server" , simpleCommand0 . getTarget ( ) )
assertEquals ( "server" , simpleCommand0 . getTarget ( ) )
assertEquals ( "null server" , simpleCommand0 . getSimpleCommand ( ) )
assertEquals ( "yes" , simpleCommand0 . getTargetNeeded ( ) )
assertEquals ( false , abstractDocument_DefaultDocumentEvent0 . canRedo ( ) )
assertEquals ( " [ ] " , abstractDocument_DefaultDocumentEvent0 . toString ( ) )
assertEquals ( true , jButton0 . isEnabled ( ) )
assertEquals ( 13 , abstractDocument_DefaultDocumentEvent0 . getLength ( ) )
assertEquals ( true , jButton0 . isEnabled ( ) )
assertEquals ( "" , string0 )
assertNotNull ( myString0 )
assertNotNull ( string0 )
assertEquals ( "" , string0 )
assertEquals ( "0 . 00 B" , string0 )
assertEquals ( "p / * K'Vi" , string0 )
assertNotNull ( string0 )
assertEquals ( true , assertion0 . isEnabled ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( classLoader0 )
assertNotNull ( classUtil0 )
assertNotNull ( classLoader0 )
assertNull ( classLoader0 )
assertNotNull ( simpleConsoleFormatter0 )
assertNotNull ( simpleConsoleFormatter0 )
assertNotNull ( simpleTextFormatter0 )
assertNotNull ( simpleTextFormatter0 )
assertNotNull ( simpleTextFormatter0 )
assertNotNull ( simpleConsoleWithThreadFormatter0 )
assertNotNull ( simpleConsoleWithThreadFormatter0 )
assertEquals ( "Init Server Hook to setup logging . " , string0 )
assertEquals ( true , advancedSettings0 . getDebugNonBlockingMode ( ) )
assertEquals ( 981 , advancedSettings0 . getPerformancePreferencesBandwidth ( ) )
assertEquals ( 0 , advancedSettings0 . getPerformancePreferencesBandwidth ( ) )
assertEquals ( false , advancedSettings0 . getClientSocketTcpNoDelay ( ) )
assertEquals ( "org . quickserver . net . server . impl . OptimisticClientIdentifier" , advancedSettings0 . getClientIdentifier ( ) )
assertEquals ( true , advancedSettings0 . getUseDirectByteBuffer ( ) )
assertEquals ( - 1 , advancedSettings0 . getSocketLinger ( ) )
assertEquals ( 465 , advancedSettings0 . getClientSocketReceiveBufferSize ( ) )
assertEquals ( false , advancedSettings0 . getClientSocketTcpNoDelay ( ) )
assertEquals ( 544 , advancedSettings0 . getMaxThreadsForNioWrite ( ) )
assertEquals ( 0 , advancedSettings0 . getBacklog ( ) )
assertEquals ( "ISO - 8859 - 1" , advancedSettings0 . getCharset ( ) )
assertEquals ( "ISO - 8859 - 1" , advancedSettings0 . getCharset ( ) )
assertEquals ( false , advancedSettings0 . getClientSocketTcpNoDelay ( ) )
assertEquals ( 544 , advancedSettings0 . getByteBufferSize ( ) )
assertEquals ( 0 , advancedSettings0 . getPerformancePreferencesBandwidth ( ) )
assertEquals ( 0 , advancedSettings0 . getPerformancePreferencesBandwidth ( ) )
assertEquals ( 0 , advancedSettings0 . getPerformancePreferencesConnectionTime ( ) )
assertEquals ( "ISO - 8859 - 1" , advancedSettings0 . getClientIdentifier ( ) )
assertEquals ( 10 , advancedSettings0 . getMaxThreadsForNioWrite ( ) )
assertNotNull ( string0 )
assertEquals ( " < advanced - settings > \n\t < charset > ISO - 8859 - 1 < / charset > \n\t < use - direct - byte - buffer > true < / use - direct - byte - buffer > \n\t < byte - buffer - size > 65536 < / byte - buffer - size > \n\t < backlog > 0 < / backlog > \n\t < socket - linger > - 1 < / socket - linger > \n\t < debug - non - blocking - mode > false < / debug - non - blocking - mode > \n\t < client - identifier > org . quickserver . net . server . impl . OptimisticClientIdentifier < / client - identifier > \n\t < qsobject - pool - maker > org . quickserver . util . pool . MakeQSObjectPool < / qsobject - pool - maker > \n\t < max - threads - for - nio - write > 10 < / max - threads - for - nio - write > \n\t < performance - preferences - connection - time > 0 < / performance - preferences - connection - time > \n\t < performance - preferences - latency > 0 < / performance - preferences - latency > \n\t < performance - preferences - bandwidth > 0 < / performance - preferences - bandwidth > \n\t < client - socket - tcp - no - delay > false < / client - socket - tcp - no - delay > \n\t < client - socket - traffic - class > dVD^ & # < / client - socket - traffic - class > \n < / advanced - settings > \n" , string0 )
assertEquals ( 465 , advancedSettings0 . getClientSocketSendBufferSize ( ) )
assertEquals ( false , applicationConfiguration0 . isEmpty ( ) )
assertEquals ( "gui" , applicationConfiguration0 . getPromptType ( ) )
assertEquals ( true , applicationConfiguration0 . isEmpty ( ) )
assertEquals ( "gui" , applicationConfiguration0 . getPromptType ( ) )
assertEquals ( "gui" , applicationConfiguration0 . getPromptType ( ) )
assertEquals ( "console" , applicationConfiguration0 . getPromptType ( ) )
assertNull ( property0 )
assertEquals ( " { } " , property0 . getValue ( ) )
assertEquals ( " < application - configuration > \n\t < prompt - type > gui < / prompt - type > < / application - configuration > \n" , string0 )
assertNotNull ( string0 )
assertEquals ( 25 , threadObjectPoolConfig1 . getInitSize ( ) )
assertEquals ( " < thread - object - pool > \n\t < max - active > - 1 < / max - active > \n\t < max - idle > 50 < / max - idle > \n\t < init - size > 25 < / init - size > \n < / thread - object - pool > \n" , string0 )
assertEquals ( " < thread - object - pool > \n\t < max - active > - 1 < / max - active > \n\t < max - idle > 50 < / max - idle > \n\t < init - size > 25 < / init - size > \n < / thread - object - pool > \n" , string0 )
assertEquals ( 0 , serverHooks0 . size ( ) )
assertEquals ( true , serverHooks0 . isEmpty ( ) )
assertEquals ( false , serverHooks0 . isEmpty ( ) )
assertEquals ( " < server - hooks > \n < / server - hooks > \n" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( - 1 , secure0 . getPort ( ) )
assertEquals ( true , secure0 . isEnable ( ) )
assertEquals ( "TLS" , secure0 . getProtocol ( ) )
assertEquals ( "TLS" , secure0 . getProtocol ( ) )
assertEquals ( "TLS" , secure0 . getProtocol ( ) )
assertEquals ( false , secure0 . getEnable ( ) )
assertEquals ( 535 , secure0 . getPort ( ) )
assertEquals ( - 1 , secure0 . getPort ( ) )
assertEquals ( false , secure0 . isClientAuthEnable ( ) )
assertEquals ( "sBV - 4t6Xh38`V^" , secure0 . getProtocol ( ) )
assertEquals ( false , secure0 . isClientAuthEnable ( ) )
assertNotNull ( secureStore0 )
assertEquals ( " < secure > \n\t < enable > false < / enable > \n\t < load > false < / load > \n\t < protocol > TLS < / protocol > \n\t < client - auth - enable > false < / client - auth - enable > \n\t < secure - store > \n\t\t < type > JKS < / type > \n\t\t < algorithm > SunX509 < / algorithm > \n\t\t < secure - store - manager > org . quickserver . security . SecureStoreManager < / secure - store - manager > \n\t < / secure - store > \n < / secure > \n" , string0 )
assertEquals ( " < access - constraint > \n < / access - constraint > \n" , string0 )
assertEquals ( " < access - constraint > \n < / access - constraint > \n < access - constraint > \n < access - constraint > \n < / access - constraint > \n < / access - constraint > \n" , string0 )
assertEquals ( " < access - constraint > \n < / access - constraint > \n < access - constraint > \n < access - constraint > \n < / access - constraint > \n\t < ip - filter > \n < access - constraint > \n < / access - constraint > \n\t\t < enable > false < / enable > \n < access - constraint > \n < / access - constraint > \n\t\t < allow - access > false < / allow - access > \n < access - constraint > \n < / access - constraint > \n\t\t < ip - collection > \n < access - constraint > \n < / access - constraint > \n\t\t < / ip - collection > \n < access - constraint > \n < / access - constraint > \n\t < / ip - filter > \n < access - constraint > \n < / access - constraint > \n < / access - constraint > \n" , string0 )
assertEquals ( false , socket0 . isOutputShutdown ( ) )
assertEquals ( false , socket0 . isBound ( ) )
assertEquals ( "org . quickserver . security . SecureStoreManager" , secureStore0 . getSecureStoreManager ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertEquals ( "org . quickserver . security . SecureStoreManager" , secureStore0 . getSecureStoreManager ( ) )
assertEquals ( " { _dWSu0rBmFf" , secureStore0 . getAlgorithm ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertEquals ( "SunX509" , secureStore0 . getAlgorithm ( ) )
assertEquals ( "SunX509" , secureStore0 . getAlgorithm ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertEquals ( "JKS" , secureStore0 . getType ( ) )
assertNotNull ( string0 )
assertEquals ( "org . quickserver . security . SecureStoreManager" , secureStore0 . getSecureStoreManager ( ) )
assertEquals ( "SunX509" , secureStore0 . getAlgorithm ( ) )
assertEquals ( "org . quickserver . security . SecureStoreManager" , secureStore0 . getSecureStoreManager ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( true , serverMode0 . getBlocking ( ) )
assertNotNull ( string0 )
assertEquals ( true , serverMode0 . getBlocking ( ) )
assertEquals ( true , serverMode0 . getBlocking ( ) )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertEquals ( "Slb% / l~ZW" , trustStoreInfo0 . getStoreFile ( ) )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertNotNull ( string0 )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertNotNull ( string0 )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertEquals ( "NONE" , trustStoreInfo0 . getStoreFile ( ) )
assertNotNull ( string0 )
assertEquals ( " < / store - password > \n < trust - store - info > \n < / store - password > \n\t < store - file > NONE < / store - file > \n < / store - password > \n\t < / store - password > \n < / store - password > \n\t < provider > < / store - password > \n < / provider > \n < / store - password > \n < / trust - store - info > \n" , string0 )
assertNotNull ( object0 )
assertEquals ( false , iterator0 . hasNext ( ) )
assertEquals ( ( - 1 ) , basicObjectPool_Config0 . maxActive )
assertEquals ( 1 , basicObjectPool0 . getNumActive ( ) )
assertEquals ( 0 , basicObjectPool0 . getNumIdle ( ) )
assertEquals ( 10 , basicObjectPool_Config0 . maxIdle )
assertEquals ( 10 , basicObjectPool_Config0 . maxIdle )
assertEquals ( 1 , basicObjectPool0 . getNumActive ( ) )
assertEquals ( ( - 1 ) , basicObjectPool_Config0 . maxActive )
assertNotNull ( object0 )
assertEquals ( 10 , basicObjectPool_Config0 . maxIdle )
assertEquals ( " < ClientHandler - Pool#1 - ID : 1 > " , nonBlockingClientHandler0 . getName ( ) )
assertEquals ( " { < ClientHandler - Pool#6 - ID : 3 > - [ non - connected ] } " , blockingClientHandler0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( " < ClientHandler - Pool#1981 - ID : 1 > " , blockingClientHandler0 . getName ( ) )
assertNotNull ( poolHelper0 )
assertEquals ( true , boolean0 )
assertEquals ( true , byteBufferObjectFactory0 . useDirectByteBuffer )
assertEquals ( ( - 712 ) , byteBufferObjectFactory0 . bufferSize )
assertEquals ( true , boolean0 )
assertEquals ( false , byteBufferObjectFactory0 . useDirectByteBuffer )
assertEquals ( 1 , softReferenceObjectPool0 . getNumActive ( ) )
assertEquals ( 0 , makeQSObjectPool0 . getNumIdle ( ) )
assertEquals ( true , softReferenceObjectPool0 . isClosed ( ) )
assertEquals ( 1 , softReferenceObjectPool0 . getNumIdle ( ) )
assertEquals ( 0 , int0 )
assertNull ( object0 )
assertEquals ( 0 , makeQSObjectPool0 . getNumActive ( ) )
assertFalse ( makeQSObjectPool1 . equals ( makeQSObjectPool0 ) )
assertNotNull ( clientThread0 )
assertNotNull ( clientThread0 )
assertNotNull ( clientThread0 )
assertNotNull ( clientThread0 )
assertNotNull ( clientThread0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertNotNull ( clientPool0 )
assertEquals ( 10 , clientPool0 . getMaxThreadsForNioWrite ( ) )
assertEquals ( 1746L , clientThread0 . getId ( ) )
assertEquals ( "Thread [ < ClientThread - Pool# - 1 - ID : 1 > , 5 , Test Execution ] - U - Client null" , clientThread0 . toString ( ) )
assertEquals ( "Thread [ < ClientThread - Pool# - 1 - ID : 14 > , 5 , Test Execution ] - U - Client null" , clientThread0 . toString ( ) )
assertEquals ( false , boolean0 )
assertNotNull ( thread0 )
assertEquals ( 3 , timeUnit0 . ordinal ( ) )
assertEquals ( 120 , int0 )
assertEquals ( 50 , int0 )
assertEquals ( 10 , int0 )
assertNull ( threadPoolExecutor0 )
assertEquals ( 10 , appThreadPool0 . getDefaultCorePoolSize ( ) )
assertNotNull ( jFrameUtilities0 )
