assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoderB0 . getFilter ( ) )
assertEquals ( 0 , pngEncoderB0 . getFilter ( ) )
assertEquals ( 0 , pngEncoderB0 . getCompressionLevel ( ) )
assertEquals ( false , pngEncoderB0 . getEncodeAlpha ( ) )
assertNotNull ( siteRenderer0 )
assertEquals ( "q\n0 180 m\n0 0 l\n100 0 l\n100 180 l\nh\nW\nn\n1 w\n2 J\n0 j\n10 M\n [ ] 0 d\nq\n2 w\n0 J\n2 j\n0 0 0 RG\n - 4 186 . 5 m\n - 4 172 . 5 l\n - 4 171 . 67 - 3 . 33 171 - 2 . 5 171 c\n2 . 5 171 l\n3 . 33 171 4 171 . 67 4 172 . 5 c\n4 186 . 5 l\n4 187 . 33 3 . 33 188 2 . 5 188 c\n - 2 . 5 188 l\n - 3 . 33 188 - 4 187 . 33 - 4 186 . 5 c\nh\nS\n0 0 0 rg\n - 4 186 . 5 m\n - 4 172 . 5 l\n - 4 171 . 67 - 3 . 33 171 - 2 . 5 171 c\n2 . 5 171 l\n3 . 33 171 4 171 . 67 4 172 . 5 c\n4 186 . 5 l\n4 187 . 33 3 . 33 188 2 . 5 188 c\n - 2 . 5 188 l\n - 3 . 33 188 - 4 187 . 33 - 4 186 . 5 c\nh\nf\n - 4 186 . 5 m\n - 4 172 . 5 l\n - 4 171 . 67 - 3 . 33 171 - 2 . 5 171 c\n2 . 5 171 l\n3 . 33 171 4 171 . 67 4 172 . 5 c\n4 186 . 5 l\n4 187 . 33 3 . 33 188 2 . 5 188 c\n - 2 . 5 188 l\n - 3 . 33 188 - 4 187 . 33 - 4 186 . 5 c\nh\nS\n0 . 49804 0 . 49804 0 . 49804 rg\n - 4 186 . 5 m\n - 4 172 . 5 l\n - 4 171 . 67 - 3 . 33 171 - 2 . 5 171 c\n2 . 5 171 l\n3 . 33 171 4 171 . 67 4 172 . 5 c\n4 186 . 5 l\n4 187 . 33 3 . 33 188 2 . 5 188 c\n - 2 . 5 188 l\n - 3 . 33 188 - 4 187 . 33 - 4 186 . 5 c\nh\nf\n" , graphic0 . toString ( ) )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = Dialog , name = sanserif , style = plain , size = 12 ] , color = java . awt . Color [ r = 255 , g = 255 , b = 255 ] ] " , pdfGraphics2D0 . toString ( ) )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = Dialog , name = sanserif , style = plain , size = 12 ] , color = java . awt . Color [ r = 255 , g = 255 , b = 255 ] ] " , pdfGraphics2D0 . toString ( ) )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( 0 . 0F , point3D0 . getZ ( ) , 0 . 01F )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( 180 . 0F , point3D0 . getX ( ) , 0 . 01F )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( - 0 . 0F , point3D0 . getX ( ) , 0 . 01F )
assertEquals ( 0 . 0F , point3D0 . getX ( ) , 0 . 01F )
assertEquals ( 797 . 3006F , point3D0 . getY ( ) , 0 . 01F )
assertNotNull ( palette0 )
assertNotNull ( view0 )
assertNotNull ( view0 )
assertNotNull ( view0 )
assertEquals ( 1 , unitTests0 . countTestCases ( ) )
assertEquals ( " ; ( corina . map . UnitTests ) " , unitTests0 . toString ( ) )
assertEquals ( 1 , unitTests0 . countTestCases ( ) )
assertEquals ( " } f" , unitTests0 . getName ( ) )
assertEquals ( 1 , unitTests0 . countTestCases ( ) )
assertNotNull ( byteArray0 )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 0 , pngEncoder0 . getCompressionLevel ( ) )
assertEquals ( false , pngEncoder0 . getEncodeAlpha ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( false , pngEncoder0 . getEncodeAlpha ( ) )
assertEquals ( false , pngEncoder0 . getEncodeAlpha ( ) )
assertEquals ( true , pngEncoder0 . getEncodeAlpha ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 0 , pngEncoder0 . getCompressionLevel ( ) )
assertEquals ( 0 , pngEncoder0 . getFilter ( ) )
assertEquals ( 1 , pngEncoder0 . getFilter ( ) )
assertEquals ( - 371 , pngEncoder0 . getFilter ( ) )
assertNotNull ( doubleArray0 )
assertNotNull ( doubleArray0 )
assertFalse ( doubleArray0 . equals ( doubleArray1 ) )
assertNotNull ( rectangularProjection0 )
assertNotNull ( zoomInTool0 )
assertNotNull ( zoomInTool0 )
assertNotNull ( zoomInTool0 )
assertNotNull ( zoomInTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( handTool0 )
assertNotNull ( rulerTool0 )
assertNotNull ( rulerTool0 )
assertNotNull ( rulerTool0 )
assertNotNull ( rulerTool0 )
assertNotNull ( rulerTool0 )
assertNotNull ( arrowTool0 )
assertNotNull ( arrowTool0 )
assertNotNull ( arrowTool0 )
assertNotNull ( arrowTool0 )
assertNotNull ( arrowTool0 )
assertNotNull ( arrowTool0 )
assertEquals ( "Measure Tool" , rulerTool0 . getTooltip ( ) )
assertEquals ( 10211 , mouseEvent0 . getYOnScreen ( ) )
assertEquals ( 0 , mouseEvent0 . getXOnScreen ( ) )
assertEquals ( false , keyEvent0 . isControlDown ( ) )
assertEquals ( "Zoom In Tool" , zoomInTool0 . getTooltip ( ) )
assertNotNull ( arrowTool0 )
assertNotNull ( zoomOutTool0 )
assertNotNull ( zoomOutTool0 )
assertNotNull ( zoomOutTool0 )
assertNotNull ( zoomOutTool0 )
assertNotNull ( zoomOutTool0 )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = Dialog , name = sans - serif , style = plain , size = 8 ] , color = java . awt . Color [ r = 0 , g = 0 , b = 0 ] ] " , pdfGraphics2D0 . toString ( ) )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = Dialog , name = sans - serif , style = plain , size = 10 ] , color = java . awt . Color [ r = 0 , g = 0 , b = 0 ] ] " , pdfGraphics2D0 . toString ( ) )
assertEquals ( false , legendLayer0 . isDirty ( ) )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = SansSerif , name = sansserif , style = plain , size = 10 ] , color = java . awt . Color [ r = 128 , g = 128 , b = 128 ] ] " , pdfGraphics2D0 . toString ( ) )
assertEquals ( "com . lowagie . text . pdf . PdfGraphics2D [ font = java . awt . Font [ family = SansSerif , name = sansserif , style = plain , size = 10 ] , color = java . awt . Color [ r = 128 , g = 128 , b = 128 ] ] " , pdfGraphics2D0 . toString ( ) )
assertNotNull ( macintosh0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( string0 )
assertEquals ( false , platform0 . isInitialized ( ) )
assertEquals ( "control" , string0 )
assertNotNull ( netware0 )
assertEquals ( "" , string0 )
assertNull ( prefs0 . getCorinaDir ( ) )
assertNull ( string0 )
assertEquals ( 0 , hashtable0 . size ( ) )
assertNull ( properties0 )
assertEquals ( "Preferences" , string0 )
assertEquals ( false , prefs0 . isInitialized ( ) )
assertNotNull ( geometry0 )
assertEquals ( " . RWL" , string0 )
assertEquals ( "" , charArrayWriter0 . toString ( ) )
assertEquals ( "Tucson ( without header ) " , string0 )
assertEquals ( " . TXT" , string0 )
assertEquals ( "2 - column" , string0 )
assertEquals ( 0 , sample0 . computeRadius ( ) )
assertEquals ( " . TXT" , twoColumn0 . getDefaultExtension ( ) )
assertNotNull ( line0 )
assertEquals ( false , font0 . hasLayoutAttributes ( ) )
assertNotNull ( line0 )
assertNotNull ( textLine0 )
assertEquals ( 2 , int0 )
assertEquals ( 18 , int0 )
assertEquals ( 648 . 0 , pageFormat0 . getImageableHeight ( ) , 0 . 01D )
assertNotNull ( byLine0 )
assertEquals ( true , jInternalFrame0 . isFocusCycleRoot ( ) )
assertEquals ( "java . awt . Dimension [ width = 118 , height = 31 ] " , dimension0 . toString ( ) )
assertEquals ( "java . awt . Dimension [ width = 118 , height = 31 ] " , dimension0 . toString ( ) )
assertEquals ( 0 , jInternalFrame_JDesktopIcon0 . getDebugGraphicsOptions ( ) )
assertNull ( jInternalFrame_JDesktopIcon0 . getToolTipText ( ) )
assertEquals ( false , jRootPane0 . isPaintingForPrint ( ) )
assertEquals ( true , jScrollPane0 . isRequestFocusEnabled ( ) )
assertEquals ( - 2 , defaultListCellRenderer0 . getWidth ( ) )
assertEquals ( 2 , defaultListCellRenderer0 . getComponentCount ( ) )
assertEquals ( 0 . 5F , float0 , 0 . 01F )
assertEquals ( 0 , jTextPane0 . getCaretPosition ( ) )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( "java . awt . Dimension [ width = 2147483647 , height = 2147483647 ] " , dimension0 . toString ( ) )
assertEquals ( false , defaultListCellRenderer0 . isPaintingForPrint ( ) )
assertNotNull ( dimension0 )
assertEquals ( 0 , jTextPane0 . countComponents ( ) )
assertEquals ( 2 , defaultListCellRenderer0 . countComponents ( ) )
assertEquals ( "java . awt . Dimension [ width = 20 , height = 4 ] " , dimension0 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , logging0 . isInitialized ( ) )
assertEquals ( false , app0 . isInitialized ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , component0 . isValid ( ) )
assertEquals ( 0 . 5F , component0 . getAlignmentX ( ) , 0 . 01F )
assertEquals ( false , component0 . isFontSet ( ) )
assertNotNull ( component0 )
assertEquals ( 0 , component0 . getX ( ) )
assertEquals ( false , component0 . requestFocusInWindow ( ) )
assertEquals ( true , component0 . isOpaque ( ) )
assertEquals ( false , component0 . isOpaque ( ) )
assertNotNull ( dataComponent0 )
assertEquals ( false , component0 . isShowing ( ) )
assertNotNull ( component0 )
assertEquals ( "null = * null" , string0 )
assertNull ( objectArray0 )
assertEquals ( 1 , int0 )
assertNotNull ( string0 )
assertNull ( objectArray0 )
assertNotNull ( string0 )
assertEquals ( "null = null" , criterion_YearIsExactly0 . toString ( ) )
assertNotNull ( string0 )
assertEquals ( "null modified before null" , string0 )
assertEquals ( " ? ? ? " , string0 )
assertNotNull ( string0 )
assertEquals ( "null > null" , string0 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertNull ( stringArray0 )
assertEquals ( "m . null = 'null'" , string0 )
assertNull ( criterion_OneOfIs0 )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertEquals ( "NOT m . null = 'null'" , string0 )
assertEquals ( "m . null = 'null'" , string0 )
assertEquals ( "null = null" , string0 )
assertEquals ( 5 , int0 )
assertEquals ( "null modified within null" , string0 )
assertEquals ( " ? ? ? " , string0 )
assertNotNull ( stringArray0 )
assertNull ( stringArray0 )
assertEquals ( "null not set" , string0 )
assertEquals ( "IS NULL m . null" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( 5 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( "not set" , string0 )
assertNull ( stringArray0 )
assertEquals ( "NOT m . null = 'null'" , string0 )
assertNotNull ( string0 )
assertEquals ( " ? ? ? " , string0 )
assertEquals ( "null modified today" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( " ? ? ? " , string0 )
assertEquals ( "null modified on null" , string0 )
assertEquals ( "r . null > null" , string0 )
assertEquals ( "null > null" , string0 )
assertNull ( criterion_StringContains0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "m . null like 'null~'" , string0 )
assertEquals ( true , boolean0 )
assertNotNull ( string0 )
assertEquals ( "r . null = 'null'" , string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( "r . null < null" , string0 )
assertEquals ( "null = * null * " , string0 )
assertNotNull ( string0 )
assertEquals ( " ? ? ? " , string0 )
assertEquals ( "null modified after null" , string0 )
assertNotNull ( string0 )
assertEquals ( "null < null" , string0 )
assertEquals ( "ends with = * null > null" , criterion_StringEndsWith0 . toString ( ) )
assertNull ( criterion0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotNull ( search0 )
assertEquals ( "SELECT * FROM meta m ; " , search0 . toSQL ( ) )
assertEquals ( "" , search0 . toString ( ) )
assertNotNull ( search0 )
assertEquals ( "javax . swing . plaf . ColorUIResource [ r = 184 , g = 207 , b = 229 ] " , colorUIResource1 . toString ( ) )
assertEquals ( 184 , colorUIResource0 . getRed ( ) )
assertEquals ( "ujb { H" , string0 )
assertNotNull ( colorComboBox0 )
assertNotNull ( colorComboBox0 )
assertNotNull ( graphElementsPanel0 )
assertEquals ( false , elemColorTable0 . isFocusOwner ( ) )
assertEquals ( 1 , int0 )
assertEquals ( true , boolean0 )
assertNull ( year0 )
assertEquals ( " > QTmQ\n5S . PD2wY#$" , string0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( 1 . 0F , float0 , 0 . 01F )
assertNotNull ( range0 )
assertNotNull ( graph0 )
assertEquals ( ( - 1 ) , graph0 . xoffset )
assertEquals ( 1 , graph0 . printerlineThickness )
assertEquals ( " < graph scale = \"1 . 0\" xoffset = \"0\" yoffset = \"0\" > null < / graph > " , graph0 . toXML ( ) )
assertEquals ( 1 , graph0 . xoffset )
assertNotNull ( graph0 )
assertEquals ( 1 , graph0 . printerlineThickness )
assertNotNull ( graph0 )
assertEquals ( 0 . 8F , graph0 . scale , 0 . 01F )
assertEquals ( " < graph scale = \"1 . 0\" xoffset = \"0\" yoffset = \"0\" > null < / graph > " , graph0 . toXML ( ) )
assertEquals ( 1 , graph0 . lineThickness )
assertNotNull ( graph0 )
assertEquals ( 1 , graph0 . printerlineThickness )
assertNotNull ( graph0 )
assertEquals ( 1 , graph0 . lineThickness )
assertEquals ( " < graph scale = \"1 . 0\" xoffset = \"0\" yoffset = \"0\" > null < / graph > " , graph0 . toXML ( ) )
assertEquals ( " < graph scale = \"1 . 0\" xoffset = \"0\" yoffset = \"0\" > null < / graph > " , graph0 . toXML ( ) )
assertEquals ( 1 , graph0 . printerlineThickness )
assertEquals ( 1 , graph0 . printerlineThickness )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( true , linkedList0 . isEmpty ( ) )
assertEquals ( "\u0000\u0000\u0000\u0000" , pureStringWriter0 . toString ( ) )
assertEquals ( "" , pureStringWriter0 . toString ( ) )
assertNotNull ( jDisclosureTriangle0 )
assertEquals ( "corina . util . JDisclosureTriangle [ , 0 , 0 , 0x0 , invalid , layout = java . awt . BorderLayout , alignmentX = 0 . 0 , alignmentY = 0 . 0 , border = , flags = 9 , maximumSize = , minimumSize = , preferredSize = ] " , jDisclosureTriangle0 . toString ( ) )
assertNotNull ( color1 )
assertEquals ( 8421504 , color1 . getRGB ( ) )
assertNotNull ( color1 )
assertEquals ( "java . awt . Color [ r = 0 , g = 0 , b = 0 ] " , color1 . toString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "Yd25tcHO = ywV#y ( " , string0 )
assertEquals ( 1 , jTable0 . getSelectedRowCount ( ) )
assertEquals ( false , mouseWheelEvent0 . isAltDown ( ) )
assertEquals ( 0 , mouseEvent0 . getYOnScreen ( ) )
assertEquals ( false , mouseWheelEvent0 . isConsumed ( ) )
assertEquals ( "java . awt . Panel [ panel42 , 0 , 0 , 0x0 , invalid , layout = java . awt . FlowLayout ] " , panel0 . toString ( ) )
assertNotNull ( colorPair0 )
assertEquals ( true , jLine0 . isMinimumSizeSet ( ) )
assertEquals ( true , jLine0 . isPreferredSizeSet ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( stringArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( stringArray0 )
assertNotNull ( intArray0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "8 > * NvV2@Qw@" , string0 )
assertNotNull ( string0 )
assertEquals ( 0 , jTable0 . getX ( ) )
assertNotNull ( noEmptySelection0 )
assertEquals ( " ( corina . util . UnitTests ) " , unitTests0 . toString ( ) )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertNotNull ( updateFolder0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( true , jLinedLabel0 . isRequestFocusEnabled ( ) )
assertEquals ( false , jLinedLabel0 . getIgnoreRepaint ( ) )
assertEquals ( 3 . 9269907F , float0 , 0 . 01F )
assertEquals ( 1 . 5707964F , float0 , 0 . 01F )
assertEquals ( 4 . 712389F , float0 , 0 . 01F )
assertEquals ( "Floating ( 11 - pt ) index of Untitled ( 1001 - 1000 , n = 0 ) " , floating0 . toString ( ) )
assertEquals ( "Floating ( 11 - pt ) index of * Untitled ( 1001 - 1000 , n = 0 ) " , floating0 . toString ( ) )
assertEquals ( "Floating ( 11 - pt ) " , floating0 . getName ( ) )
assertEquals ( 7 , exponential0 . getID ( ) )
assertEquals ( 7 , int0 )
assertNotNull ( string0 )
assertNotNull ( searchField0 )
assertNotNull ( searchField0 )
assertNotNull ( searchField0 )
assertNotNull ( searchField0 )
assertNull ( file1 . getParent ( ) )
assertEquals ( false , file1 . mkdirs ( ) )
assertEquals ( 2 , folderPopup0 . getComponentCount ( ) )
assertEquals ( "size / size" , string0 )
assertEquals ( false , boolean0 )
assertNull ( element0 )
assertNotNull ( imageIcon0 )
assertEquals ( 18 , icon0 . getIconHeight ( ) )
assertNotNull ( fileLength0 )
assertNull ( string0 )
assertEquals ( true , component0 . getFocusTraversalKeysEnabled ( ) )
assertEquals ( true , component0 . getFocusTraversalKeysEnabled ( ) )
assertEquals ( 1372795238522L , date0 . getTime ( ) )
assertEquals ( "01 / 01 / 70 , 01 : 00" , string0 )
assertEquals ( "0 bytes" , fileLength0 . toString ( ) )
assertEquals ( " - - " , fileLength0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertNotNull ( string1 )
assertEquals ( " - - " , string0 )
assertNotNull ( string0 )
assertNotNull ( bayesian0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertEquals ( false , boolean0 )
assertEquals ( 2 , countryPopup0 . getItemCount ( ) )
assertNotNull ( countryPopup0 )
assertNotNull ( countryPopup0 )
assertEquals ( "" , site0 . getTypeString ( ) )
assertTrue ( site0 . equals ( site1 ) )
assertEquals ( "" , string0 )
assertEquals ( "Unknown" , site0 . getTypesAsString ( ) )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertNotNull ( site2 )
assertNotNull ( site1 )
assertNotNull ( string0 )
assertEquals ( " < site > \n < type > 4 < / type > \n < / site > \n" , site0 . toXML ( ) )
assertEquals ( "2" , site0 . getTypeString ( ) )
assertEquals ( "32" , site0 . getTypeString ( ) )
assertEquals ( "31" , site0 . getTypeString ( ) )
assertEquals ( true , site0 . isForest ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( " < site > \n < type > 1 < / type > \n < / site > \n" , site0 . toXML ( ) )
assertNotNull ( color0 )
assertEquals ( "2" , site0 . getTypeString ( ) )
assertEquals ( "3" , site0 . getTypeString ( ) )
assertEquals ( false , boolean0 )
assertEquals ( " < site > \n < type > 1 < / type > \n < / site > \n" , site0 . toXML ( ) )
assertNotNull ( site1 )
assertTrue ( site0 . equals ( site1 ) )
assertNotNull ( site1 )
assertNotNull ( site2 )
assertNotNull ( site1 )
assertNotNull ( site2 )
assertEquals ( " < site > \n < location > + 000000 + 0000000 / < / location > \n < / site > \n" , site1 . toXML ( ) )
assertEquals ( "" , site1 . getCode ( ) )
assertNotNull ( sitePrinter0 )
assertEquals ( false , boolean0 )
assertEquals ( " + 000000 + 0000000 / " , location0 . toISO6709 ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "0\u00B00'S 0\u00B00'W" , location0 . toString ( ) )
assertEquals ( " + 900000 + 0000000 / " , location0 . toISO6709 ( ) )
assertEquals ( true , location0 . valid ( ) )
assertEquals ( "6\u00B014'S" , location0 . getLatitudeAsString ( ) )
assertEquals ( false , location0 . valid ( ) )
assertEquals ( true , location0 . valid ( ) )
assertEquals ( "0\u00B019'S 0\u00B00'W" , location0 . toString ( ) )
assertEquals ( ( - 90 . 0F ) , location0 . getLatitudeAsDegrees ( ) , 0 . 01F )
assertEquals ( " + 900000 + 0000000 / " , location0 . toISO6709 ( ) )
assertNotNull ( location0 )
assertNotNull ( location0 )
assertEquals ( " + 000000 - 1531411 / " , location0 . toISO6709 ( ) )
assertNotNull ( string0 )
assertEquals ( 648000 , location0 . getLongitudeAsSeconds ( ) )
assertEquals ( 90 . 0F , location0 . getLatitudeAsDegrees ( ) , 0 . 01F )
assertNotNull ( location1 )
assertNotNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( " + 900000 + 0000000 / " , location0 . toISO6709 ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNotSame ( location1 , location0 )
assertEquals ( false , boolean0 )
assertEquals ( "0 , 0 , S , 153 , 14 , W" , location0 . getEasyString ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "JO" , string0 )
assertNotNull ( stringArray0 )
assertEquals ( "Jorda" , string0 )
assertEquals ( " < unknown 'JO' > " , string0 )
