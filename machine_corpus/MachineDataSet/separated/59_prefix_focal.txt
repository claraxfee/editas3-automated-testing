void test0 ( ) throws Throwable { Engine engine0 = new Engine ( "" , 949 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void run ( Job job ) ; String getContextByName ( Job job , String name ) { for ( int i = 0 ; i < job . getContext ( ) . getContextElement ( ) . length ; i + + ) { if ( job . getContext ( ) . getContextElement ( i ) . getName ( ) . equals ( name ) ) { return job . getContext ( ) . getContextElement ( i ) . getContent ( ) ; } } return null ; }
void test1 ( ) throws Throwable { Engine engine0 = new Engine ( ( String ) null , ( - 4 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void JobProcessorResponse ( GridJobStatus status , Job job ) ; }
void test2 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { Engine engine0 = new Engine ( "EngineHandler : " , ( - 997 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void JobProcessorResponse ( GridJobStatus status , Job job ) ; }
void test0 ( ) throws Throwable { Performance performance0 = new Performance ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" long ram ( ) { / / Report memory usage statistics . Runtime runtime = Runtime . getRuntime ( ) ; return runtime . freeMemory ( ) / 1024 ; }
void test1 ( ) throws Throwable { long long0 = Performance . cpu ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" long cpu ( ) { Runtime runtime = Runtime . getRuntime ( ) ; long freemem = runtime . freeMemory ( ) ; long totalmem = runtime . totalMemory ( ) ; return totalmem - freemem ; }
void test2 ( ) throws Throwable { long long0 = Performance . ram ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" long ram ( ) { / / Report memory usage statistics . Runtime runtime = Runtime . getRuntime ( ) ; return runtime . freeMemory ( ) / 1024 ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = _Complete . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; Job job0 = new Job ( ) ; _Complete0 . setJob ( job0 ) ; _Complete _Complete1 = new _Complete ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test2 ( ) throws Throwable { Class < ? > class0 = ArrayOfDependency . class ; QName qName0 = new QName ( "@ * f ) S3 & J [ Mvmj~" , "@ * f ) S3 & J [ Mvmj~" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _Complete . getSerializer ( "@ * f ) S3 & J [ Mvmj~" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { Class < ? > class0 = ArrayOfDependency . class ; QName qName0 = new QName ( "@ * f ) S3 & J [ Mvmj~" , "@ * f ) S3 & J [ Mvmj~" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _Complete . getDeserializer ( "@ * f ) S3 & J [ Mvmj~" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; _Complete _Complete1 = new _Complete ( ) ; boolean boolean0 = _Complete0 . equals ( ( Object ) _Complete1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; QName qName0 = new QName ( "@ * f ) S3 & J [ Mvmj~" , "@ * f ) S3 & J [ Mvmj~" ) ; boolean boolean0 = _Complete0 . equals ( ( Object ) qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; Job job0 = new Job ( ) ; _Complete0 . setJob ( job0 ) ; _Complete _Complete1 = new _Complete ( ) ; boolean boolean0 = _Complete0 . equals ( ( Object ) _Complete1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; _Complete _Complete1 = new _Complete ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; int int0 = _Complete0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test9 ( ) throws Throwable { _Complete _Complete0 = new _Complete ( ) ; Job job0 = new Job ( ) ; _Complete0 . setJob ( job0 ) ; int int0 = _Complete0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( "l_V\" * ~%t^Lmlo" , "l_V\" * ~%t^Lmlo" , "l_V\" * ~%t^Lmlo" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) Engine . getSerializer ( "l_V\" * ~%t^Lmlo" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setCPU ( ( float ) 1 ) ; Engine engine1 = new Engine ( ) ; boolean boolean0 = engine0 . equals ( ( Object ) engine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getCPU ( ) { return CPU ; }
void test2 ( ) throws Throwable { TypeDesc typeDesc0 = Engine . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test3 ( ) throws Throwable { Class < ? > class0 = Engine . class ; QName qName0 = new QName ( "#y4$5S6eRwt^ * Im6 , x" , "#y4$5S6eRwt^ * Im6 , x" , "#y4$5S6eRwt^ * Im6 , x" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) Engine . getDeserializer ( "#y4$5S6eRwt^ * Im6 , x" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setOS ( "#y4$5S6eRwt^ * Im6 , x" ) ; Engine engine1 = new Engine ( ) ; boolean boolean0 = engine0 . equals ( ( Object ) engine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getRAM ( ) { return RAM ; }
void test5 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; boolean boolean0 = engine0 . equals ( ( Object ) " { l_V\" * ~%t^Lmlo } l_V\" * ~%t^Lmlo" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; Engine engine1 = new Engine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; Engine engine1 = new Engine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setName ( "l_V\" * ~%t^Lmlo" ) ; engine0 . setId ( "l_V\" * ~%t^Lmlo" ) ; Engine engine1 = new Engine ( ) ; engine1 . setId ( "l_V\" * ~%t^Lmlo" ) ; boolean boolean0 = engine0 . equals ( ( Object ) engine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; Engine engine1 = new Engine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setName ( "WB' ) hO . > " ) ; Engine engine1 = new Engine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; Engine engine1 = new Engine ( ) ; engine1 . setRAM ( 763 . 1601F ) ; boolean boolean0 = engine0 . equals ( ( Object ) engine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getRAM ( ) { return RAM ; }
void test12 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setName ( "WB' ) hO . > " ) ; Engine engine1 = new Engine ( ) ; engine1 . setName ( "WB' ) hO . > " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test13 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setOS ( "#y4$5S6eRwt^ * Im6 , x" ) ; Engine engine1 = new Engine ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test14 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setId ( "l_V\" * ~%t^Lmlo" ) ; int int0 = engine0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test15 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setName ( "l_V\" * ~%t^Lmlo" ) ; int int0 = engine0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test16 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; engine0 . setOS ( "l_V\" * ~%t^Lmlo" ) ; int int0 = engine0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = _GetEngineResponse . class ; QName qName0 = new QName ( "" , "" , "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _GetEngineResponse . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { Class < ? > class0 = _GetEngineResponse . class ; QName qName0 = new QName ( "" , "" , "" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _GetEngineResponse . getDeserializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; Engine engine0 = new Engine ( ) ; _GetEngineResponse0 . setGetEngineResult ( engine0 ) ; _GetEngineResponse _GetEngineResponse1 = new _GetEngineResponse ( ) ; boolean boolean0 = _GetEngineResponse1 . equals ( ( Object ) _GetEngineResponse0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test3 ( ) throws Throwable { TypeDesc typeDesc0 = _GetEngineResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; int int0 = _GetEngineResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test5 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; Engine engine0 = new Engine ( ) ; boolean boolean0 = _GetEngineResponse0 . equals ( ( Object ) engine0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; Engine engine0 = new Engine ( ) ; _GetEngineResponse0 . setGetEngineResult ( engine0 ) ; _GetEngineResponse _GetEngineResponse1 = new _GetEngineResponse ( ) ; boolean boolean0 = _GetEngineResponse0 . equals ( ( Object ) _GetEngineResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; _GetEngineResponse _GetEngineResponse1 = new _GetEngineResponse ( ) ; boolean boolean0 = _GetEngineResponse0 . equals ( ( Object ) _GetEngineResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; Engine engine0 = new Engine ( ) ; _GetEngineResponse0 . setGetEngineResult ( engine0 ) ; _GetEngineResponse _GetEngineResponse1 = new _GetEngineResponse ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { _GetEngineResponse _GetEngineResponse0 = new _GetEngineResponse ( ) ; Engine engine0 = new Engine ( ) ; _GetEngineResponse0 . setGetEngineResult ( engine0 ) ; int int0 = _GetEngineResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( " = : Xjd" , " = : Xjd" , " = : Xjd" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _FailResponse . getDeserializer ( " = : Xjd" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( " = : Xjd" , " = : Xjd" , " = : Xjd" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _FailResponse . getSerializer ( " = : Xjd" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { _FailResponse _FailResponse0 = new _FailResponse ( ) ; TypeDesc typeDesc0 = _FailResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test3 ( ) throws Throwable { _FailResponse _FailResponse0 = new _FailResponse ( ) ; _FailResponse _FailResponse1 = new _FailResponse ( ) ; boolean boolean0 = _FailResponse0 . equals ( ( Object ) _FailResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _FailResponse _FailResponse0 = new _FailResponse ( ) ; int int0 = _FailResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = QName . valueOf ( "jRaa ) version" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _Logon . getSerializer ( "jRaa ) version" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon0 . setClusterUrl ( "jRaa ) version" ) ; int int0 = _Logon0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test2 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = QName . valueOf ( "jRaa ) version" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _Logon . getDeserializer ( "jRaa ) version" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { TypeDesc typeDesc0 = _Logon . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon0 . setPassword ( "jRaa ) version" ) ; int int0 = _Logon0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test5 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; boolean boolean0 = _Logon0 . equals ( ( Object ) "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; _Logon1 . setUser ( "Xn7 { fGY1Vv9" ) ; _Logon0 . setUser ( "Xn7 { fGY1Vv9" ) ; _Logon1 . setClusterUrl ( "Xn7 { fGY1Vv9" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test12 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test13 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon _Logon1 = new _Logon ( ) ; _Logon1 . setPassword ( "log4 . p2 | I | perties" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test14 ( ) throws Throwable { _Logon _Logon0 = new _Logon ( ) ; _Logon0 . setUser ( "Xn7 { fGY1Vv9" ) ; int int0 = _Logon0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = _AvailableJobs . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = new QName ( "" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _AvailableJobs . getDeserializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = new QName ( "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _AvailableJobs . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _AvailableJobs _AvailableJobs0 = new _AvailableJobs ( ) ; boolean boolean0 = _AvailableJobs0 . equals ( ( Object ) "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _AvailableJobs _AvailableJobs0 = new _AvailableJobs ( ) ; _AvailableJobs _AvailableJobs1 = new _AvailableJobs ( ) ; boolean boolean0 = _AvailableJobs0 . equals ( ( Object ) _AvailableJobs1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _AvailableJobs _AvailableJobs0 = new _AvailableJobs ( ) ; int int0 = _AvailableJobs0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = _RequestResponse . class ; QName qName0 = QName . valueOf ( "e , eVL" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _RequestResponse . getSerializer ( "e , eVL" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = _RequestResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { _RequestResponse _RequestResponse0 = new _RequestResponse ( ) ; int int0 = _RequestResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test3 ( ) throws Throwable { Class < ? > class0 = _RequestResponse . class ; QName qName0 = QName . valueOf ( "e , eVL" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _RequestResponse . getDeserializer ( "e , eVL" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { _RequestResponse _RequestResponse0 = new _RequestResponse ( ) ; String string0 = "m8\\8 & R1F ) { - wa " ; boolean boolean0 = _RequestResponse0 . equals ( ( Object ) string0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _RequestResponse _RequestResponse0 = new _RequestResponse ( ) ; _RequestResponse _RequestResponse1 = new _RequestResponse ( ) ; _RequestResponse0 . setRequestResult ( true ) ; boolean boolean0 = _RequestResponse0 . equals ( ( Object ) _RequestResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isRequestResult ( ) { return requestResult ; }
void test6 ( ) throws Throwable { _RequestResponse _RequestResponse0 = new _RequestResponse ( ) ; _RequestResponse _RequestResponse1 = new _RequestResponse ( ) ; boolean boolean0 = _RequestResponse0 . equals ( ( Object ) _RequestResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test2 ( ) throws Throwable { Class < ? > class0 = ArrayOfString . class ; QName qName0 = new QName ( "Could not convert [ " , "Could not convert [ " ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) ArrayOfString . getDeserializer ( "Could not convert [ " , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; int int0 = arrayOfString0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test4 ( ) throws Throwable { TypeDesc typeDesc0 = ArrayOfString . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test5 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = QName . valueOf ( "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) ArrayOfString . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test6 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; Object object0 = new Object ( ) ; boolean boolean0 = arrayOfString0 . equals ( object0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; String [ ] stringArray0 = new String [ 9 ] ; arrayOfString0 . setString ( stringArray0 ) ; ArrayOfString arrayOfString1 = new ArrayOfString ( ) ; boolean boolean0 = arrayOfString0 . equals ( ( Object ) arrayOfString1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; ArrayOfString arrayOfString1 = new ArrayOfString ( ) ; boolean boolean0 = arrayOfString1 . equals ( ( Object ) arrayOfString0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; String [ ] stringArray0 = new String [ 9 ] ; arrayOfString0 . setString ( stringArray0 ) ; ArrayOfString arrayOfString1 = new ArrayOfString ( ) ; boolean boolean0 = arrayOfString1 . equals ( ( Object ) arrayOfString0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; String [ ] stringArray0 = new String [ 9 ] ; arrayOfString0 . setString ( stringArray0 ) ; ArrayOfString arrayOfString1 = new ArrayOfString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; String [ ] stringArray0 = new String [ 13 ] ; stringArray0 [ 1 ] = "" ; arrayOfString0 . setString ( stringArray0 ) ; int int0 = arrayOfString0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( "" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _ProgressResponse . getDeserializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = _ProgressResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _ProgressResponse . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _ProgressResponse _ProgressResponse0 = new _ProgressResponse ( ) ; boolean boolean0 = _ProgressResponse0 . equals ( ( Object ) "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _ProgressResponse _ProgressResponse0 = new _ProgressResponse ( ) ; _ProgressResponse _ProgressResponse1 = new _ProgressResponse ( ) ; boolean boolean0 = _ProgressResponse1 . equals ( ( Object ) _ProgressResponse0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _ProgressResponse _ProgressResponse0 = new _ProgressResponse ( ) ; int int0 = _ProgressResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = ArrayOfContextElement . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; ArrayOfContextElement arrayOfContextElement1 = new ArrayOfContextElement ( ) ; boolean boolean0 = arrayOfContextElement0 . equals ( ( Object ) arrayOfContextElement1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test2 ( ) throws Throwable { Class < ? > class0 = ArrayOfContextElement . class ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) ArrayOfContextElement . getDeserializer ( "f" , ( Class ) class0 , ( QName ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; ContextElement [ ] contextElementArray0 = new ContextElement [ 2 ] ; arrayOfContextElement0 . setContextElement ( contextElementArray0 ) ; ArrayOfContextElement arrayOfContextElement1 = new ArrayOfContextElement ( ) ; boolean boolean0 = arrayOfContextElement0 . equals ( ( Object ) arrayOfContextElement1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { Class < ? > class0 = ArrayOfContextElement . class ; BeanSerializer beanSerializer0 = ( BeanSerializer ) ArrayOfContextElement . getSerializer ( "f" , ( Class ) class0 , ( QName ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test7 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; Object object0 = new Object ( ) ; boolean boolean0 = arrayOfContextElement0 . equals ( object0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; ContextElement [ ] contextElementArray0 = new ContextElement [ 1 ] ; arrayOfContextElement0 . setContextElement ( contextElementArray0 ) ; ArrayOfContextElement arrayOfContextElement1 = new ArrayOfContextElement ( ) ; boolean boolean0 = arrayOfContextElement1 . equals ( ( Object ) arrayOfContextElement0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; ContextElement [ ] contextElementArray0 = new ContextElement [ 2 ] ; arrayOfContextElement0 . setContextElement ( contextElementArray0 ) ; ArrayOfContextElement arrayOfContextElement1 = new ArrayOfContextElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; int int0 = arrayOfContextElement0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test11 ( ) throws Throwable { ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; ContextElement [ ] contextElementArray0 = new ContextElement [ 2 ] ; ContextElement contextElement0 = new ContextElement ( ) ; arrayOfContextElement0 . setContextElement ( contextElementArray0 ) ; contextElementArray0 [ 0 ] = contextElement0 ; int int0 = arrayOfContextElement0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; int int0 = _AvailableJobsResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test1 ( ) throws Throwable { Class < ? > class0 = ContextElement . class ; QName qName0 = new QName ( "d { QsPnuf4L ) | sn5" , "d { QsPnuf4L ) | sn5" , "d { QsPnuf4L ) | sn5" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _AvailableJobsResponse . getDeserializer ( "d { QsPnuf4L ) | sn5" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { Class < ? > class0 = ContextElement . class ; QName qName0 = new QName ( "d { QsPnuf4L ) | sn5" , "d { QsPnuf4L ) | sn5" , "d { QsPnuf4L ) | sn5" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _AvailableJobsResponse . getSerializer ( "d { QsPnuf4L ) | sn5" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { TypeDesc typeDesc0 = _AvailableJobsResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; boolean boolean0 = _AvailableJobsResponse0 . equals ( ( Object ) "d { QsPnuf4L ) | sn5" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse ( ) ; boolean boolean0 = _AvailableJobsResponse0 . equals ( ( Object ) _AvailableJobsResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; _AvailableJobsResponse0 . setAvailableJobsResult ( arrayOfJob0 ) ; _AvailableJobsResponse _AvailableJobsResponse1 = new _AvailableJobsResponse ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { _AvailableJobsResponse _AvailableJobsResponse0 = new _AvailableJobsResponse ( ) ; ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; _AvailableJobsResponse0 . setAvailableJobsResult ( arrayOfJob0 ) ; int int0 = _AvailableJobsResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = _Progress . class ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _Progress . getDeserializer ( "$$e = $ ? o# - 2 { } XSr" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = _Progress . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Class < ? > class0 = _Progress . class ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _Progress . getSerializer ( "$$e = $ ? o# - 2 { } XSr" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; Job job0 = new Job ( ) ; _Progress0 . setJob ( job0 ) ; _Progress _Progress1 = new _Progress ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; _Progress _Progress1 = new _Progress ( ) ; boolean boolean0 = _Progress0 . equals ( ( Object ) _Progress1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; boolean boolean0 = _Progress0 . equals ( ( Object ) qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; Job job0 = new Job ( ) ; _Progress0 . setJob ( job0 ) ; _Progress _Progress1 = new _Progress ( ) ; boolean boolean0 = _Progress0 . equals ( ( Object ) _Progress1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; _Progress _Progress1 = new _Progress ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; int int0 = _Progress0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test9 ( ) throws Throwable { _Progress _Progress0 = new _Progress ( ) ; Job job0 = new Job ( ) ; _Progress0 . setJob ( job0 ) ; int int0 = _Progress0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; MyGridServiceSoapStub myGridServiceSoapStub0 = ( MyGridServiceSoapStub ) myGridServiceLocator0 . getMyGridServiceSoap ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMyGridServiceSoapWSDDServiceName ( ) { return MyGridServiceSoapWSDDServiceName ; }
void test1 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; myGridServiceLocator0 . setMyGridServiceSoapWSDDServiceName ( "T < * P693Eww ! 0 > R * 8d08" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMyGridServiceSoapAddress ( ) { return MyGridServiceSoap_address ; }
void test2 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; QName qName0 = myGridServiceLocator0 . getServiceName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String toString ( ) { return _value_ ; }
void test3 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; String string0 = myGridServiceLocator0 . getMyGridServiceSoapAddress ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMyGridServiceSoapWSDDServiceName ( ) { return MyGridServiceSoapWSDDServiceName ; }
void test5 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; Class < ? > class0 = MyGridServiceSoap . class ; MyGridServiceSoapStub myGridServiceSoapStub0 = ( MyGridServiceSoapStub ) myGridServiceLocator0 . getPort ( class0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMyGridServiceSoapWSDDServiceName ( ) { return MyGridServiceSoapWSDDServiceName ; }
void test7 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { MyGridServiceLocator myGridServiceLocator0 = new MyGridServiceLocator ( ) ; Iterator < Object > iterator0 = myGridServiceLocator0 . getPorts ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMyGridServiceSoapWSDDServiceName ( ) { return MyGridServiceSoapWSDDServiceName ; }
void test0 ( ) throws Throwable { Class < ? > class0 = Dependency . class ; QName qName0 = QName . valueOf ( "mD" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) Dependency . getDeserializer ( "mD" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = Dependency . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; dependency0 . setId ( "mD" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test3 ( ) throws Throwable { Class < ? > class0 = Dependency . class ; QName qName0 = QName . valueOf ( "mD" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) Dependency . getSerializer ( "mD" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; boolean boolean0 = dependency0 . equals ( ( Object ) "J ! 7% { " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; boolean boolean0 = dependency0 . equals ( ( Object ) dependency1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; Dependency dependency1 = new Dependency ( ) ; dependency1 . setName ( "J ! 7% { " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; dependency0 . setId ( " ; " ) ; int int0 = dependency0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test12 ( ) throws Throwable { Dependency dependency0 = new Dependency ( ) ; dependency0 . setName ( "J ! 7% { " ) ; int int0 = dependency0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( " ) GKeD ! x" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _GetEngine . getDeserializer ( " ) GKeD ! x" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = _GetEngine . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( " ) GKeD ! x" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _GetEngine . getSerializer ( " ) GKeD ! x" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _GetEngine _GetEngine0 = new _GetEngine ( ) ; boolean boolean0 = _GetEngine0 . equals ( ( Object ) "_9r . q8F@ = N" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _GetEngine _GetEngine0 = new _GetEngine ( ) ; _GetEngine _GetEngine1 = new _GetEngine ( ) ; boolean boolean0 = _GetEngine0 . equals ( ( Object ) _GetEngine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _GetEngine _GetEngine0 = new _GetEngine ( ) ; int int0 = _GetEngine0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = MarshalByRefObject . class ; QName qName0 = new QName ( "$qn" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) MarshalByRefObject . getDeserializer ( "$qn" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; Engine engine1 = new Engine ( ) ; boolean boolean0 = engine0 . equals ( ( Object ) engine1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test2 ( ) throws Throwable { TypeDesc typeDesc0 = MarshalByRefObject . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test3 ( ) throws Throwable { Class < ? > class0 = MarshalByRefObject . class ; QName qName0 = new QName ( "$qn" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) MarshalByRefObject . getSerializer ( "$qn" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { Engine engine0 = new Engine ( ) ; int int0 = engine0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = _Fail . class ; QName qName0 = new QName ( "" , "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _Fail . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; _Fail _Fail1 = new _Fail ( ) ; boolean boolean0 = _Fail0 . equals ( ( Object ) _Fail1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test2 ( ) throws Throwable { Class < ? > class0 = _Fail . class ; QName qName0 = new QName ( "" , "" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _Fail . getDeserializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; Job job0 = new Job ( ) ; _Fail0 . setJob ( job0 ) ; _Fail _Fail1 = new _Fail ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { TypeDesc typeDesc0 = _Fail . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test5 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; QName qName0 = new QName ( "" , "" ) ; boolean boolean0 = _Fail0 . equals ( ( Object ) qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; Job job0 = new Job ( ) ; _Fail0 . setJob ( job0 ) ; _Fail _Fail1 = new _Fail ( ) ; boolean boolean0 = _Fail0 . equals ( ( Object ) _Fail1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; _Fail _Fail1 = new _Fail ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; int int0 = _Fail0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test9 ( ) throws Throwable { _Fail _Fail0 = new _Fail ( ) ; Job job0 = new Job ( ) ; _Fail0 . setJob ( job0 ) ; int int0 = _Fail0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test2 ( ) throws Throwable { TypeDesc typeDesc0 = ArrayOfJob . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test3 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; ArrayOfJob arrayOfJob1 = new ArrayOfJob ( ) ; boolean boolean0 = arrayOfJob0 . equals ( ( Object ) arrayOfJob1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( "WpU" , "WpU" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) ArrayOfJob . getDeserializer ( "WpU" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test5 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( "WpU" , "WpU" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) ArrayOfJob . getSerializer ( "WpU" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test6 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; boolean boolean0 = arrayOfJob0 . equals ( ( Object ) "Available" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; ArrayOfJob arrayOfJob1 = new ArrayOfJob ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; ArrayOfJob arrayOfJob1 = new ArrayOfJob ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; ArrayOfJob arrayOfJob1 = new ArrayOfJob ( ) ; Job [ ] jobArray0 = new Job [ 12 ] ; arrayOfJob1 . setJob ( jobArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; int int0 = arrayOfJob0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test11 ( ) throws Throwable { ArrayOfJob arrayOfJob0 = new ArrayOfJob ( ) ; Job [ ] jobArray0 = new Job [ 13 ] ; Job job0 = new Job ( ) ; jobArray0 [ 3 ] = job0 ; arrayOfJob0 . setJob ( jobArray0 ) ; int int0 = arrayOfJob0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Class < ? > class0 = _CompleteResponse . class ; QName qName0 = QName . valueOf ( "e < eVL" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _CompleteResponse . getSerializer ( "e < eVL" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = _CompleteResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Class < ? > class0 = _CompleteResponse . class ; QName qName0 = QName . valueOf ( "e < eVL" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _CompleteResponse . getDeserializer ( "e < eVL" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _CompleteResponse _CompleteResponse0 = new _CompleteResponse ( ) ; int int0 = _CompleteResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test4 ( ) throws Throwable { _CompleteResponse _CompleteResponse0 = new _CompleteResponse ( ) ; String string0 = "m8\\8 & R1F ) { - wa " ; boolean boolean0 = _CompleteResponse0 . equals ( ( Object ) string0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _CompleteResponse _CompleteResponse0 = new _CompleteResponse ( ) ; _CompleteResponse _CompleteResponse1 = new _CompleteResponse ( ) ; _CompleteResponse0 . setCompleteResult ( true ) ; boolean boolean0 = _CompleteResponse0 . equals ( ( Object ) _CompleteResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isCompleteResult ( ) { return completeResult ; }
void test6 ( ) throws Throwable { _CompleteResponse _CompleteResponse0 = new _CompleteResponse ( ) ; _CompleteResponse _CompleteResponse1 = new _CompleteResponse ( ) ; boolean boolean0 = _CompleteResponse0 . equals ( ( Object ) _CompleteResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = _Request . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { Class < ? > class0 = _Request . class ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _Request . getSerializer ( "$$e = $ ? o# - 2 { } XSr" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; Job job0 = new Job ( ) ; _Request0 . setJob ( job0 ) ; _Request _Request1 = new _Request ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test3 ( ) throws Throwable { Class < ? > class0 = _Request . class ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _Request . getDeserializer ( "$$e = $ ? o# - 2 { } XSr" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; _Request _Request1 = new _Request ( ) ; boolean boolean0 = _Request0 . equals ( ( Object ) _Request1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; QName qName0 = new QName ( "$$e = $ ? o# - 2 { } XSr" , "$$e = $ ? o# - 2 { } XSr" ) ; boolean boolean0 = _Request0 . equals ( ( Object ) qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; Job job0 = new Job ( ) ; _Request0 . setJob ( job0 ) ; _Request _Request1 = new _Request ( ) ; boolean boolean0 = _Request0 . equals ( ( Object ) _Request1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; _Request _Request1 = new _Request ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; int int0 = _Request0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test9 ( ) throws Throwable { _Request _Request0 = new _Request ( ) ; Job job0 = new Job ( ) ; _Request0 . setJob ( job0 ) ; int int0 = _Request0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = _LogonResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { _LogonResponse _LogonResponse0 = new _LogonResponse ( ) ; int int0 = _LogonResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = QName . valueOf ( "org . apache . axis . AxisFault" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _LogonResponse . getSerializer ( "org . apache . axis . AxisFault" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = QName . valueOf ( "org . apache . axis . AxisFault" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _LogonResponse . getDeserializer ( "org . apache . axis . AxisFault" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test4 ( ) throws Throwable { _LogonResponse _LogonResponse0 = new _LogonResponse ( ) ; String string0 = "m8\\8 & R1F ) { 9 - wa " ; boolean boolean0 = _LogonResponse0 . equals ( ( Object ) string0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _LogonResponse _LogonResponse0 = new _LogonResponse ( ) ; _LogonResponse _LogonResponse1 = new _LogonResponse ( ) ; _LogonResponse0 . setLogonResult ( true ) ; boolean boolean0 = _LogonResponse0 . equals ( ( Object ) _LogonResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isLogonResult ( ) { return logonResult ; }
void test6 ( ) throws Throwable { _LogonResponse _LogonResponse0 = new _LogonResponse ( ) ; _LogonResponse _LogonResponse1 = new _LogonResponse ( ) ; boolean boolean0 = _LogonResponse0 . equals ( ( Object ) _LogonResponse1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test1 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( "cMO4Rvo . " ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) ArrayOfDependency . getDeserializer ( "cMO4Rvo . " , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { TypeDesc typeDesc0 = ArrayOfDependency . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; ArrayOfDependency arrayOfDependency1 = new ArrayOfDependency ( ) ; boolean boolean0 = arrayOfDependency0 . equals ( ( Object ) arrayOfDependency1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { Class < ? > class0 = QName . class ; QName qName0 = new QName ( "cMO4Rvo . " ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) ArrayOfDependency . getSerializer ( "cMO4Rvo . " , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test6 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; boolean boolean0 = arrayOfDependency0 . equals ( ( Object ) "cMO4Rvo . " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; ArrayOfDependency arrayOfDependency1 = new ArrayOfDependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; Dependency [ ] dependencyArray0 = new Dependency [ 1 ] ; arrayOfDependency0 . setDependency ( dependencyArray0 ) ; ArrayOfDependency arrayOfDependency1 = new ArrayOfDependency ( ) ; boolean boolean0 = arrayOfDependency0 . equals ( ( Object ) arrayOfDependency1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; Dependency [ ] dependencyArray0 = new Dependency [ 1 ] ; arrayOfDependency0 . setDependency ( dependencyArray0 ) ; ArrayOfDependency arrayOfDependency1 = new ArrayOfDependency ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; int int0 = arrayOfDependency0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test11 ( ) throws Throwable { ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; Dependency dependency0 = new Dependency ( ) ; Dependency [ ] dependencyArray0 = new Dependency [ 7 ] ; dependencyArray0 [ 5 ] = dependency0 ; arrayOfDependency0 . setDependency ( dependencyArray0 ) ; int int0 = arrayOfDependency0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setContent ( " | tM { 3 + Q [ AN" ) ; int int0 = contextElement0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test1 ( ) throws Throwable { Class < ? > class0 = ContextElement . class ; QName qName0 = QName . valueOf ( "cv" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) ContextElement . getDeserializer ( "cv" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { Class < ? > class0 = ContextElement . class ; QName qName0 = QName . valueOf ( "cv" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) ContextElement . getSerializer ( "cv" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; int int0 = contextElement0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test4 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setName ( "cv" ) ; int int0 = contextElement0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test5 ( ) throws Throwable { TypeDesc typeDesc0 = ContextElement . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test6 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; boolean boolean0 = contextElement0 . equals ( ( Object ) " | tM { 3 + Q [ AN" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; ContextElement contextElement1 = new ContextElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setName ( "QQ%LNy ( , | J ; [ y ! ] " ) ; ContextElement contextElement1 = new ContextElement ( ) ; boolean boolean0 = contextElement0 . equals ( ( Object ) contextElement1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; ContextElement contextElement1 = new ContextElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setName ( "QQ%LNy ( , | J ; [ y ! ] " ) ; ContextElement contextElement1 = new ContextElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setName ( "QQ%LNy ( , | J ; [ y ! ] " ) ; ContextElement contextElement1 = new ContextElement ( ) ; contextElement1 . setName ( "QQ%LNy ( , | J ; [ y ! ] " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test12 ( ) throws Throwable { ContextElement contextElement0 = new ContextElement ( ) ; contextElement0 . setContent ( "A ? 82e@ - 0hi ) u ] " ) ; ContextElement contextElement1 = new ContextElement ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test0 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Processor processor0 = new Processor ( ) ; discriminator0 . setProcessor ( processor0 ) ; Discriminator discriminator1 = new Discriminator ( ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) discriminator1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test1 ( ) throws Throwable { Class < ? > class0 = Discriminator . class ; QName qName0 = new QName ( "org . apache . commons . logging . impl . Jdk14Logger" , "org . apache . commons . logging . impl . Jdk14Logger" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) Discriminator . getDeserializer ( "org . apache . commons . logging . impl . Jdk14Logger" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; discriminator0 . setRAM ( ( - 0 . 32827437F ) ) ; Discriminator discriminator1 = new Discriminator ( ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) discriminator1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getRAM ( ) { return RAM ; }
void test3 ( ) throws Throwable { TypeDesc typeDesc0 = Discriminator . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; discriminator0 . setOS ( "0eb , 2kt . avpx97NA" ) ; Discriminator discriminator1 = new Discriminator ( ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) discriminator1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getRAM ( ) { return RAM ; }
void test5 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; discriminator0 . setAllowedEngines ( arrayOfString0 ) ; Discriminator discriminator1 = new Discriminator ( ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) discriminator1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { Class < ? > class0 = Discriminator . class ; BeanSerializer beanSerializer0 = ( BeanSerializer ) Discriminator . getSerializer ( "org . apache . commons . logging . impl . Jdk14Logger" , ( Class ) class0 , ( QName ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test7 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) "FNjsMD - A'c : \"WKE ? 3s" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Discriminator discriminator1 = new Discriminator ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; discriminator0 . setAllowedEngines ( arrayOfString0 ) ; Discriminator discriminator1 = new Discriminator ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Discriminator discriminator1 = new Discriminator ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Processor processor0 = new Processor ( ) ; discriminator0 . setProcessor ( processor0 ) ; Discriminator discriminator1 = new Discriminator ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test12 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Discriminator discriminator1 = new Discriminator ( ) ; discriminator1 . setCPU ( 1578 . 1373F ) ; boolean boolean0 = discriminator0 . equals ( ( Object ) discriminator1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getCPU ( ) { return CPU ; }
void test13 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; discriminator0 . setOS ( "FNjsMD - A'c : \"WKE ? 3s" ) ; Discriminator discriminator1 = new Discriminator ( ) ; boolean boolean0 = discriminator1 . equals ( ( Object ) discriminator0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getCPU ( ) { return CPU ; }
void test14 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; discriminator0 . setOS ( "0eb , 2kt . avpx97NA" ) ; Discriminator discriminator1 = new Discriminator ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test15 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; ArrayOfString arrayOfString0 = new ArrayOfString ( ) ; discriminator0 . setAllowedEngines ( arrayOfString0 ) ; int int0 = discriminator0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test16 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; Processor processor0 = new Processor ( ) ; discriminator0 . setProcessor ( processor0 ) ; int int0 = discriminator0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test17 ( ) throws Throwable { Discriminator discriminator0 = new Discriminator ( ) ; discriminator0 . setOS ( "FNjsMD - A'c : \"WKE ? 3s" ) ; int int0 = discriminator0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = _SetEngineInfoResponse . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( "jYyaEWS%O , dxpDJ < %" , "jYyaEWS%O , dxpDJ < %" , "jYyaEWS%O , dxpDJ < %" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _SetEngineInfoResponse . getDeserializer ( "jYyaEWS%O , dxpDJ < %" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Class . class ; QName qName0 = new QName ( "jYyaEWS%O , dxpDJ < %" , "jYyaEWS%O , dxpDJ < %" , "jYyaEWS%O , dxpDJ < %" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _SetEngineInfoResponse . getSerializer ( "jYyaEWS%O , dxpDJ < %" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { _SetEngineInfoResponse _SetEngineInfoResponse0 = new _SetEngineInfoResponse ( ) ; boolean boolean0 = _SetEngineInfoResponse0 . equals ( ( Object ) "jYyaEWS%O , dxpDJ < %" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { _SetEngineInfoResponse _SetEngineInfoResponse0 = new _SetEngineInfoResponse ( ) ; _SetEngineInfoResponse _SetEngineInfoResponse1 = new _SetEngineInfoResponse ( ) ; boolean boolean0 = _SetEngineInfoResponse1 . equals ( ( Object ) _SetEngineInfoResponse0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { _SetEngineInfoResponse _SetEngineInfoResponse0 = new _SetEngineInfoResponse ( ) ; int int0 = _SetEngineInfoResponse0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setId ( " : 3g8I@ + S ( %d@c9eChX" ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test1 ( ) throws Throwable { TypeDesc typeDesc0 = Job . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Job . class ; QName qName0 = QName . valueOf ( "" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) Job . getSerializer ( "" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { Job job0 = new Job ( ) ; Discriminator discriminator0 = new Discriminator ( ) ; job0 . setDiscriminators ( discriminator0 ) ; Job job1 = new Job ( ) ; boolean boolean0 = job0 . equals ( ( Object ) job1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { Job job0 = new Job ( ) ; GridJobStatus gridJobStatus0 = GridJobStatus . Acquired ; job0 . setStatus ( gridJobStatus0 ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test5 ( ) throws Throwable { Class < ? > class0 = Job . class ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) Job . getDeserializer ( "g > da > Y'iEVmR2 , 9jsNa" , ( Class ) class0 , ( QName ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test6 ( ) throws Throwable { Job job0 = new Job ( ) ; ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; job0 . setDependencies ( arrayOfDependency0 ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test7 ( ) throws Throwable { Job job0 = new Job ( ) ; ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; job0 . setContext ( arrayOfContextElement0 ) ; Job job1 = new Job ( ) ; boolean boolean0 = job0 . equals ( ( Object ) job1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setName ( " [ mtgjxgM" ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test9 ( ) throws Throwable { Job job0 = new Job ( ) ; boolean boolean0 = job0 . equals ( ( Object ) "Complete" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test12 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setName ( "nullFie > d } Desc" ) ; Job job1 = new Job ( ) ; boolean boolean0 = job0 . equals ( ( Object ) job1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test13 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test14 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setName ( "nullFieldDesc" ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test15 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test16 ( ) throws Throwable { Job job0 = new Job ( ) ; Discriminator discriminator0 = new Discriminator ( ) ; job0 . setDiscriminators ( discriminator0 ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test17 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test18 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test19 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; ArrayOfDependency arrayOfDependency0 = new ArrayOfDependency ( ) ; job1 . setDependencies ( arrayOfDependency0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test20 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test21 ( ) throws Throwable { Job job0 = new Job ( ) ; ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; job0 . setContext ( arrayOfContextElement0 ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test22 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; job1 . setProgress ( 677 ) ; boolean boolean0 = job0 . equals ( ( Object ) job1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getProgress ( ) { return progress ; }
void test23 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; job0 . setBroadcasted ( true ) ; boolean boolean0 = job0 . equals ( ( Object ) job1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isBroadcasted ( ) { return broadcasted ; }
void test24 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test25 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test26 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setCurrentEngineId ( "" ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test27 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test28 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test29 ( ) throws Throwable { Job job0 = new Job ( ) ; Job job1 = new Job ( ) ; GridJobStatus gridJobStatus0 = GridJobStatus . Progress ; job0 . setStatus ( gridJobStatus0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test30 ( ) throws Throwable { Job job0 = new Job ( ) ; Discriminator discriminator0 = new Discriminator ( ) ; job0 . setDiscriminators ( discriminator0 ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test31 ( ) throws Throwable { Job job0 = new Job ( ) ; ArrayOfContextElement arrayOfContextElement0 = new ArrayOfContextElement ( ) ; job0 . setContext ( arrayOfContextElement0 ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test32 ( ) throws Throwable { Job job0 = new Job ( ) ; job0 . setCurrentEngineId ( " [ mtgjxgM" ) ; int int0 = job0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { TypeDesc typeDesc0 = Processor . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test1 ( ) throws Throwable { Class < ? > class0 = Processor . class ; QName qName0 = new QName ( "\"~" , "\"~" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) Processor . getSerializer ( "\"~" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test2 ( ) throws Throwable { QName qName0 = QName . valueOf ( "org . apache . commons . logging . impl . " ) ; Class < ? > class0 = Class . class ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) Processor . getDeserializer ( "org . apache . commons . logging . impl . " , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; boolean boolean0 = processor0 . equals ( ( Object ) "\"@~" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test4 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; Processor processor1 = new Processor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test5 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; Processor processor1 = new Processor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; Processor processor1 = new Processor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; processor0 . setType ( "\"@~" ) ; Processor processor1 = new Processor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; processor0 . setAssembly ( "H" ) ; Processor processor1 = new Processor ( ) ; boolean boolean0 = processor0 . equals ( ( Object ) processor1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; processor0 . setAssembly ( "\"~" ) ; Processor processor1 = new Processor ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test10 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; processor0 . setType ( "Method returns : " ) ; int int0 = processor0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test11 ( ) throws Throwable { Processor processor0 = new Processor ( ) ; processor0 . setAssembly ( "Method returns : " ) ; int int0 = processor0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo0 . setCpu ( 1032 . 7614F ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; boolean boolean0 = _SetEngineInfo0 . equals ( ( Object ) _SetEngineInfo1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getCpu ( ) { return cpu ; }
void test1 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo0 . setName ( "@B . . 3 + [ g^" ) ; int int0 = _SetEngineInfo0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = new QName ( "9Rwx'K { 2" , "9Rwx'K { 2" ) ; BeanSerializer beanSerializer0 = ( BeanSerializer ) _SetEngineInfo . getSerializer ( "9Rwx'K { 2" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Serializer getSerializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanSerializer ( _javaType , _xmlType , typeDesc ) ; }
void test3 ( ) throws Throwable { TypeDesc typeDesc0 = _SetEngineInfo . getTypeDesc ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . description . TypeDesc getTypeDesc ( ) { return typeDesc ; }
void test4 ( ) throws Throwable { Class < ? > class0 = Object . class ; QName qName0 = new QName ( "9Rwx'K { 2" , "9Rwx'K { 2" ) ; BeanDeserializer beanDeserializer0 = ( BeanDeserializer ) _SetEngineInfo . getDeserializer ( "9Rwx'K { 2" , ( Class ) class0 , qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" org . apache . axis . encoding . Deserializer getDeserializer ( java . lang . String mechType , java . lang . Class _javaType , javax . xml . namespace . QName _xmlType ) { return new org . apache . axis . encoding . ser . BeanDeserializer ( _javaType , _xmlType , typeDesc ) ; }
void test5 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; boolean boolean0 = _SetEngineInfo0 . equals ( ( Object ) "@Fo3dz ? ; B" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test6 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test7 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test8 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; _SetEngineInfo1 . setName ( "@Fo3dz ? ; B" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test9 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; _SetEngineInfo0 . setRam ( 168 . 0587F ) ; boolean boolean0 = _SetEngineInfo0 . equals ( ( Object ) _SetEngineInfo1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" float getRam ( ) { return ram ; }
void test10 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test11 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test12 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo _SetEngineInfo1 = new _SetEngineInfo ( ) ; _SetEngineInfo1 . setOs ( "9Rwx'K { 2" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( java . lang . Object obj ) { if ( ! ( obj instanceof ArrayOfJob ) ) return false ; ArrayOfJob other = ( ArrayOfJob ) obj ; if ( obj = = null ) return false ; if ( this = = obj ) return true ; if ( __equalsCalc ! = null ) { return ( __equalsCalc = = obj ) ; } __equalsCalc = obj ; boolean _equals ; _equals = true & & ( ( this . job = = null & & other . getJob ( ) = = null ) | | ( this . job ! = null & & java . util . Arrays . equals ( this . job , other . getJob ( ) ) ) ) ; __equalsCalc = null ; return _equals ; }
void test13 ( ) throws Throwable { _SetEngineInfo _SetEngineInfo0 = new _SetEngineInfo ( ) ; _SetEngineInfo0 . setOs ( "9Rwx'K { 2" ) ; int int0 = _SetEngineInfo0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test0 ( ) throws Throwable { GridJobStatus gridJobStatus0 = new GridJobStatus ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { if ( __hashCodeCalc ) { return 0 ; } __hashCodeCalc = true ; int _hashCode = 1 ; if ( getJob ( ) ! = null ) { for ( int i = 0 ; i < java . lang . reflect . Array . getLength ( getJob ( ) ) ; i + + ) { java . lang . Object obj = java . lang . reflect . Array . get ( getJob ( ) , i ) ; if ( obj ! = null & & ! obj . getClass ( ) . isArray ( ) ) { _hashCode + = obj . hashCode ( ) ; } } } __hashCodeCalc = false ; return _hashCode ; }
void test1 ( ) throws Throwable { GridJobStatus gridJobStatus0 = GridJobStatus . Acquired ; String string0 = gridJobStatus0 . getValue ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getValue ( ) { return _value_ ; }
void test3 ( ) throws Throwable { GridJobStatus gridJobStatus0 = GridJobStatus . Acquired ; GridJobStatus gridJobStatus1 = ( GridJobStatus ) gridJobStatus0 . readResolve ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getValue ( ) { return _value_ ; }
void test5 ( ) throws Throwable { GridJobStatus gridJobStatus0 = GridJobStatus . fromValue ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String toString ( ) { return _value_ ; }
void test6 ( ) throws Throwable { GridJobStatus gridJobStatus0 = new GridJobStatus ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getValue ( ) { return _value_ ; }
