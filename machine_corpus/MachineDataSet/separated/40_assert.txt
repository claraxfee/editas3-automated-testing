assertNotNull ( preferredGapSettings0 )
assertNotNull ( preferredGapSettings0 )
assertEquals ( 13 , verticalBlock0 . x2 )
assertEquals ( 2 , verticalBlock0 . x2 )
assertNotNull ( list0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 6 , list0 . size ( ) )
assertEquals ( false , list0 . isEmpty ( ) )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( "Block ( 0 , 0 , 3 , 1 ) : \n #######\n # \" , # #\n #######" , verticalBlock0 . toString ( ) )
assertNotNull ( list0 )
assertNotNull ( list0 )
assertNotNull ( list0 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertNull ( vWordPosition0 )
assertNull ( hWordPosition1 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertEquals ( 2 , scheme0 . x2 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertEquals ( false , hWordPosition0 . isTrivial ( ) )
assertNotNull ( scheme0 )
assertNull ( vWordPosition0 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertNotNull ( scheme0 )
assertEquals ( "B" , horizontalBlock0 . getUpperLine ( ) )
assertNotNull ( list0 )
assertNotNull ( list0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 5 , horizontalBlock0 . y1 )
assertEquals ( 1 , list0 . size ( ) )
assertEquals ( " [ horizontal ( 0 , 0 ; 1 ) ] " , hashSet0 . toString ( ) )
assertEquals ( false , hashSet0 . isEmpty ( ) )
assertNotNull ( list0 )
assertEquals ( 0 , list0 . size ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertNotNull ( vWordPosition0 )
assertEquals ( false , boolean0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
assertNotNull ( hWordPosition0 )
