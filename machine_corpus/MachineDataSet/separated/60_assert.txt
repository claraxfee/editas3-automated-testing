assertNotNull ( fSPathFactory0 )
assertSame ( fSPathResultListImpl1 , fSPathResultListImpl0 )
assertEquals ( true , fSPathResultListImpl0 . isListOfFiles ( ) )
assertEquals ( true , fSPathResultListImpl0 . isListOfFiles ( ) )
assertSame ( fSPathResultModificationListImpl1 , fSPathResultModificationListImpl0 )
assertEquals ( false , boolean0 )
assertEquals ( 1 , fSPathResultModificationListImpl0 . size ( ) )
assertEquals ( " [ ] " , fSPathResultListImpl0 . toString ( ) )
assertEquals ( " [ true ] " , fSPathResultModificationListImpl0 . toString ( ) )
assertEquals ( 2 , fSPathResultModificationListImpl0 . size ( ) )
assertEquals ( true , fSPathResultModificationListImpl0 . hasFailures ( ) )
assertEquals ( 1372802071400L , date0 . getTime ( ) )
assertEquals ( " ! 8" , string0 )
assertEquals ( 1372802071491L , date0 . getTime ( ) )
assertEquals ( "false" , string0 )
assertEquals ( 1372802071526L , date0 . getTime ( ) )
assertNull ( string0 )
assertNull ( date0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "1518 . 710032287509" , string0 )
assertEquals ( "Thu Jan 01 00 : 59 : 59 GMT 1970" , string0 )
assertNotNull ( string0 )
assertNull ( file0 )
assertEquals ( " [ ] " , fSPathResultListImpl0 . toString ( ) )
assertEquals ( "changes the root directory to the directory specified" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( "\u0000\uFFFD\uFFFD" , prompt0 . getPromptText ( ) )
assertNull ( string0 )
assertNull ( prompt0 . getPromptText ( ) )
assertEquals ( - 1 , byteArrayInputStream0 . read ( ) )
assertNotNull ( pattern0 )
assertNull ( regexFunction0 )
assertNotNull ( regexFunction0 )
assertNull ( regexFunction0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( false , linkedList0 . isEmpty ( ) )
assertNotNull ( string0 )
assertNull ( document0 )
assertEquals ( "IncludeHolder { document = null } " , includeHolder0 . toString ( ) )
assertNull ( string0 )
assertNull ( localAttributeReference0 . getAttributeName ( ) )
assertEquals ( 1 , sCLLexer0 . getCharIndex ( ) )
assertEquals ( 2 , sCLLexer0 . getCharPositionInLine ( ) )
assertEquals ( "net / sf / sugar / scl / SCL . g" , string0 )
assertEquals ( 1 , aNTLRStringStream0 . getCharPositionInLine ( ) )
assertEquals ( 1 , aNTLRStringStream0 . index ( ) )
assertEquals ( 1 , sCLLexer0 . getCharPositionInLine ( ) )
assertEquals ( 1 , sCLLexer0 . getCharIndex ( ) )
assertEquals ( 1 , aNTLRStringStream0 . getCharPositionInLine ( ) )
assertEquals ( 1 , aNTLRStringStream0 . getCharPositionInLine ( ) )
assertNull ( string0 )
assertEquals ( "" , includeValue0 . getXPathQuery ( ) )
assertNull ( string0 )
assertEquals ( false , includeValue0 . isFullyResolved ( ) )
assertNotNull ( pathConversionUtils0 )
assertEquals ( " / scl / 0IA6 / " , string0 )
assertEquals ( "\\UbY ! ] LOe < 64" , iIOMetadataNode1 . getNodeName ( ) )
assertEquals ( "AIy" , uRI0 . getRawFragment ( ) )
assertEquals ( "AIy" , iIOMetadataNode0 . getNodeName ( ) )
assertEquals ( true , uRI0 . isAbsolute ( ) )
assertEquals ( "" , iIOMetadataNode0 . getNodeName ( ) )
assertNull ( string0 )
assertEquals ( "Include { fullyResolved = false , parentURI = null , includeURI = null , parentElement = null , includeHolder = null } " , includePartial0 . toString ( ) )
assertNull ( includeHolder0 )
assertEquals ( "" , iIOMetadataNode0 . getLocalName ( ) )
assertNull ( uRI0 )
assertNull ( uRI0 )
assertEquals ( false , boolean0 )
assertNotNull ( string0 )
assertEquals ( "Include { fullyResolved = false , parentURI = null , includeURI = null , parentElement = null , includeHolder = null } " , include0 . toString ( ) )
assertEquals ( false , include0 . isFullyResolved ( ) )
assertNull ( element0 )
assertEquals ( true , include0 . isFullyResolved ( ) )
assertEquals ( false , include0 . isFullyResolved ( ) )
assertEquals ( true , localReference0 . isResolved ( ) )
assertEquals ( false , localReference0 . isResolved ( ) )
assertEquals ( "" , localReference0 . getXPathQuery ( ) )
assertNull ( string0 )
assertNull ( element0 )
assertEquals ( false , boolean0 )
assertEquals ( 6 , recognizerSharedState0 . lastErrorIndex )
assertEquals ( 0 , sCLParser0 . getRuleMemoizationCacheSize ( ) )
assertNull ( iIOMetadataNode0 . getNodeName ( ) )
assertEquals ( 6 , commonTokenStream0 . mark ( ) )
assertEquals ( 0 , tokenRewriteStream0 . range ( ) )
assertEquals ( 5 , unbufferedTokenStream0 . range ( ) )
assertEquals ( 1 , recognizerSharedState0 . syntaxErrors )
assertEquals ( 6 , commonTokenStream0 . index ( ) )
assertEquals ( "net / sf / sugar / scl / SCL . g" , sCLParser0 . getGrammarFileName ( ) )
assertNotNull ( sCLParser0 )
assertNull ( defaultLocalReferenceProcessor0 )
assertEquals ( false , sCLParser0 . failed ( ) )
assertEquals ( 0 , recognizerSharedState0 . _fsp )
assertEquals ( 1 , iIOMetadataNode1 . getNodeType ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( uRI0 )
assertEquals ( 0 , tokenRewriteStream0 . range ( ) )
assertEquals ( 0 , sCLParser0 . getNumberOfSyntaxErrors ( ) )
assertNull ( includeProcessor0 )
