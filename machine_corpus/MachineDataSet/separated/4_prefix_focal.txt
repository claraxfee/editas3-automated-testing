void test0 ( ) throws Throwable { Class < ? > class0 = Class . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , " * In" , " * In" ) ; webServiceDescriptor0 . setTypesNamespace ( " * In" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTargetNamespace ( ) { return targetNamespace ; }
void test1 ( ) throws Throwable { Class < ? > class0 = Object . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , "" , "" ) ; webServiceDescriptor0 . setServiceClazz ( class0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypesNamespace ( ) { return typesNamespace ; }
void test2 ( ) throws Throwable { Class < ? > class0 = Class . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , " * In" , " * In" ) ; String string0 = webServiceDescriptor0 . getTargetNamespace ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTargetNamespace ( ) { return targetNamespace ; }
void test3 ( ) throws Throwable { WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) null , "" , "" ) ; Class < Object > class0 = webServiceDescriptor0 . getServiceClazz ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Class getServiceClazz ( ) { return serviceClazz ; }
void test4 ( ) throws Throwable { Class < ? > class0 = Object . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , "" , "" ) ; String string0 = webServiceDescriptor0 . getTypesNamespace ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypesNamespace ( ) { return typesNamespace ; }
void test5 ( ) throws Throwable { Class < ? > class0 = Class . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , " * In" , " * In" ) ; webServiceDescriptor0 . setTargetNamespace ( " * In" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTargetNamespace ( ) { return targetNamespace ; }
void test6 ( ) throws Throwable { Class < ? > class0 = Class . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , " * In" , " * In" ) ; int int0 = webServiceDescriptor0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { int PRIME = 31 ; int result = 1 ; result = PRIME * result + ( ( serviceClazz = = null ) ? 0 : serviceClazz . hashCode ( ) ) ; return result ; }
void test7 ( ) throws Throwable { WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) null , "" , "" ) ; int int0 = webServiceDescriptor0 . hashCode ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int hashCode ( ) { int PRIME = 31 ; int result = 1 ; result = PRIME * result + ( ( serviceClazz = = null ) ? 0 : serviceClazz . hashCode ( ) ) ; return result ; }
void test8 ( ) throws Throwable { Class < ? > class0 = Object . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , "" , "" ) ; Class < ? > class1 = WebServiceDescriptor . class ; WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor ( ( Class ) class1 , "" , "" ) ; boolean boolean0 = webServiceDescriptor0 . equals ( ( Object ) webServiceDescriptor1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null ) return false ; if ( getClass ( ) ! = obj . getClass ( ) ) return false ; WebServiceDescriptor other = ( WebServiceDescriptor ) obj ; if ( serviceClazz = = null ) { if ( other . serviceClazz ! = null ) return false ; } else if ( serviceClazz ! = other . serviceClazz ) return false ; return true ; }
void test9 ( ) throws Throwable { Class < ? > class0 = WebServiceDescriptor . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , ( String ) null , ( String ) null ) ; boolean boolean0 = webServiceDescriptor0 . equals ( ( Object ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null ) return false ; if ( getClass ( ) ! = obj . getClass ( ) ) return false ; WebServiceDescriptor other = ( WebServiceDescriptor ) obj ; if ( serviceClazz = = null ) { if ( other . serviceClazz ! = null ) return false ; } else if ( serviceClazz ! = other . serviceClazz ) return false ; return true ; }
void test10 ( ) throws Throwable { Class < ? > class0 = Object . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , "" , "" ) ; Object object0 = new Object ( ) ; boolean boolean0 = webServiceDescriptor0 . equals ( object0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null ) return false ; if ( getClass ( ) ! = obj . getClass ( ) ) return false ; WebServiceDescriptor other = ( WebServiceDescriptor ) obj ; if ( serviceClazz = = null ) { if ( other . serviceClazz ! = null ) return false ; } else if ( serviceClazz ! = other . serviceClazz ) return false ; return true ; }
void test11 ( ) throws Throwable { WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) null , "" , "" ) ; WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor ( ( Class ) webServiceDescriptor0 . serviceClazz , "" , "GB ) 7 { 4 ! X55 & l03\"5 [ M5" ) ; boolean boolean0 = webServiceDescriptor0 . equals ( ( Object ) webServiceDescriptor1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypesNamespace ( ) { return typesNamespace ; }
void test12 ( ) throws Throwable { WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) null , "" , "" ) ; Class < ? > class0 = WebServiceDescriptor . class ; WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor ( ( Class ) class0 , "" , "GB ) 7 { 4 ! X55 & l03\"5 [ M5" ) ; boolean boolean0 = webServiceDescriptor0 . equals ( ( Object ) webServiceDescriptor1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getTypesNamespace ( ) { return typesNamespace ; }
void test13 ( ) throws Throwable { Class < ? > class0 = Object . class ; WebServiceDescriptor webServiceDescriptor0 = new WebServiceDescriptor ( ( Class ) class0 , "pn$HDW * ls + " , "pn$HDW * ls + " ) ; WebServiceDescriptor webServiceDescriptor1 = new WebServiceDescriptor ( ( Class ) class0 , "pn$HDW * ls + " , "pn$HDW * ls + " ) ; boolean boolean0 = webServiceDescriptor0 . equals ( ( Object ) webServiceDescriptor1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean equals ( Object obj ) { if ( this = = obj ) return true ; if ( obj = = null ) return false ; if ( getClass ( ) ! = obj . getClass ( ) ) return false ; WebServiceDescriptor other = ( WebServiceDescriptor ) obj ; if ( serviceClazz = = null ) { if ( other . serviceClazz ! = null ) return false ; } else if ( serviceClazz ! = other . serviceClazz ) return false ; return true ; }
void test0 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { WebServiceContainer webServiceContainer0 = WebServiceContainer . newInstance ( "" , 10 , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" WebServiceContainer restartContainer ( ) throws RemoteException { / / logger . debug ( "Restarting web service container" ) ; stopContainer ( ) ; try { / / configurationContext = / / ConfigurationContextFactory . createConfigurationContextFromFileSystem ( null , null ) ; / / super . configurationContext = configurationContext ; for ( int i = 0 ; i < descriptorList . size ( ) ; i + + ) { WebServiceDescriptor descriptor = descriptorList . get ( i ) ; configurationContext . getAxisConfiguration ( ) . removeService ( descriptor . getServiceClazz ( ) . getSimpleName ( ) ) ; configureService ( descriptor ) ; } startContainer ( ) ; / / logger . debug ( "Restarted web service container" ) ; } catch ( AxisFault af ) { / / logger . error ( "Error occured while restarting WebServiceContainer" , af ) ; throw new RemoteException ( "Error occured while restarting WebServiceContainer" , af ) ; } return this ; }
void test2 ( ) throws Throwable { WebServiceContainer webServiceContainer0 = WebServiceContainer . newInstance ( "" , ( - 515 ) , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" EndpointReference getEPRForService ( String serviceName , String ip ) throws AxisFault { return new EndpointReference ( "http : / / " + hostName + ' : ' + port + contextPath + ' / ' + serviceName ) ; }
void test3 ( ) throws Throwable { WebServiceContainer webServiceContainer0 = WebServiceContainer . newInstance ( "" , ( - 1222 ) , "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void configureService ( Class serviceClazz , String targetNamespace , String typesNamespace ) throws RemoteException { WebServiceDescriptor descriptor = new WebServiceDescriptor ( serviceClazz , targetNamespace , typesNamespace ) ; configureService ( descriptor ) ; }
void test4 ( ) throws Throwable { Future < ? > future = executor . submit ( new Runnable ( ) { void run ( ) { try { WebServiceContainer webServiceContainer0 = WebServiceContainer . newInstance ( ( String ) null , ( - 488 ) , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" WebServiceContainer restartContainer ( ) throws RemoteException { / / logger . debug ( "Restarting web service container" ) ; stopContainer ( ) ; try { / / configurationContext = / / ConfigurationContextFactory . createConfigurationContextFromFileSystem ( null , null ) ; / / super . configurationContext = configurationContext ; for ( int i = 0 ; i < descriptorList . size ( ) ; i + + ) { WebServiceDescriptor descriptor = descriptorList . get ( i ) ; configurationContext . getAxisConfiguration ( ) . removeService ( descriptor . getServiceClazz ( ) . getSimpleName ( ) ) ; configureService ( descriptor ) ; } startContainer ( ) ; / / logger . debug ( "Restarted web service container" ) ; } catch ( AxisFault af ) { / / logger . error ( "Error occured while restarting WebServiceContainer" , af ) ; throw new RemoteException ( "Error occured while restarting WebServiceContainer" , af ) ; } return this ; }
void test1 ( ) throws Throwable { RIFClassLoader rIFClassLoader0 = new RIFClassLoader ( ) ; Class < ? > class0 = rIFClassLoader0 . findClass ( " , jv2kh , W ; r BCf" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Class < ? > findClass ( String name ) throws ClassNotFoundException { return classMap . get ( name ) ; }
void test0 ( ) throws Throwable { RIFManager rIFManager0 = new RIFManager ( " ) a`0W & ) Lxgfc1ujO2" ) ; RIFClassLoader rIFClassLoader0 = rIFManager0 . getClassLoader ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" RIFClassLoader getClassLoader ( ) { return classLoader ; }
void test1 ( ) throws Throwable { RIFManager rIFManager0 = new RIFManager ( "i" ) ; RIFServiceStub rIFServiceStub0 = ( RIFServiceStub ) rIFManager0 . getService ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" RIFService getService ( ) { return service ; }
void test0 ( ) throws Throwable { InvokeResponse invokeResponse0 = new InvokeResponse ( ) ; invokeResponse0 . set_return ( "unknown event type ! " ) ; QName qName0 = InvokeResponse . MY_QNAME ; ADBXMLStreamReaderImpl aDBXMLStreamReaderImpl0 = ( ADBXMLStreamReaderImpl ) invokeResponse0 . getPullParser ( qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" javax . xml . stream . XMLStreamReader getPullParser ( javax . xml . namespace . QName qName ) { java . util . ArrayList elementList = new java . util . ArrayList ( ) ; java . util . ArrayList attribList = new java . util . ArrayList ( ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "className" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localClassName ) ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "methodName" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localMethodName ) ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "serializedParams" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localSerializedParams ) ) ; return new org . apache . axis2 . databinding . utils . reader . ADBXMLStreamReaderImpl ( qName , elementList . toArray ( ) , attribList . toArray ( ) ) ; }
void test1 ( ) throws Throwable { InvokeResponse invokeResponse0 = new InvokeResponse ( ) ; String string0 = invokeResponse0 . get_return ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String get_return ( ) { return local_return ; }
void test3 ( ) throws Throwable { InvokeResponse . Factory invokeResponse_Factory0 = new InvokeResponse . Factory ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { Invoke . Factory invoke_Factory0 = new Invoke . Factory ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test1 ( ) throws Throwable { Invoke invoke0 = new Invoke ( ) ; String string0 = invoke0 . getMethodName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getMethodName ( ) { return localMethodName ; }
void test2 ( ) throws Throwable { Invoke invoke0 = new Invoke ( ) ; String string0 = invoke0 . getSerializedParams ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getSerializedParams ( ) { return localSerializedParams ; }
void test3 ( ) throws Throwable { Invoke invoke0 = new Invoke ( ) ; invoke0 . setClassName ( "WWg ; ) ogh / f & U$ + U | V" ) ; invoke0 . setSerializedParams ( "WWg ; ) ogh / f & U$ + U | V" ) ; QName qName0 = new QName ( "WWg ; ) ogh / f & U$ + U | V" , "WWg ; ) ogh / f & U$ + U | V" ) ; invoke0 . setMethodName ( "WWg ; ) ogh / f & U$ + U | V" ) ; ADBXMLStreamReaderImpl aDBXMLStreamReaderImpl0 = ( ADBXMLStreamReaderImpl ) invoke0 . getPullParser ( qName0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" javax . xml . stream . XMLStreamReader getPullParser ( javax . xml . namespace . QName qName ) { java . util . ArrayList elementList = new java . util . ArrayList ( ) ; java . util . ArrayList attribList = new java . util . ArrayList ( ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "className" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localClassName ) ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "methodName" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localMethodName ) ) ; elementList . add ( new javax . xml . namespace . QName ( "" , "serializedParams" ) ) ; elementList . add ( org . apache . axis2 . databinding . utils . ConverterUtil . convertToString ( localSerializedParams ) ) ; return new org . apache . axis2 . databinding . utils . reader . ADBXMLStreamReaderImpl ( qName , elementList . toArray ( ) , attribList . toArray ( ) ) ; }
void test4 ( ) throws Throwable { Invoke invoke0 = new Invoke ( ) ; String string0 = invoke0 . getClassName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" java . lang . String getClassName ( ) { return localClassName ; }
void test1 ( ) throws Throwable { byte [ ] byteArray0 = new byte [ 3 ] ; String string0 = ObjectUtility . encodeBytes ( byteArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String encodeBytes ( byte [ ] bytes ) { return Base64 . encode ( bytes ) ; }
