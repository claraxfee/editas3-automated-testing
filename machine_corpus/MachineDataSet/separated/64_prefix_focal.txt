void test1 ( ) throws Throwable { ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration ( ) ; QuitAction quitAction0 = applicationConfiguration0 . quitAction ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" QuitAction quitAction ( ) { return new QuitAction ( ) ; }
void test2 ( ) throws Throwable { ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration ( ) ; CloseAction closeAction0 = applicationConfiguration0 . closeAction ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" CloseAction closeAction ( ) { return new CloseAction ( jTailMainModel ( ) ) ; }
void test3 ( ) throws Throwable { ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration ( ) ; MenuAction menuAction0 = applicationConfiguration0 . toolsMenuAction ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" MenuAction toolsMenuAction ( ) { return new MenuAction ( bundle . getString ( "action . tools . label" ) , bundle . getString ( "action . tools . mnemonic" ) ) ; }
void test4 ( ) throws Throwable { ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration ( ) ; CloseAllAction closeAllAction0 = applicationConfiguration0 . closeAllAction ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" CloseAllAction closeAllAction ( ) { return new CloseAllAction ( jTailMainModel ( ) ) ; }
void test5 ( ) throws Throwable { ApplicationConfiguration applicationConfiguration0 = new ApplicationConfiguration ( ) ; HighlightAction highlightAction0 = applicationConfiguration0 . highlightAction ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" HighlightAction highlightAction ( ) { return new HighlightAction ( jTailMainModel ( ) ) ; }
void test0 ( ) throws Throwable { IndexationProgressMonitor indexationProgressMonitor0 = new IndexationProgressMonitor ( ( Component ) null , ( Object ) "Default" , "click" , 1 , ( - 1323 ) ) ; Observable observable0 = new Observable ( ) ; indexationProgressMonitor0 . update ( observable0 , ( Object ) "java . awt . Canvas [ canvas1 , 0 , 0 , 0x0 , invalid ] " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void update ( Observable o , Object arg ) { JTailLogger . debug ( "Just received an update for Observable { } and with object { } " , o , arg ) ; }
void test0 ( ) throws Throwable { OpenFileModel openFileModel0 = new OpenFileModel ( ) ; SelectIndexTypeListener selectIndexTypeListener0 = new SelectIndexTypeListener ( openFileModel0 ) ; Object [ ] objectArray0 = new Object [ 7 ] ; objectArray0 [ 0 ] = ( Object ) openFileModel0 ; JComboBox jComboBox0 = new JComboBox ( objectArray0 ) ; ActionEvent actionEvent0 = new ActionEvent ( ( Object ) jComboBox0 , 137 , "W - Q > NA%w , DL ? " ) ; selectIndexTypeListener0 . actionPerformed ( actionEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" FileIndex . Type getIndexType ( ) { return indexType ; }
void test0 ( ) throws Throwable { JTailSizeController jTailSizeController0 = new JTailSizeController ( ( JTailPanel ) null , ( JTailModel ) null ) ; JPasswordField jPasswordField0 = new JPasswordField ( ) ; ContainerEvent containerEvent0 = new ContainerEvent ( ( Component ) jPasswordField0 , 866 , ( Component ) null ) ; jTailSizeController0 . componentResized ( ( ComponentEvent ) containerEvent0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void componentResized ( ComponentEvent e ) { if ( e . getComponent ( ) ! = this . panel ) { JTailLogger . warn ( "Composant inconnu : { } " , / / NON - NLS e . getComponent ( ) . getName ( ) ) ; return ; } / / Attention : il faut mesurer la hauteur du jTailPanel / / = > Le contentTextPane n'est jamais réduit s'il a du contenu int displayableLines = panel . getHeight ( ) / panel . getCharacterHeight ( ) - 1 ; JTailLogger . debug ( "Panel height = { } , Characted height = { } , displayableLines = { } " , / / NON - NLS new Object [ ] { panel . getHeight ( ) , panel . getCharacterHeight ( ) , displayableLines } ) ; / / Si le nombre de lignes affichables ne correspond pas au nombre de lignes affichées / / Alors il y a eu un redimensionnement - > rafraîchir le contenu de la fenêtre if ( displayableLines > 0 & & displayableLines ! = model . getNbDisplayedLines ( ) ) { JTailLogger . debug ( "Current number of displayed lines : { } starting at line { } " , / / NON - NLS model . getNbDisplayedLines ( ) , model . getFirstDisplayedLine ( ) ) ; JTailLogger . debug ( "Now displaying : { } lines" , / / NON - NLS displayableLines ) ; model . setNbDisplayedLines ( displayableLines ) ; panel . getVerticalScrollBar ( ) . getModel ( ) . setExtent ( displayableLines ) ; } }
void test0 ( ) throws Throwable { LogFileFilter logFileFilter0 = new LogFileFilter ( ) ; String string0 = logFileFilter0 . getDescription ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDescription ( ) { return bundle . getString ( "log . files . description" ) ; }
void test1 ( ) throws Throwable { LogFileFilter logFileFilter0 = new LogFileFilter ( ) ; File file0 = new File ( "" ) ; boolean boolean0 = logFileFilter0 . accept ( file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return true ; } String fileExt ; String fileName = file . getName ( ) ; int lastPoint = fileName . lastIndexOf ( ' . ' ) ; if ( lastPoint > 0 & & lastPoint < fileName . length ( ) - 1 ) { fileExt = fileName . substring ( lastPoint + 1 ) . toLowerCase ( ) ; if ( fileExt . equals ( LOG_FILE ) ) { return true ; } } return false ; }
void test2 ( ) throws Throwable { LogFileFilter logFileFilter0 = new LogFileFilter ( ) ; File file0 = new File ( "" ) ; File file1 = file0 . getCanonicalFile ( ) ; boolean boolean0 = logFileFilter0 . accept ( file1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return true ; } String fileExt ; String fileName = file . getName ( ) ; int lastPoint = fileName . lastIndexOf ( ' . ' ) ; if ( lastPoint > 0 & & lastPoint < fileName . length ( ) - 1 ) { fileExt = fileName . substring ( lastPoint + 1 ) . toLowerCase ( ) ; if ( fileExt . equals ( LOG_FILE ) ) { return true ; } } return false ; }
void test3 ( ) throws Throwable { LogFileFilter logFileFilter0 = new LogFileFilter ( ) ; File file0 = new File ( "i ] tII4TjkN . " , "i ] tII4TjkN . " ) ; boolean boolean0 = logFileFilter0 . accept ( file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return true ; } String fileExt ; String fileName = file . getName ( ) ; int lastPoint = fileName . lastIndexOf ( ' . ' ) ; if ( lastPoint > 0 & & lastPoint < fileName . length ( ) - 1 ) { fileExt = fileName . substring ( lastPoint + 1 ) . toLowerCase ( ) ; if ( fileExt . equals ( LOG_FILE ) ) { return true ; } } return false ; }
void test4 ( ) throws Throwable { LogFileFilter logFileFilter0 = new LogFileFilter ( ) ; File file0 = new File ( "Log files ( * . log ) " , "Log files ( * . log ) " ) ; boolean boolean0 = logFileFilter0 . accept ( file0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean accept ( File file ) { if ( file . isDirectory ( ) ) { return true ; } String fileExt ; String fileName = file . getName ( ) ; int lastPoint = fileName . lastIndexOf ( ' . ' ) ; if ( lastPoint > 0 & & lastPoint < fileName . length ( ) - 1 ) { fileExt = fileName . substring ( lastPoint + 1 ) . toLowerCase ( ) ; if ( fileExt . equals ( LOG_FILE ) ) { return true ; } } return false ; }
void test1 ( ) throws Throwable { OpenFileModel openFileModel0 = new OpenFileModel ( ) ; ChooseFileAction chooseFileAction0 = new ChooseFileAction ( openFileModel0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ChooseFileAction ( OpenFileModel openFileModel ) { super ( bundle . getString ( "action . browse . label" ) , bundle . getString ( "action . browse . tooltip" ) , bundle . getString ( "action . browse . mnemonic" ) , CHOOSE_FILE_ICON ) ; this . openFileModel = openFileModel ; }
void test1 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; OpenFileModel openFileModel0 = new OpenFileModel ( ) ; IndexFileAction indexFileAction0 = new IndexFileAction ( jTailMainModel0 , openFileModel0 ) ; Integer integer0 = JLayeredPane . DEFAULT_LAYER ; indexFileAction0 . update ( ( Observable ) openFileModel0 , ( Object ) integer0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void update ( Observable o , Object arg ) { JTailLogger . debug ( "Just received an update for Observable { } and with object { } " , o , arg ) ; }
void test0 ( ) throws Throwable { FileIndex . Type fileIndex_Type0 = FileIndex . Type . FILE_BASED ; File file0 = new File ( "O~^W ! | , fz > < ~b" ) ; OpenFileModelEvent . Type openFileModelEvent_Type0 = OpenFileModelEvent . Type . FILE_CHANGED ; OpenFileModelEvent openFileModelEvent0 = new OpenFileModelEvent ( file0 , fileIndex_Type0 , openFileModelEvent_Type0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" OpenFileModelEvent ( File file , FileIndex . Type indexType , Type eventType ) { this . file = file ; this . indexType = indexType ; this . eventType = eventType ; }
void test0 ( ) throws Throwable { OpenFileModel openFileModel0 = new OpenFileModel ( ) ; File file0 = openFileModel0 . getFile ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" File getFile ( ) { return file ; }
void test2 ( ) throws Throwable { OpenFileModel openFileModel0 = new OpenFileModel ( ) ; FileIndex . Type fileIndex_Type0 = FileIndex . Type . FILE_BASED ; openFileModel0 . setIndexType ( fileIndex_Type0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setIndexType ( FileIndex . Type indexType ) { this . indexType = indexType ; this . setChanged ( ) ; this . notifyObservers ( createModelEvent ( OpenFileModelEvent . Type . INDEX_TYPE_CHANGED ) ) ; }
void test3 ( ) throws Throwable { OpenFileModel openFileModel0 = new OpenFileModel ( ) ; openFileModel0 . setFile ( ( File ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setFile ( File file ) { this . file = file ; this . setChanged ( ) ; this . notifyObservers ( createModelEvent ( OpenFileModelEvent . Type . FILE_CHANGED ) ) ; }
void test0 ( ) throws Throwable { JTailMainModelEvent . Type jTailMainModelEvent_Type0 = JTailMainModelEvent . Type . CREATED ; JTailMainModelEvent jTailMainModelEvent0 = new JTailMainModelEvent ( ( JTailModel ) null , 25 , jTailMainModelEvent_Type0 ) ; String string0 = jTailMainModelEvent0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test1 ( ) throws Throwable { JTailMainModelEvent . Type jTailMainModelEvent_Type0 = JTailMainModelEvent . Type . CREATED ; JTailMainModelEvent jTailMainModelEvent0 = new JTailMainModelEvent ( ( JTailModel ) null , 25 , jTailMainModelEvent_Type0 ) ; boolean boolean0 = jTailMainModelEvent0 . equals ( ( Object ) "type : CREATED - index : 25 - model : null" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test2 ( ) throws Throwable { JTailMainModelEvent . Type jTailMainModelEvent_Type0 = JTailMainModelEvent . Type . CREATED ; JTailMainModelEvent jTailMainModelEvent0 = new JTailMainModelEvent ( ( JTailModel ) null , 25 , jTailMainModelEvent_Type0 ) ; JTailMainModelEvent jTailMainModelEvent1 = new JTailMainModelEvent ( ( JTailModel ) null , 25 , jTailMainModelEvent_Type0 ) ; boolean boolean0 = jTailMainModelEvent0 . equals ( ( Object ) jTailMainModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test0 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , ( - 1 ) , 914 , 0 , 619 ) ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , ( - 545 ) , ( - 707 ) ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test1 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 229 , 0 , 0 ) ; String string0 = jTailModelEvent0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test2 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , 1 , 1 ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) "zUH" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test3 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , ( - 1 ) , 914 , 0 , 619 ) ; JTailModelEvent . Type jTailModelEvent_Type1 = JTailModelEvent . Type . SCROLLED ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type1 , 1 , 1 , ( - 545 ) , ( - 707 ) ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test4 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , 1 , 1 ) ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , 0 , ( - 1 ) ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test5 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . SCROLLED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 0 , 0 , 0 , 1405 ) ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type0 , 0 , 1405 , 1405 , ( - 1690 ) ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test6 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . RESIZED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , 1 , 1 ) ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type0 , 1 , 1 , 1 , ( - 1 ) ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test7 ( ) throws Throwable { JTailModelEvent . Type jTailModelEvent_Type0 = JTailModelEvent . Type . SCROLLED ; JTailModelEvent jTailModelEvent0 = new JTailModelEvent ( jTailModelEvent_Type0 , 0 , 0 , 0 , 0 ) ; JTailModelEvent jTailModelEvent1 = new JTailModelEvent ( jTailModelEvent_Type0 , 0 , 0 , 0 , 0 ) ; boolean boolean0 = jTailModelEvent0 . equals ( ( Object ) jTailModelEvent1 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test0 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; List < JTailModel > list0 = jTailMainModel0 . getFiles ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCurrentFileIndex ( ) { return currentFileIndex ; }
void test1 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; boolean boolean0 = jTailMainModel0 . contains ( ( Object ) jTailMainModel0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean contains ( Object o ) { return this . files . contains ( o ) ; }
void test3 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; int int0 = jTailMainModel0 . getCurrentFileIndex ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCurrentFileIndex ( ) { return currentFileIndex ; }
void test4 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; jTailMainModel0 . size ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCurrentFileIndex ( ) { return currentFileIndex ; }
void test5 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; JTailMainModelEvent . Type jTailMainModelEvent_Type0 = JTailMainModelEvent . Type . UPDATED ; JTailMainModelEvent jTailMainModelEvent0 = jTailMainModel0 . createMainModelEvent ( ( JTailModel ) null , ( - 1 ) , jTailMainModelEvent_Type0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test7 ( ) throws Throwable { JTailMainModel jTailMainModel0 = new JTailMainModel ( ) ; jTailMainModel0 . remove ( ( Object ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getCurrentFileIndex ( ) { return currentFileIndex ; }
void test2 ( ) throws Throwable { ExceptionHandler exceptionHandler0 = new ExceptionHandler ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { InformationHandler informationHandler0 = new InformationHandler ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { ExceptionHandler exceptionHandler0 = new ExceptionHandler ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { NoWrapJTextPane noWrapJTextPane0 = new NoWrapJTextPane ( ) ; boolean boolean0 = noWrapJTextPane0 . getScrollableTracksViewportWidth ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getScrollableTracksViewportWidth ( ) { Component parent = getParent ( ) ; ComponentUI ui = getUI ( ) ; return parent = = null | | ( ui . getPreferredSize ( this ) . width < = parent . getSize ( ) . width ) ; }
void test1 ( ) throws Throwable { NoWrapJTextPane noWrapJTextPane0 = new NoWrapJTextPane ( ) ; JScrollPane jScrollPane0 = new JScrollPane ( ( Component ) noWrapJTextPane0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean getScrollableTracksViewportWidth ( ) { Component parent = getParent ( ) ; ComponentUI ui = getUI ( ) ; return parent = = null | | ( ui . getPreferredSize ( this ) . width < = parent . getSize ( ) . width ) ; }
void test1 ( ) throws Throwable { File file0 = new File ( " ? dwo1DdhSfPX" ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; String string0 = ramFileIndex0 . getFileName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFileName ( ) { return this . file . getName ( ) ; }
void test2 ( ) throws Throwable { File file0 = new File ( " ? dwo1DdhSfPX" ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; String string0 = ramFileIndex0 . toString ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String toString ( ) { return "type : " + type + " - minLine : " + minLine + " - firstLine : " + firstLine + " - nbDisplayedLines : " + nbDisplayedLines + " - maxLine : " + maxLine ; }
void test3 ( ) throws Throwable { RamFileIndex ramFileIndex0 = new RamFileIndex ( ( File ) null ) ; ramFileIndex0 . clear ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Type getType ( ) { return this . fileIndex . getType ( ) ; }
void test5 ( ) throws Throwable { File file0 = new File ( "bD$ | s : " , "bD$ | s : " ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; FileIndex . Type fileIndex_Type0 = ramFileIndex0 . getType ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Type getType ( ) { return this . fileIndex . getType ( ) ; }
void test7 ( ) throws Throwable { File file0 = new File ( "bD$ | s : " , "bD$ | s : " ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; ramFileIndex0 . setOffsetOfLine ( 0 , 2044L ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getIndexSize ( ) { return this . index . getIndexSize ( ) ; }
void test8 ( ) throws Throwable { File file0 = new File ( ( File ) null , "" ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; LinkedList < Long > linkedList0 = new LinkedList < Long > ( ) ; ramFileIndex0 . updateIndex ( ( List < Long > ) linkedList0 , 0 , ( - 1916 ) ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFileName ( ) { return this . file . getName ( ) ; }
void test1 ( ) throws Throwable { File file0 = new File ( "" ) ; RamFileIndex ramFileIndex0 = new RamFileIndex ( file0 ) ; ImmutableFileIndex immutableFileIndex0 = new ImmutableFileIndex ( ( FileIndex ) ramFileIndex0 ) ; String string0 = immutableFileIndex0 . getFileName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFileName ( ) { return this . file . getName ( ) ; }
void test2 ( ) throws Throwable { RamFileIndex ramFileIndex0 = new RamFileIndex ( ( File ) null ) ; ImmutableFileIndex immutableFileIndex0 = new ImmutableFileIndex ( ( FileIndex ) ramFileIndex0 ) ; int int0 = immutableFileIndex0 . getIndexSize ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getIndexSize ( ) { return this . index . getIndexSize ( ) ; }
void test3 ( ) throws Throwable { NOPLogger nOPLogger0 = NOPLogger . NOP_LOGGER ; JTailLogger . debug ( "" , ( Object ) nOPLogger0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void debug ( String s ) { if ( JTailConstants . LOG_LEVEL = = LoggerLevel . DEBUG ) { getLogger ( ) . debug ( s ) ; } }
void test4 ( ) throws Throwable { NOPLogger nOPLogger0 = NOPLogger . NOP_LOGGER ; JTailLogger . debug ( "" , ( Object ) "org . slf4j . helpers . NOPLogger ( NOP ) " , ( Object ) nOPLogger0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void debug ( String s ) { if ( JTailConstants . LOG_LEVEL = = LoggerLevel . DEBUG ) { getLogger ( ) . debug ( s ) ; } }
