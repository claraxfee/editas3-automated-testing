void test0 ( ) throws Throwable { WorkerMgr workerMgr0 = new WorkerMgr ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { MenuManage menuManage0 = new MenuManage ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { Login login0 = new Login ( ) ; login0 . init ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void init ( ) throws ServletException { / / Put your code here }
void test2 ( ) throws Throwable { Login login0 = new Login ( ) ; login0 . destroy ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void destroy ( ) { super . destroy ( ) ; / / Just puts "destroy" string in log / / Put your code here }
void test0 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; aGroup0 . setMark ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMark ( ) { return this . mark ; }
void test1 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; String string0 = aGroup0 . getMark ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMark ( ) { return this . mark ; }
void test2 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; String string0 = aGroup0 . getIdno ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test3 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; String string0 = aGroup0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test4 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; aGroup0 . setIdno ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test5 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ) ; aGroup0 . setName ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test6 ( ) throws Throwable { AGroup aGroup0 = new AGroup ( ( String ) null , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test0 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; menu0 . setParentid ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSort ( ) { return this . sort ; }
void test1 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; menu0 . setStatus ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getUrl ( ) { return this . url ; }
void test2 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; String string0 = menu0 . getOper ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getOper ( ) { return this . oper ; }
void test3 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; String string0 = menu0 . getSort ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSort ( ) { return this . sort ; }
void test4 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; String string0 = menu0 . getIdno ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test5 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; String string0 = menu0 . getParentid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getParentid ( ) { return this . parentid ; }
void test6 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; String string0 = menu0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test7 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; String string0 = menu0 . getUrl ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getUrl ( ) { return this . url ; }
void test8 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; menu0 . setSort ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getOper ( ) { return this . oper ; }
void test9 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; menu0 . setIdno ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test10 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; menu0 . setUrl ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getImg ( ) { return this . img ; }
void test11 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; String string0 = menu0 . getStatus ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getStatus ( ) { return this . status ; }
void test12 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "" , "" , "" , "" , "" ) ; menu0 . setImg ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getStatus ( ) { return this . status ; }
void test13 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; menu0 . setName ( "e + SBZH & x_PcWPoQ . v } " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSort ( ) { return this . sort ; }
void test14 ( ) throws Throwable { Menu menu0 = new Menu ( ) ; menu0 . setOper ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getImg ( ) { return this . img ; }
void test15 ( ) throws Throwable { Menu menu0 = new Menu ( "" , "" , "77" , "" , "" , "77" , "" ) ; String string0 = menu0 . getImg ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test0 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getFlatid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFlatid ( ) { return this . flatid ; }
void test1 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getPassword ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPassword ( ) { return this . password ; }
void test2 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setFlatid ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFlatid ( ) { return this . flatid ; }
void test3 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getAccount ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getAccount ( ) { return this . account ; }
void test4 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setPassword ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test5 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getPersonid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersonid ( ) { return this . personid ; }
void test6 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getIdno ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test7 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setIdno ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getGroupid ( ) { return this . groupid ; }
void test8 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setAccount ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getState ( ) { return this . state ; }
void test9 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setGroupid ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPassword ( ) { return this . password ; }
void test10 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( "cN4 ) XZf & dO' < " , "L2E ) & " , "L2E ) & " , "cN4 ) XZf & dO' < " , "cN4 ) XZf & dO' < " , "cN4 ) XZf & dO' < " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getFlatid ( ) { return this . flatid ; }
void test11 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getState ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getState ( ) { return this . state ; }
void test12 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; String string0 = aWorker0 . getGroupid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getGroupid ( ) { return this . groupid ; }
void test13 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setState ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getAccount ( ) { return this . account ; }
void test14 ( ) throws Throwable { AWorker aWorker0 = new AWorker ( ) ; aWorker0 . setPersonid ( "U\"Lk C5%`KYC$ . ] " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPassword ( ) { return this . password ; }
void test0 ( ) throws Throwable { Base64 base64_0 = new Base64 ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Base64 ( ) { }
void test2 ( ) throws Throwable { byte [ ] byteArray0 = Base64 . base64ToByteArray ( "398 = " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" byte [ ] base64ToByteArray ( String s ) { return _$23180 ( s , false ) ; }
void test3 ( ) throws Throwable { byte [ ] byteArray0 = new byte [ 1 ] ; String string0 = Base64 . byteArrayToBase64 ( byteArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String byteArrayToBase64 ( byte bb [ ] ) { return _$23170 ( bb , false ) ; }
void test4 ( ) throws Throwable { byte [ ] byteArray0 = Base64 . base64ToByteArray ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" byte [ ] base64ToByteArray ( String s ) { return _$23180 ( s , false ) ; }
void test6 ( ) throws Throwable { byte [ ] byteArray0 = Base64 . altBase64ToByteArray ( " ? g = = " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" byte [ ] altBase64ToByteArray ( String s ) { return _$23180 ( s , true ) ; }
void test7 ( ) throws Throwable { byte [ ] byteArray0 = new byte [ 3 ] ; String string0 = Base64 . byteArrayToAltBase64 ( byteArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String byteArrayToAltBase64 ( byte bb [ ] ) { return _$23170 ( bb , true ) ; }
void test8 ( ) throws Throwable { byte [ ] byteArray0 = new byte [ 2 ] ; String string0 = Base64 . byteArrayToBase64 ( byteArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String byteArrayToBase64 ( byte bb [ ] ) { return _$23170 ( bb , false ) ; }
void test0 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ( String ) null , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test1 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; aDepartment0 . setMark ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMark ( ) { return this . mark ; }
void test2 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; String string0 = aDepartment0 . getIdno ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test3 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; String string0 = aDepartment0 . getMark ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMark ( ) { return this . mark ; }
void test4 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; String string0 = aDepartment0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test5 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; aDepartment0 . setName ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test6 ( ) throws Throwable { ADepartment aDepartment0 = new ADepartment ( ) ; aDepartment0 . setIdno ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getIdno ( ) { return this . idno ; }
void test0 ( ) throws Throwable { PersonInfoMgr personInfoMgr0 = new PersonInfoMgr ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test0 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; aPersonInfo0 . setDepartment ( "wJ$KMDik < ; z" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getReason ( ) { return this . reason ; }
void test1 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setPersontype ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getWbm ( ) { return this . wbm ; }
void test2 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getSex ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSex ( ) { return this . sex ; }
void test3 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; aPersonInfo0 . setBirthday ( ( Date ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getReason ( ) { return this . reason ; }
void test4 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; String string0 = aPersonInfo0 . getDepartment ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDepartment ( ) { return this . department ; }
void test5 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setMobile ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getDepartment ( ) { return this . department ; }
void test6 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getPersonid ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersonid ( ) { return this . personid ; }
void test7 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; Date date0 = new Date ( ) ; aPersonInfo0 . setIndate ( date0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" void setIndate ( Date indate ) { this . indate = indate ; }
void test8 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getWbm ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getWbm ( ) { return this . wbm ; }
void test9 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; String string0 = aPersonInfo0 . getName ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test10 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; Date date0 = aPersonInfo0 . getOutdate ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Date getOutdate ( ) { return this . outdate ; }
void test11 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setName ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getName ( ) { return this . name ; }
void test12 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; String string0 = aPersonInfo0 . getPersontype ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersontype ( ) { return this . persontype ; }
void test13 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; aPersonInfo0 . setOutdate ( ( Date ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSex ( ) { return this . sex ; }
void test14 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getReason ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getReason ( ) { return this . reason ; }
void test15 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; Date date0 = aPersonInfo0 . getIndate ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Date getIndate ( ) { return this . indate ; }
void test16 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getPym ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPym ( ) { return this . pym ; }
void test17 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setWbm ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersontype ( ) { return this . persontype ; }
void test18 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; String string0 = aPersonInfo0 . getMobile ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMobile ( ) { return mobile ; }
void test19 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setPym ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersonid ( ) { return this . personid ; }
void test20 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setPersonid ( "tQwmULL | _c' } " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getPersontype ( ) { return this . persontype ; }
void test21 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; aPersonInfo0 . setSex ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMobile ( ) { return mobile ; }
void test22 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( ) ; Date date0 = aPersonInfo0 . getBirthday ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Date getBirthday ( ) { return this . birthday ; }
void test23 ( ) throws Throwable { APersonInfo aPersonInfo0 = new APersonInfo ( "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , ( Date ) null , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" , "wJ$KMDik < ; z" ) ; aPersonInfo0 . setReason ( "wJ$KMDik < ; z" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getMobile ( ) { return mobile ; }
void test0 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; int int0 = basePara0 . getStart ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test1 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setOrdersql ( ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test2 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getQueryValue ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test3 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getDir ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test4 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getSqlpath ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test5 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getQuerySql ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test6 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setQueryValue ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test7 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setSqlpath ( "1W / & g < bz" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test8 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setQuerySql ( "T ( oAt1uoC " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test9 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setStart ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getStart ( ) { return start ; }
void test10 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getArr2params ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test11 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getQueryparams ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test12 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setDir ( "" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test13 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getOrdersql ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test14 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; int int0 = basePara0 . getLimit ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test15 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setLimit ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getLimit ( ) { return limit ; }
void test16 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setGroupsql ( "T ( oAt1uoC " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test17 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setSql ( "1W / & g < bz" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test18 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setPaging ( false ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test19 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . setSort ( "T ( oAt1uoC " ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test20 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getSort ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test21 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; boolean boolean0 = basePara0 . isPaging ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test22 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getSql ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test23 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . getGroupsql ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test24 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; String [ ] [ ] stringArray0 = new String [ 4 ] [ 3 ] ; basePara0 . setArr2params ( stringArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test25 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; String [ ] stringArray0 = new String [ 5 ] ; basePara0 . setQueryparams ( stringArray0 ) ; String [ ] [ ] stringArray1 = basePara0 . single2plannar ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test26 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; basePara0 . single2plannar ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test27 ( ) throws Throwable { BasePara basePara0 = new BasePara ( ) ; String [ ] stringArray0 = new String [ 8 ] ; basePara0 . setQueryparams ( stringArray0 ) ; String [ ] [ ] stringArray1 = basePara0 . single2plannar ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" boolean isPaging ( ) { return this . paging ; }
void test3 ( ) throws Throwable { DataSource dataSource0 = new DataSource ( ) ; FakeHttpSession fakeHttpSession0 = new FakeHttpSession ( ( String ) null ) ; String string0 = dataSource0 . getSession ( ( HttpSession ) fakeHttpSession0 , ( String ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getSession ( HttpSession ss , String sessionName ) { String s = ss . getAttribute ( sessionName ) + "" ; return s ; }
void test0 ( ) throws Throwable { ListRange listRange0 = new ListRange ( ) ; listRange0 . setTotalSize ( 0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalSize ( ) { return totalSize ; }
void test1 ( ) throws Throwable { ListRange listRange0 = new ListRange ( ) ; int int0 = listRange0 . getTotalSize ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalSize ( ) { return totalSize ; }
void test2 ( ) throws Throwable { ListRange listRange0 = new ListRange ( ) ; listRange0 . setData ( ( ArrayList < Object > ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalSize ( ) { return totalSize ; }
void test3 ( ) throws Throwable { ListRange listRange0 = new ListRange ( ) ; ArrayList < Object > arrayList0 = listRange0 . getData ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ArrayList < Object > getData ( ) { return data ; }
void test0 ( ) throws Throwable { HibernateSessionFactory hibernateSessionFactory0 = new HibernateSessionFactory ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" <UnknownFocalMethodText>
void test4 ( ) throws Throwable { DaoFactory daoFactory0 = new DaoFactory ( ) ; String string0 = daoFactory0 . encrypt ( "4lN#f$oAZN4 . 'O ) k" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String encrypt ( String str ) { return Base64 . byteArrayToBase64 ( str . getBytes ( ) ) ; }
void test1 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; IndexedElement indexedElement0 = new IndexedElement ( "Ln + ! SG ; T9 ; 5CXO7^p~" ) ; QName qName0 = indexedElement0 . getQName ( "Ln + ! SG ; T9 ; 5CXO7^p~" ) ; NonLazyElement nonLazyElement0 = new NonLazyElement ( qName0 , 3773 ) ; List < Object > list0 = nonLazyElement0 . elements ( qName0 ) ; loader0 . setRs ( list0 ) ; loader0 . collectToMap ( "Ln + ! SG ; T9 ; 5CXO7^p~" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalCount ( ) { return totalCount ; }
void test2 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; loader0 . setRange ( ( ListRange ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalCount ( ) { return totalCount ; }
void test4 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; loader0 . setTotalCount ( 7 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalCount ( ) { return totalCount ; }
void test5 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; ListRange listRange0 = loader0 . getRange ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" ListRange getRange ( ) { return range ; }
void test9 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; Query query0 = loader0 . getParams ( ( Query ) null , ( String [ ] [ ] ) null ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Query getParams ( Query query , String [ ] [ ] params ) { if ( params ! = null ) { String [ ] pValue = params [ 0 ] ; / / 参数值 String [ ] pType = params [ 1 ] ; / / 参数值类型 for ( int i = 0 ; i < pValue . length ; i + + ) { if ( pType [ i ] . equals ( "String" ) ) { query . setParameter ( i , pValue [ i ] ) ; } else if ( pType [ i ] . equals ( "Long" ) ) { query . setParameter ( i , Long . parseLong ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Integer" ) ) { query . setParameter ( i , Integer . parseInt ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Double" ) ) { query . setParameter ( i , Double . parseDouble ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Date" ) ) { try { query . setParameter ( i , new SimpleDateFormat ( "yyyy - MM - dd" ) . parse ( pValue [ i ] ) ) ; } catch ( HibernateException e ) { / / TODO Auto - generated catch block e . printStackTrace ( ) ; } catch ( ParseException e ) { / / TODO Auto - generated catch block e . printStackTrace ( ) ; } } } } return query ; }
void test10 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; String [ ] [ ] stringArray0 = new String [ 3 ] [ 8 ] ; String [ ] stringArray1 = new String [ 5 ] ; stringArray1 [ 0 ] = "9SdPv . ; " ; stringArray1 [ 1 ] = "9SdPv . ; " ; stringArray1 [ 2 ] = "9SdPv . ; " ; stringArray1 [ 3 ] = "9SdPv . ; " ; stringArray1 [ 4 ] = "Date" ; stringArray0 [ 0 ] = stringArray1 ; stringArray0 [ 1 ] = stringArray0 [ 0 ] ; Query query0 = loader0 . getParams ( ( Query ) null , stringArray0 ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" Query getParams ( Query query , String [ ] [ ] params ) { if ( params ! = null ) { String [ ] pValue = params [ 0 ] ; / / 参数值 String [ ] pType = params [ 1 ] ; / / 参数值类型 for ( int i = 0 ; i < pValue . length ; i + + ) { if ( pType [ i ] . equals ( "String" ) ) { query . setParameter ( i , pValue [ i ] ) ; } else if ( pType [ i ] . equals ( "Long" ) ) { query . setParameter ( i , Long . parseLong ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Integer" ) ) { query . setParameter ( i , Integer . parseInt ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Double" ) ) { query . setParameter ( i , Double . parseDouble ( pValue [ i ] ) ) ; } else if ( pType [ i ] . equals ( "Date" ) ) { try { query . setParameter ( i , new SimpleDateFormat ( "yyyy - MM - dd" ) . parse ( pValue [ i ] ) ) ; } catch ( HibernateException e ) { / / TODO Auto - generated catch block e . printStackTrace ( ) ; } catch ( ParseException e ) { / / TODO Auto - generated catch block e . printStackTrace ( ) ; } } } } return query ; }
void test14 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; UserDataElement userDataElement0 = new UserDataElement ( "q ( zi | " ) ; List < Object > list0 = userDataElement0 . content ( ) ; loader0 . setRs ( list0 ) ; String string0 = loader0 . getArrayResults ( ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" String getArrayResults ( ) { List rows = this . getRs ( ) ; if ( rows . size ( ) = = 0 ) { return "" ; } String jsonstr = "" ; for ( Iterator < ? > it = rows . iterator ( ) ; it . hasNext ( ) ; ) { Object [ ] obj = ( Object [ ] ) it . next ( ) ; String constr = " { " ; for ( int i = 0 ; i < obj . length ; i + + ) { if ( i = = obj . length - 1 ) { constr + = '"' + colNames [ i ] + '"' + " : " + '"' + obj [ i ] + '"' ; } else { constr + = '"' + colNames [ i ] + '"' + " : " + '"' + obj [ i ] + '"' + " , " ; } } constr + = " } " ; jsonstr + = constr + " , " ; } jsonstr = " [ " + jsonstr . substring ( 0 , jsonstr . lastIndexOf ( " , " ) ) + " ] " ; return jsonstr ; }
void test16 ( ) throws Throwable { Loader loader0 = new Loader ( ) ; UserDataElement userDataElement0 = new UserDataElement ( "inyboo" ) ; List < Object > list0 = userDataElement0 . content ( ) ; loader0 . setRs ( list0 ) ; String [ ] stringArray0 = new String [ 1 ] ; loader0 . setColNames ( stringArray0 ) ; userDataElement0 . addElement ( "inyboo" ) ; loader0 . collectToMap ( "inyboo" ) ; "<AssertPlaceHolder>" ; } "<FocalMethod>" int getTotalCount ( ) { return totalCount ; }
