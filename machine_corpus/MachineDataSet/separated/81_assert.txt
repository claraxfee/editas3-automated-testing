assertNotNull ( charServer0 )
assertNotNull ( mapServerConnection0 )
assertEquals ( "db / map_index . txt" , tXTMapPersistence0 . getFileDB ( ) )
assertNotNull ( string0 )
assertEquals ( "db / map_index . xml" , xMLMapPersistence0 . getFileDB ( ) )
assertNotNull ( string0 )
assertEquals ( 1 , fastMap0 . size ( ) )
assertEquals ( "" , subnet0 . getMapIP ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertEquals ( " : KkJwS | Q~q ( & N < ] F0 : " , subnet0 . toString ( ) )
assertEquals ( " : : " , string0 )
assertNull ( persistenteData0 )
assertEquals ( "" , subnet0 . getCharIP ( ) )
assertEquals ( "" , subnet0 . getCharIP ( ) )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertEquals ( "conf / subnet_athena . xml" , xMLSubnet0 . getFileConfig ( ) )
assertEquals ( "conf / subnet_athena . xml" , string0 )
assertNotNull ( string0 )
assertEquals ( "conf / subnet_athena . conf" , tXTSubnet0 . getFileConfig ( ) )
assertNotNull ( string0 )
assertEquals ( "conf / char_athena . conf" , tXTCharConfig0 . getFileConfig ( ) )
assertEquals ( "conf / char_athena . conf" , tXTCharConfig0 . getFileConfig ( ) )
assertEquals ( 0 , charConfig0 . getFameListSizeBlacksmith ( ) )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , charConfig0 . getGmAllowLevel ( ) )
assertEquals ( false , charConfig0 . isEmailCreation ( ) )
assertEquals ( 0 , charConfig0 . getLoginPort ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , charConfig0 . getCharDelLevel ( ) )
assertEquals ( 0 , charConfig0 . getStartWeapon ( ) )
assertNull ( string0 )
assertNull ( persistenteData0 )
assertEquals ( 0 , charConfig0 . getCharNewDisplay ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , charConfig0 . isEmailCreation ( ) )
assertEquals ( 0 , charConfig0 . getFameListSizeTaekwon ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( 1957 , charConfig0 . getGuildExpRate ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNull ( charConfig0 . getCharLogFilename ( ) )
assertEquals ( 0 , charConfig0 . getMaxConnectUser ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , charConfig0 . getCharsPerAccount ( ) )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( false , charConfig0 . isNameIgnoringCase ( ) )
assertEquals ( 0 , int0 )
assertNull ( charConfig0 . getWispServerName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( false , boolean0 )
assertNull ( charConfig0 . getLoginIp ( ) )
assertEquals ( false , charConfig0 . isCharNew ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , charConfig0 . isConsole ( ) )
assertEquals ( 1103 , charConfig0 . getCharNameOption ( ) )
assertEquals ( 0 , charConfig0 . getStartZeny ( ) )
assertNotNull ( charConfig0 )
assertNotNull ( charConfig0 )
assertEquals ( 0 , charConfig0 . getMsgSilent ( ) )
assertEquals ( 0 , charConfig0 . getStartZeny ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , charConfig0 . getStartArmor ( ) )
assertNull ( string0 )
assertNotNull ( charConfig0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( point0 )
assertEquals ( 0 , charConfig0 . getFameListSizeSmith ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( charConfig0 )
assertEquals ( 0 , charConfig0 . getStartArmor ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( charConfig0 )
assertEquals ( 0 , charConfig0 . getCharNameOption ( ) )
assertEquals ( 1957 , charConfig0 . getCharDelLevel ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( charConfig0 )
assertEquals ( 0 , int0 )
assertEquals ( "conf / char_athena . xml" , xMLCharConfig0 . getFileConfig ( ) )
assertEquals ( "conf / char_athena . xml" , string0 )
assertNotNull ( main0 )
assertEquals ( 0 , int0 )
assertEquals ( true , loginAthena0 . getUse_MD5_passwords ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( 0 , loginAthena0 . getMin_level_to_connect ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( 0 , int0 )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( 1519 , loginAthena0 . getLogin_port ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( - 26 , loginAthena0 . getDynamic_pass_failure_ban_interval ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( - 36 , loginAthena0 . getAllowed_regs ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( - 26 , loginAthena0 . getClient_version_to_connect ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( - 26 , loginAthena0 . getStart_limited_time ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , boolean0 )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( false , loginAthena0 . isCheck_client_version ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( "127 . 0 . 0 . 1" , loginAthena0 . getBind_ip_str ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( true , loginAthena0 . isDynamic_pass_failure_ban ( ) )
assertEquals ( false , loginAthena0 . isConsole ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( true , loginAthena0 . isIpban ( ) )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1L ) , long0 )
assertNull ( string0 )
assertEquals ( 0L , long0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNotNull ( intArray0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertNotNull ( intArray0 )
assertEquals ( ACO . MUTUAL_FAILTURE , aCO0 )
assertEquals ( 0 , int0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertNull ( string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( "gm_accounts" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( "userid" , string0 )
assertEquals ( "conf / inter_athena . conf" , string0 )
assertEquals ( "user_pass" , string0 )
assertEquals ( "loginlog" , string0 )
assertEquals ( "conf / inter_athena . conf" , string0 )
assertEquals ( true , boolean0 )
assertEquals ( "level" , string0 )
assertEquals ( "" , string0 )
assertNull ( string0 )
assertEquals ( "global_reg_value" , string0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( multilanguageManagement0 . getLogin_log_7 ( ) )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertNull ( string0 )
assertEquals ( 2 , int0 )
assertEquals ( 4032 , int0 )
assertEquals ( 8 , int0 )
assertEquals ( 4358 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( false , inet4Address0 . isMulticastAddress ( ) )
assertEquals ( "" , string0 )
assertEquals ( "401459215617618171442532396" , string0 )
assertNull ( string0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 . 0 , double0 , 0 . 01D )
assertEquals ( 0 , int0 )
assertEquals ( "java . util . GregorianCalendar [ time = 1372719785738 , areFieldsSet = true , areAllFieldsSet = true , lenient = true , zone = sun . util . calendar . ZoneInfo [ id = \"Europe / Belfast\" , offset = 0 , dstSavings = 3600000 , useDaylight = true , transitions = 242 , lastRule = java . util . SimpleTimeZone [ id = Europe / Belfast , offset = 0 , dstSavings = 3600000 , useDaylight = true , startYear = 0 , startMode = 2 , startMonth = 2 , startDay = - 1 , startDayOfWeek = 1 , startTime = 3600000 , startTimeMode = 2 , endMode = 2 , endMonth = 9 , endDay = - 1 , endDayOfWeek = 1 , endTime = 3600000 , endTimeMode = 2 ] ] , firstDayOfWeek = 1 , minimalDaysInFirstWeek = 1 , ERA = 1 , YEAR = 2013 , MONTH = 6 , WEEK_OF_YEAR = 27 , WEEK_OF_MONTH = 1 , DAY_OF_MONTH = 2 , DAY_OF_YEAR = 183 , DAY_OF_WEEK = 3 , DAY_OF_WEEK_IN_MONTH = 1 , AM_PM = 0 , HOUR = 0 , HOUR_OF_DAY = 0 , MINUTE = 3 , SECOND = 5 , MILLISECOND = 738 , ZONE_OFFSET = 0 , DST_OFFSET = 3600000 ] " , gregorianCalendar0 . toString ( ) )
assertEquals ( "0" , string0 )
assertEquals ( 11 , int0 )
assertEquals ( 142 , int0 )
assertEquals ( "" , string0 )
assertEquals ( "\"" , string0 )
assertEquals ( 142 , int0 )
assertEquals ( ( byte ) 0 , byte0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertNull ( string0 )
assertEquals ( "\uFFFD%0W%\uFFFD\u05026\uFFFD : o\uFFFD\uFFFD | 8" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertNotSame ( byteArray1 , byteArray0 )
assertNotNull ( string0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 'S' , char0 )
assertEquals ( 'F' , char0 )
assertEquals ( 'M' , char0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( "" , string0 )
assertEquals ( 0 , sessionPacket0 . readInt ( ) )
assertEquals ( 0 , sessionPacket0 . readInt ( ) )
assertEquals ( 0 , sessionPacket0 . readInt ( ) )
assertEquals ( "" , string0 )
assertEquals ( 0L , subNetConf0 . getMap_ip ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , subNetConf0 . getMask ( ) )
assertEquals ( 0L , long0 )
assertEquals ( 0L , long0 )
assertEquals ( 0L , subNetConf0 . getMap_ip ( ) )
assertEquals ( 0L , subNetConf0 . getMask ( ) )
assertEquals ( 0L , long0 )
assertEquals ( - 1094 , point0 . getMapId ( ) )
assertEquals ( - 1094 , point0 . getMapId ( ) )
assertEquals ( - 1094 , point0 . getMapId ( ) )
assertEquals ( ( - 1094 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1713 , point0 . getY ( ) )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNotNull ( packet0 )
assertNull ( string0 )
assertEquals ( 0 , socket_data0 . getEof ( ) )
assertNull ( excecutable0 )
assertNull ( string0 )
assertEquals ( "0 . 0 . 0 . 0" , socket_data0 . getIpStr ( ) )
assertNotNull ( socket_data0 )
assertEquals ( 0 , ( int ) integer0 )
assertEquals ( 0 , socket_data0 . getListenPort ( ) )
assertNull ( calendar0 )
assertEquals ( false , socket1 . isInputShutdown ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 17 , socket_data0 . getUsers ( ) )
assertEquals ( false , socket_data0 . cancel ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "0 . 0 . 0 . 0" , socket_data0 . getName ( ) )
assertEquals ( "0 . 0 . 0 . 0" , string0 )
assertNotNull ( socket_data0 )
assertEquals ( - 8 , socket_data0 . getMaintenance ( ) )
assertSame ( fromClient1 , fromClient0 )
assertEquals ( 8 , socket_data0 . getNew_ ( ) )
assertEquals ( 0 , socket_data0 . getMaintenance ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0L , socket_data0 . scheduledExecutionTime ( ) )
assertNull ( excecutable0 )
assertEquals ( 0 , socket_data0 . getUsers ( ) )
assertNotNull ( socket_data0 )
assertEquals ( 0 , socket_data0 . getEof ( ) )
assertNull ( excecutable0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 0 , socket_data0 . getListenPort ( ) )
assertNull ( socket_data0 . getMd5key ( ) )
assertEquals ( 0 , socket_data0 . getMaintenance ( ) )
assertNull ( socket_data0 . getType ( ) )
assertEquals ( false , socket0 . getReuseAddress ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( true , auth_data0 . isResetLogincoun ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( "7\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t" , auth_data0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( 0 , int0 )
assertEquals ( ( - 18L ) , auth_data0 . getBan_until_time ( ) )
assertEquals ( "0\tnull\tnull\t3\tnull\t0\t0\t0\t0\t0\t0\tnull\t" , auth_data0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( 1 , auth_data0 . getLogincount ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( "0\tnull\tnull\t\u0000\tnull\t0\t0\t0\t0\t0\t0\tnull\t , " , auth_data0 . toString ( ) )
assertEquals ( - 821 , auth_data0 . getVersion ( ) )
assertEquals ( 1784 , auth_data0 . getClientType ( ) )
assertEquals ( 342 , auth_data0 . getLogin_id2 ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( - 18 , auth_data0 . getLogincount ( ) )
assertEquals ( 1269 , auth_data0 . getLogincount ( ) )
assertEquals ( - 1 , auth_data0 . getCharserver ( ) )
assertEquals ( "0\tnull\tnull\t\u0000\tnull\t0\t100\t0\t0\t0\t0\tnull\t" , auth_data0 . toString ( ) )
assertEquals ( 7 , auth_data0 . getState ( ) )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertEquals ( 0 , int0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertEquals ( 0 , item0 . getAmount ( ) )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertNotNull ( item0 )
assertEquals ( - 1 , sessionType0 . getValue ( ) )
assertEquals ( 1270 , int0 )
assertEquals ( - 1 , friend0 . getAccount_id ( ) )
assertEquals ( - 1 , friend0 . getAccount_id ( ) )
assertEquals ( 1404 , friend0 . getChar_id ( ) )
assertEquals ( - 1 , friend0 . getAccount_id ( ) )
assertEquals ( - 230 , friend0 . getAccount_id ( ) )
assertEquals ( 701 , friend0 . getChar_id ( ) )
assertEquals ( 4012 , int0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNull ( string0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getSp ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , rOCharacter0 . getStr ( ) )
assertEquals ( 0 , rOCharacter0 . getSkill_point ( ) )
assertEquals ( 0 , rOCharacter0 . getAccount_id ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , fastTable0 . size ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getManner ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getMother ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertEquals ( true , fastTable0 . isEmpty ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getHead_bottom ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , fastTable0 . size ( ) )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , rOCharacter0 . getDex ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNull ( point0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , rOCharacter0 . getMapip ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertEquals ( false , boolean0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNull ( hotkeyArray0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getStr ( ) )
assertNull ( persistenteData0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getHp ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNull ( point0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getSex ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getIntel ( ) )
assertNotNull ( friendArray0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNull ( rOCharacter0 . getName ( ) )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , rOCharacter0 . getWeapon ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( true , fastTable0 . isEmpty ( ) )
assertEquals ( 0 , rOCharacter0 . getHom_id ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( 0 , rOCharacter0 . getClothes_color ( ) )
assertNotNull ( rOCharacter0 )
assertNotNull ( rOCharacter0 )
assertEquals ( ROCharacter . JOB . NOVICE , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . CRUSADER , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SWORDMAN , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . ACOLYTE , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . PRIEST , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . HUNTER , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SAGE , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . BARD , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SUPER_NOVICE , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SUMMER , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . ARCHER_HIGH , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SNIPER , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . BABY_MERCHANT , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . BABY_HUNTER , rOCharacter_JOB0 )
assertEquals ( ROCharacter . JOB . SUPER_BABY , rOCharacter_JOB0 )
assertEquals ( 0 , fastMap0 . size ( ) )
assertEquals ( false , fastMap0 . isShared ( ) )
assertEquals ( - 1042 , skill0 . getId ( ) )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 473 , skill0 . getFlag ( ) )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , skill0 . getLv ( ) )
assertEquals ( ( short ) 0 , short0 )
assertEquals ( 0 , hotkey0 . getLv ( ) )
assertEquals ( 1713 , hotkey0 . getType ( ) )
assertEquals ( - 1094 , hotkey0 . getId ( ) )
assertEquals ( 0 , hotkey0 . getLv ( ) )
assertEquals ( - 1094 , hotkey0 . getId ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , mySQLDBManagement0 . mmo_auth_init ( ) )
assertEquals ( 0 , mySQLDBManagement0 . mmo_auth_init ( ) )
assertNull ( auth_data0 )
assertEquals ( false , boolean0 )
assertNull ( auth_data0 )
assertNull ( auth_data0 )
assertNotNull ( auth_data0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( "0 . 0 . 0 . 0" , socket_data0 . getIpStr ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( " [ ] " , fastMap0 . toString ( ) )
assertEquals ( 0 , int0 )
assertNull ( auth_data0 )
assertNull ( auth_data0 )
assertNotNull ( auth_data0 )
assertNull ( auth_data1 )
assertEquals ( 83 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 99 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertNotNull ( auth_data0 )
assertNull ( auth_data0 )
assertEquals ( "17\t\t * Tm0EUv6 . %4k@\t : \t * Tm0EUv6 . %4k@\t0\t0\t0\t0\t0\t0\tnull\t" , auth_data0 . toString ( ) )
assertEquals ( " [ 0 , - 2 , 1 , 2 , 3 , 5 , 6 , 7 , 9 , 11 , 12 , 13 , 14 , 16 , 17 , 18 , 19 , 20 , 21 , 22 , 8 , 4 , 10 , 15 , 23 , 24 , 25 , 26 , 27 , 29 , 31 , 32 , 33 , 34 , 35 , 36 , 37 , 39 , 42 , 44 , 45 , 46 , 47 , 48 , - 49 , 51 , 52 , - 1 ] " , fastTable0 . toString ( ) )
assertEquals ( 0 , socket_data0 . getUsers ( ) )
assertNull ( socket_data0 . getName ( ) )
assertNull ( mySQLDBManagement0 )
assertEquals ( ( - 127 ) , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , socket_data0 . getEof ( ) )
assertEquals ( 0 , socket_data0 . getEof ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
