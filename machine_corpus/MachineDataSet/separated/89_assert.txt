assertEquals ( 0 . 0F , cumulativeHistogram0 . min ( ) , 0 . 01F )
assertEquals ( 0 , interpolatedRealGrayImage0 . X ( ) )
assertEquals ( 2 , rOI0 . Y ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 734 , rOI0 . Y ( ) )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1987 , rOI0 . Y ( ) )
assertNotNull ( colorHistogram0 )
assertNotNull ( colorHistogram0 )
assertNotNull ( floatArray0 )
assertNotNull ( imageKernel0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( levelSetSharpen0 )
assertNotNull ( levelSetSharpen0 )
assertEquals ( 0 . 05F , levelSetSmooth0 . boundV , 0 . 01F )
assertNotNull ( levelSetSmooth0 )
assertEquals ( 8 , realGrayImage0 . X ( ) )
assertNull ( realGrayImage0 )
assertEquals ( 0 . 0F , levelSetSmooth0 . boundV , 0 . 01F )
assertNotSame ( binaryImage0 , image0 )
assertNotNull ( image0 )
assertEquals ( "3 : 3\n1 . 0 1 . 0 1 . 0 \n1 . 0 1 . 0 1 . 0 \n1 . 0 1 . 0 1 . 0 \n" , image0 . toString ( ) )
assertNotSame ( image0 , image1 )
assertEquals ( 3 , image0 . X ( ) )
assertEquals ( 3 , image0 . X ( ) )
assertFalse ( binaryImage0 . equals ( image0 ) )
assertEquals ( 3 , image0 . X ( ) )
assertNotNull ( image0 )
assertNotNull ( image0 )
assertEquals ( "15 : 15\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 1 . 0 \n1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 1 . 0 \n" , image0 . toString ( ) )
assertNotNull ( image0 )
assertNotNull ( image0 )
assertNotNull ( image0 )
assertEquals ( 828 . 66644F , imageKernel0 . addSum ( ) , 0 . 01F )
assertEquals ( 65025L , grayImage0 . sqrSum ( ) )
assertEquals ( "3 : 3\n255 . 0 1 . 0 1 . 0 \n1 . 0 1 . 0 1 . 0 \n1 . 0 1 . 0 1 . 0 \n" , imageKernel0 . toString ( ) )
assertEquals ( 8009 . 0845F , imageKernel0 . absSum ( ) , 0 . 01F )
assertEquals ( "22 : 22\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , imageKernel0 . toString ( ) )
assertNotNull ( image0 )
assertEquals ( "22 : 22\n6 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 22 \n22 : 22\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n22 : 22\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n" , image0 . toString ( ) )
assertNotNull ( image0 )
assertEquals ( "335 : 1\n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n255 . 0 \n335 : 1\n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n335 : 1\n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n0 . 0 \n" , image0 . toString ( ) )
assertEquals ( 2 . 0 , imageKernel0 . sqrSum ( ) , 0 . 01D )
assertEquals ( 2 , image0 . Y ( ) )
assertEquals ( 0 . 0 , imageKernel0 . sqrSum ( ) , 0 . 01D )
assertEquals ( 2295 . 0F , imageKernel0 . addSum ( ) , 0 . 01F )
assertEquals ( 0 . 0 , imageKernel1 . sqrSum ( ) , 0 . 01D )
assertEquals ( 0 , interpolatedGrayImage0 . addSum ( ) )
assertEquals ( 51759L , interpolatedGrayImage2 . sqrSum ( ) )
assertEquals ( 15552 . 0F , imageKernel0 . addSum ( ) , 0 . 01F )
assertNotNull ( imageInputStream0 )
assertNotNull ( imageInputStream0 )
assertNotNull ( imageInputStream0 )
assertNotNull ( imageInputStream0 )
assertEquals ( true , imageInputStream0 . isEnabled ( ) )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( 0 , imageOutputStreamJAI1 . X ( ) )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( 0 , int0 )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( false , imageOutputStreamJAI0 . isGray )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , imageOutputStream1 . X ( ) )
assertEquals ( 0 , int0 )
assertEquals ( "0 : 0\n" , magnitudeImage1 . toString ( ) )
assertNotNull ( grayImage0 )
assertNotNull ( interpolatedGrayImage0 )
assertEquals ( 0 , grayImage0 . addSum ( ) )
assertNotNull ( interpolatedGrayImage0 )
assertEquals ( InterpolationMethod . NEIGHBOR , interpolatedGrayImage1 . getInterpolationMethod ( ) )
assertNotNull ( grayImage0 )
assertEquals ( 0 , interpolatedGrayImage1 . addSum ( ) )
assertNotNull ( grayImage0 )
assertEquals ( 0 , int0 )
assertEquals ( "657 : 1\n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n0 \n" , interpolatedGrayImage0 . toString ( ) )
assertEquals ( InterpolationMethod . NEIGHBOR , interpolatedGrayImage1 . getInterpolationMethod ( ) )
assertNotNull ( grayImage0 )
assertNotNull ( string0 )
assertNotNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertEquals ( "3 : 3\n - 1 . 0 - 2 . 0 - 1 . 0 \n0 . 0 0 . 0 0 . 0 \n1 . 0 2 . 0 1 . 0 \n" , imageKernel0 . toString ( ) )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertSame ( interpolatedColorImage1 , interpolatedColorImage0 )
assertEquals ( 0 , interpolatedColorImage1 . Y ( ) )
assertNotNull ( intArray0 )
assertNotNull ( colorImage0 )
assertNotNull ( interpolatedColorImage0 )
assertNotNull ( mIPMap0 )
assertNotNull ( mIPMap0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( imageKernel0 )
assertEquals ( 0 . 0F , float0 , 0 . 01F )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertEquals ( "0 : 1466\n" , powerImage1 . toString ( ) )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertNotNull ( imageKernel0 )
assertEquals ( 0 . 0F , phaseImage0 . absSum ( ) , 0 . 01F )
assertNotNull ( interpolatedRealColorImage0 )
assertNotNull ( interpolatedRealColorImage0 )
assertEquals ( 0 . 0 , powerImage0 . sqrSum ( ) , 0 . 01D )
assertNotNull ( binaryImage0 )
assertEquals ( 0 , binaryImage1 . Y ( ) )
assertNotNull ( binaryImage0 )
assertEquals ( ( byte ) 0 , ( byte ) byte0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertEquals ( 1 , binaryImage0 . count ( ) )
assertEquals ( 289 , binaryImage0 . count ( ) )
assertEquals ( 6 , binaryImage0 . count ( ) )
assertEquals ( 0 , binaryImage0 . X ( ) )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertEquals ( ( byte ) 1 , ( byte ) byte0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertEquals ( 0 , binaryImage0 . count ( ) )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertNotNull ( binaryImage0 )
assertEquals ( 0 , int0 )
assertNotNull ( integerArray0 )
assertNotNull ( mapper0 )
assertEquals ( 0 , image0 . Y ( ) )
assertNotNull ( floatArray0 )
assertNotNull ( imageOps0 )
assertNull ( kdTree1 )
assertEquals ( 10 , vector0 . capacity ( ) )
assertNull ( kdTree1 )
assertNull ( kdTree1 )
assertNull ( floatArray0 )
assertEquals ( ColorModel . RGB , realColorImage0 . getColorModel ( ) )
assertNotNull ( realGrayImage1 )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . avgAbsKappa , 0 . 01D )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . avgKappaSquare , 0 . 01D )
assertNotNull ( realGrayImage1 )
assertNotNull ( realGrayImage1 )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . avgAbsKappa , 0 . 01D )
assertNotNull ( realGrayImage1 )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevKappaSquare , 0 . 01D )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevAbsKappa , 0 . 01D )
assertNotNull ( realGrayImage1 )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevAbsKappa , 0 . 01D )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . avgKappaSquare , 0 . 01D )
assertNotNull ( realGrayImage1 )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevKappaSquare , 0 . 01D )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevAbsKappa , 0 . 01D )
assertEquals ( 0 . 0 , localDifferentialGeometry0 . stdDevAbsKappa , 0 . 01D )
assertNotNull ( complexImage0 )
assertEquals ( "4 : 4\n64 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n4 : 4\n0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n0 . 0 0 . 0 0 . 0 0 . 0 \n" , complexImage0 . toString ( ) )
assertNull ( grayImage0 )
assertNull ( grayImage0 )
assertNull ( grayImage0 )
assertNull ( grayImage0 )
assertNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( grayImage0 )
assertEquals ( "0 : 1\n" , grayImage0 . toString ( ) )
assertNotNull ( grayImage0 )
assertNotNull ( complexImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( complexImage0 )
assertNotNull ( colorImage0 )
assertNotNull ( realGrayImage0 )
assertNotNull ( colorImage0 )
assertEquals ( "0 : 0\n0 : 0\n0 : 0\n" , realColorImage0 . toString ( ) )
assertEquals ( "0 : 0\n0 : 0\n" , complexImage0 . toString ( ) )
assertEquals ( "15 : 15\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n" , grayImage0 . toString ( ) )
assertEquals ( "1 : 1\n255 \n" , grayImage1 . toString ( ) )
assertNotNull ( complexImage0 )
assertEquals ( "2 : 2\n2 . 0 2 . 0 \n2 . 0 2 . 0 \n" , realGrayImage0 . toString ( ) )
assertNotNull ( complexImage0 )
assertNotNull ( colorImage0 )
assertNotNull ( complexImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( complexImage0 )
assertEquals ( "3 : 3\n0 . 0 - 1 . 0 0 . 0 \n - 1 . 0 5 . 0 - 1 . 0 \n0 . 0 - 1 . 0 0 . 0 \n3 : 3\n0 . 0 - 1 . 0 0 . 0 \n - 1 . 0 5 . 0 - 1 . 0 \n0 . 0 - 1 . 0 0 . 0 \n3 : 3\n0 . 0 - 1 . 0 0 . 0 \n - 1 . 0 5 . 0 - 1 . 0 \n0 . 0 - 1 . 0 0 . 0 \n" , realColorImage0 . toString ( ) )
assertNotNull ( realColorImage0 )
assertNotNull ( grayImage0 )
assertNotNull ( imageGenerator0 )
assertEquals ( "0 : 0\n" , realGrayImage0 . toString ( ) )
assertEquals ( "1080 : 8\n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 - 1200 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 8 . 0 \n" , realGrayImage0 . toString ( ) )
assertNotNull ( realGrayImage0 )
assertEquals ( "0 : 9\n0 : 9\n" , complexImage0 . toString ( ) )
assertEquals ( "1 : 1\n - 0 . 0 \n1 : 1\n - 0 . 0 \n" , complexImage0 . toString ( ) )
assertNotNull ( realGrayImage0 )
assertNotNull ( realGrayImage0 )
assertEquals ( "1 : 1\nNaN \n" , realGrayImage0 . toString ( ) )
assertNotNull ( colorSpace0 )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray2 . equals ( floatArray1 ) )
assertFalse ( floatArray1 . equals ( floatArray2 ) )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray1 . equals ( floatArray2 ) )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertNotSame ( realColorImage2 , realColorImage1 )
assertNotSame ( realColorImage2 , realColorImage1 )
assertNotSame ( realColorImage1 , realColorImage2 )
assertNotNull ( realColorImage2 )
assertNotSame ( realColorImage2 , realColorImage1 )
assertEquals ( 16 , realColorImage1 . X ( ) )
assertNotNull ( realColorImage2 )
assertNotNull ( realColorImage1 )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray2 . equals ( floatArray0 ) )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertNotNull ( floatArray1 )
assertFalse ( floatArray1 . equals ( floatArray0 ) )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertFalse ( floatArray2 . equals ( floatArray0 ) )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertEquals ( false , boolean0 )
assertEquals ( "0\n\n" , phaseSignal0 . toString ( ) )
assertNotSame ( phaseSignal0 , phaseSignal1 )
assertEquals ( ( - 32768 . 0F ) , phaseSignal0 . max ( ) , 0 . 01F )
assertEquals ( 0 . 0F , phaseSignal0 . max ( ) , 0 . 01F )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1923 , int0 )
assertEquals ( 568 , rOI0 . length ( ) )
assertEquals ( - 1 , rOI0 . lbound ( ) )
assertEquals ( 1886 , rOI0 . ubound ( ) )
assertNotNull ( discreteSignal0 )
assertEquals ( - 1762 , discreteSignal0 . max ( ) )
assertEquals ( "5\n - 1000 0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal1 )
assertNotNull ( discreteSignal1 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertEquals ( 0 , discreteSignal1 . max ( ) )
assertNotNull ( discreteSignal1 )
assertSame ( discreteSignal0 , discreteSignal1 )
assertNotNull ( discreteSignal1 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertEquals ( 0 , discreteSignal0 . max ( ) )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertEquals ( "10\n0 0 0 0 0 0 0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal1 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal1 )
assertNotNull ( discreteSignal0 )
assertNotNull ( discreteSignal1 )
assertEquals ( 0 , discreteSignal1 . max ( ) )
assertEquals ( 1 , discreteSignal1 . length ( ) )
assertEquals ( 0 , discreteSignal1 . max ( ) )
assertEquals ( 0 , discreteSignal1 . min ( ) )
assertNotNull ( discreteSignal0 )
assertEquals ( 0 , discreteSignal0 . max ( ) )
assertNotNull ( discreteSignal0 )
assertEquals ( 0 . 0F , signalKernel0 . max ( ) , 0 . 01F )
assertNotNull ( signalKernel0 )
assertEquals ( "2\n1 . 0 - 1 . 0 \n" , signalKernel0 . toString ( ) )
assertNotNull ( signalKernel0 )
assertEquals ( 1 . 0F , signalKernel0 . min ( ) , 0 . 01F )
assertEquals ( ( - 32768 . 0F ) , magnitudeSignal0 . max ( ) , 0 . 01F )
assertNotSame ( magnitudeSignal0 , magnitudeSignal1 )
assertEquals ( 0 , magnitudeSignal0 . length ( ) )
assertEquals ( 0 . 0F , magnitudeSignal0 . min ( ) , 0 . 01F )
assertNotNull ( binarySignal0 )
assertEquals ( 0 , binarySignal0 . length ( ) )
assertEquals ( 0 , binarySignal0 . count ( ) )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertNotNull ( binarySignal0 )
assertEquals ( 0 , complexSignal0 . length ( ) )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( complexSignal0 )
assertNotNull ( realSignal1 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( 10 , realSignal0 . length ( ) )
assertNotNull ( realSignal0 )
assertFalse ( floatArray0 . equals ( floatArray1 ) )
assertEquals ( "10\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , realSignal0 . toString ( ) )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( "0\n\n" , powerSignal1 . toString ( ) )
assertEquals ( "0\n\n" , powerSignal0 . toString ( ) )
assertEquals ( ( - 32768 . 0F ) , powerSignal0 . max ( ) , 0 . 01F )
assertNotNull ( powerSignal0 )
assertEquals ( "2\n1 . 0 2 . 0 \n" , realSignal0 . toString ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( 0 , discreteSignal1 . max ( ) )
assertEquals ( "5\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , realSignal0 . toString ( ) )
assertNotNull ( realSignal0 )
assertEquals ( "2\n2 . 0 0 . 0 \n2\n0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( 0 . 3733629F , signalKernel0 . min ( ) , 0 . 01F )
assertEquals ( "2\n1 . 0 0 . 0 \n2\n0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( "603\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n" , discreteSignal1 . toString ( ) )
assertEquals ( 948 , discreteSignal1 . length ( ) )
assertNotNull ( discreteSignal1 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( 0 . 0F , realSignal0 . max ( ) , 0 . 01F )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( "4\n - 1 3 5 7 \n" , discreteSignal0 . toString ( ) )
assertEquals ( ( - 1 . 0F ) , signalKernel0 . min ( ) , 0 . 01F )
assertEquals ( ( - 352 . 68115F ) , realSignal0 . min ( ) , 0 . 01F )
assertEquals ( 620 , discreteSignal0 . max ( ) )
assertNotSame ( binarySignal0 , binarySignal1 )
assertNotNull ( realSignal0 )
assertEquals ( 3 , binarySignal1 . count ( ) )
assertEquals ( 0 , binarySignal1 . count ( ) )
assertEquals ( 255 , discreteSignal1 . min ( ) )
assertEquals ( 1 , realSignal0 . length ( ) )
assertEquals ( 0 . 0F , realSignal0 . min ( ) , 0 . 01F )
assertEquals ( 0 . 0F , realSignal0 . max ( ) , 0 . 01F )
assertEquals ( 1 , realSignal0 . length ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( 0 , discreteSignal1 . min ( ) )
assertNotNull ( discreteSignal1 )
assertNotNull ( realSignal0 )
assertNotSame ( binarySignal0 , binarySignal1 )
assertEquals ( 255 , discreteSignal0 . max ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( "10\n77 0 0 0 0 0 0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertEquals ( 74 . 83321F , realSignal0 . min ( ) , 0 . 01F )
assertEquals ( 0 . 0F , realSignal0 . min ( ) , 0 . 01F )
assertEquals ( "10\n0 0 0 0 0 0 0 0 0 0 \n" , discreteSignal1 . toString ( ) )
assertEquals ( "4\n0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertNotNull ( signalKernel1 )
assertEquals ( 1 . 0F , signalKernel0 . min ( ) , 0 . 01F )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( ( - 32768 . 0F ) , signalKernel0 . max ( ) , 0 . 01F )
assertNotNull ( discreteSignal1 )
assertEquals ( - 470 , discreteSignal0 . min ( ) )
assertEquals ( "9\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , realSignal0 . toString ( ) )
assertEquals ( 0 . 0F , phaseSignal0 . max ( ) , 0 . 01F )
assertEquals ( "10\n0 0 0 0 0 0 0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertEquals ( 0 , discreteSignal0 . min ( ) )
assertNotNull ( phaseSignal1 )
assertEquals ( "380\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n" , discreteSignal0 . toString ( ) )
assertEquals ( "8\n - 0 . 0 - 0 . 0 - 0 . 0 - 0 . 0 - 0 . 0 - 0 . 0 - 0 . 0 - 0 . 0 \n" , signalKernel0 . toString ( ) )
assertNotNull ( discreteSignal1 )
assertEquals ( 32767 . 0F , signalKernel0 . min ( ) , 0 . 01F )
assertEquals ( 255 , discreteSignal0 . min ( ) )
assertEquals ( 255 , discreteSignal0 . max ( ) )
assertNotNull ( signalKernel1 )
assertEquals ( "8\n255 . 0 255 . 0 255 . 0 255 . 0 255 . 0 255 . 0 255 . 0 255 . 0 \n" , signalKernel0 . toString ( ) )
assertEquals ( "380\nn" , discreteSignal0 . toString ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , signalOutputStream1 . X ( ) )
assertEquals ( "512\nn512\nn" , complexSignal1 . toString ( ) )
assertEquals ( "2\n2 . 0 0 . 0 \n2\n0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertEquals ( "8\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n8\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertEquals ( "16\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n16\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertEquals ( "8\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n8\n0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 0 . 0 \n" , complexSignal0 . toString ( ) )
assertEquals ( 16 , complexSignal1 . length ( ) )
assertNotNull ( signalConverter0 )
assertEquals ( 2003 , discreteSignal1 . length ( ) )
assertEquals ( "0\n\n" , discreteSignal0 . toString ( ) )
assertEquals ( ( - 32768 . 0F ) , realSignal0 . max ( ) , 0 . 01F )
assertNotNull ( discreteSignal0 )
assertEquals ( ( - 32768 . 0F ) , realSignal0 . max ( ) , 0 . 01F )
assertNotNull ( complexSignal0 )
assertEquals ( "2\n1 . 0 1 . 0 \n" , realSignal0 . toString ( ) )
assertNotNull ( signalOps0 )
assertNotNull ( signalGenerator0 )
assertNotNull ( realSignal0 )
assertNotNull ( realSignal0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxAnchorX ( ) )
assertNotNull ( jImageCanvas0 )
assertNotNull ( jImageCanvas0 )
assertNotNull ( jImageCanvas0 )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxAnchorY ( ) )
assertEquals ( 8 , jImageCanvas0 . imWidth ( ) )
assertNotNull ( jImageCanvas0 )
assertEquals ( "java . awt . Dimension [ width = 0 , height = 0 ] " , dimension0 . toString ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertNotNull ( jImageCanvas0 )
assertNotNull ( jImageCanvas0 )
assertNotNull ( jImageCanvas0 )
assertNotNull ( jImageCanvas0 )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , int0 )
assertEquals ( - 1 , jImageCanvas0 . getSelectionBoxAnchorY ( ) )
assertEquals ( - 1 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentX ( ) )
assertNull ( rectangle0 )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxAnchorY ( ) )
assertNotNull ( jImageCanvas0 )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxExtentY ( ) )
assertEquals ( 0 , jImageCanvas0 . getSelectionBoxAnchorY ( ) )
assertNotNull ( signalCanvas0 )
assertNotNull ( signalCanvas0 )
assertNotNull ( signalCanvas0 )
assertEquals ( "canvas125" , signalCanvas0 . getName ( ) )
assertNotNull ( signalCanvas0 )
assertEquals ( false , signalCanvas0 . isDisplayable ( ) )
assertEquals ( "canvas179" , signalCanvas0 . getName ( ) )
assertEquals ( "canvas181" , signalCanvas0 . getName ( ) )
assertNotNull ( imageCanvas0 )
assertNotNull ( imageCanvas0 )
assertNotNull ( imageCanvas0 )
assertEquals ( "canvas652" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas705" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas726" , imageCanvas0 . getName ( ) )
assertNotNull ( imageCanvas0 )
assertEquals ( "canvas770" , imageCanvas0 . getName ( ) )
assertEquals ( "jigl . gui . ImageCanvas [ canvas780 , 0 , 0 , 0x0 , invalid ] " , imageCanvas0 . toString ( ) )
assertEquals ( "canvas790" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas827" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas848" , imageCanvas0 . getName ( ) )
assertNotNull ( imageCanvas0 )
assertEquals ( "jigl . gui . ImageCanvas [ canvas882 , 0 , 0 , 0x0 , invalid ] " , imageCanvas0 . toString ( ) )
assertNotNull ( imageCanvas0 )
assertNotNull ( imageCanvas0 )
assertNotNull ( imageCanvas0 )
assertEquals ( "canvas1243" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas1256" , imageCanvas0 . getName ( ) )
assertEquals ( "canvas1320" , imageCanvas0 . getName ( ) )
assertEquals ( "jigl . gui . ImageCanvas [ canvas1383 , 0 , 0 , 0x0 , invalid ] " , imageCanvas0 . toString ( ) )
assertEquals ( "jigl . gui . ImageCanvas [ canvas1396 , 0 , 0 , 0x0 , invalid ] " , imageCanvas0 . toString ( ) )
assertEquals ( "jigl . gui . ImageCanvas [ canvas1415 , 0 , 0 , 0x0 , invalid ] " , imageCanvas0 . toString ( ) )
assertNull ( image0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( integerArray0 )
assertNotNull ( intArray1 )
assertNotNull ( projectionMatrix0 )
assertEquals ( 0 , scaleMatrix0 . nColumns ( ) )
assertEquals ( 2 , scaleMatrix0 . nRows ( ) )
assertNotNull ( translationMatrix0 )
assertEquals ( 0 , vector0 . dim ( ) )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( vector0 )
assertNotNull ( rotationMatrix0 )
assertNotNull ( rotationMatrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertEquals ( 0 , matrix0 . nRows ( ) )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
assertNotNull ( matrix0 )
