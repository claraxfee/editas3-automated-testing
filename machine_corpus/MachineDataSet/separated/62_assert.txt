assertEquals ( NodeType . ENTITY_NODE , nodeType0 )
assertEquals ( ( short ) 6 , short0 )
assertEquals ( "5 , @_o4^F ] 5O : 5 , @_o4^F ] 5O" , qName0 . getQualifiedName ( ) )
assertNotNull ( qName0 )
assertEquals ( "t" , qName0 . getName ( ) )
assertNotNull ( qName1 )
assertNotNull ( qName0 )
assertEquals ( "" , qName0 . getQualifiedName ( ) )
assertEquals ( "H { aoj1RUm ? ^eMP" , qName0 . getName ( ) )
assertEquals ( "" , qName0 . getName ( ) )
assertEquals ( "'" , qName0 . getName ( ) )
assertEquals ( "c`3f ] X & z - ~~x = W@o" , qName0 . getNamespaceURI ( ) )
assertEquals ( "" , qName0 . getNamespaceURI ( ) )
assertEquals ( "" , qName0 . getNamespacePrefix ( ) )
assertNotNull ( qName0 )
assertEquals ( "5 , @_o4^F ] 5O" , qName0 . getNamespaceURI ( ) )
assertEquals ( "F" , qName0 . getName ( ) )
assertEquals ( "F" , qName1 . getName ( ) )
assertNotNull ( string0 )
assertNotNull ( qName0 )
assertNotNull ( qName1 )
assertEquals ( " [ P_ & @5%lH - o ? ? mHCG" , defaultProcessingInstruction0 . getName ( ) )
assertEquals ( false , defaultElement0 . hasContent ( ) )
assertEquals ( true , defaultText0 . supportsParent ( ) )
assertEquals ( " / " , defaultDocument0 . getPath ( ) )
assertEquals ( "" , defaultDocument0 . getTextTrim ( ) )
assertEquals ( "Comment" , defaultComment0 . getNodeTypeName ( ) )
assertEquals ( 13 , namespace0 . getNodeType ( ) )
assertEquals ( "Error occurred in DOM4J application . " , qName0 . getName ( ) )
assertEquals ( "text ( ) " , defaultEntity0 . getUniquePath ( ) )
assertEquals ( "lexic" , qName0 . getQualifiedName ( ) )
assertEquals ( false , defaultCDATA0 . hasContent ( ) )
assertNull ( attribute0 )
assertSame ( defaultAttribute1 , defaultAttribute0 )
assertNull ( defaultDocument1 )
assertNull ( document0 )
assertEquals ( NodeType . DOCUMENT_NODE , defaultDocument1 . getNodeTypeEnum ( ) )
assertNull ( backedList0 )
assertNull ( namespace0 )
assertEquals ( "namespace : : [ ( DefaultAbsoluteLocationPath ) : " , namespace1 . getUniquePath ( ) )
assertNull ( processingInstruction0 )
assertEquals ( true , dOMProcessingInstruction1 . supportsParent ( ) )
assertNull ( backedList0 )
assertNull ( backedList0 )
assertNull ( backedList0 )
assertNull ( backedList0 )
assertNull ( string0 )
assertEquals ( "e" , string0 )
assertEquals ( false , dOMDocument0 . isReadOnly ( ) )
assertEquals ( NodeType . ELEMENT_NODE , userDataElement0 . getNodeTypeEnum ( ) )
assertEquals ( true , indexedElement0 . supportsParent ( ) )
assertEquals ( " ! ) qw4 ( wm ; wDi#c2U_ : ! ) qw4 ( wm ; wDi#c2U_" , indexedElement0 . getXPathNameStep ( ) )
assertEquals ( 0 , rule0 . getAppearenceCount ( ) )
assertNull ( rule0 . getMatchesNodeName ( ) )
assertEquals ( false , indexedElement0 . isTextOnly ( ) )
assertEquals ( false , hashMap0 . isEmpty ( ) )
assertNotNull ( map0 )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 1 , hashMap0 . size ( ) )
assertNull ( rule1 )
assertNotNull ( string0 )
assertNull ( rule0 )
assertEquals ( 0 . 5 , rule1 . getPriority ( ) , 0 . 01D )
assertNotNull ( ruleArray0 )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertNull ( rule0 . getMode ( ) )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 1780 , rule0 . getAppearenceCount ( ) )
assertEquals ( 0 , int0 )
assertNotNull ( ruleArray0 )
assertEquals ( 0 . 5 , double0 , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 5 , int0 )
assertEquals ( ( - 0 . 5 ) , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 17 , rule0 . getImportPrecedence ( ) )
assertEquals ( ( - 18 . 496891053278386 ) , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( 0 . 5 , rule0 . getPriority ( ) , 0 . 01D )
assertEquals ( false , list0 . isEmpty ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertEquals ( " & ; " , defaultEntity0 . asXML ( ) )
assertEquals ( 1 , list0 . size ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertNull ( dOMCDATA0 . getPrefix ( ) )
assertEquals ( "#e" , stylesheet0 . getModeName ( ) )
assertNull ( action0 )
assertNull ( string0 )
assertEquals ( true , list0 . isEmpty ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertEquals ( "" , dOMElement0 . getNodeName ( ) )
assertEquals ( true , dOMDocument0 . hasChildNodes ( ) )
assertNull ( stylesheet0 . getModeName ( ) )
assertNotNull ( mode0 )
assertEquals ( - 1 , rule0 . getImportPrecedence ( ) )
assertEquals ( 1 , rule0 . getAppearenceCount ( ) )
assertEquals ( - 1 , rule0 . getImportPrecedence ( ) )
assertNull ( rule0 )
assertEquals ( true , dOMDocument0 . hasChildNodes ( ) )
assertNull ( string0 )
assertNull ( patternArray0 )
assertEquals ( 0 . 5 , double0 , 0 . 01D )
assertEquals ( "ANY_NODE" , nodeType0 . toString ( ) )
assertNull ( string0 )
assertEquals ( 5 , nodeType1 . ordinal ( ) )
assertNull ( patternArray0 )
assertEquals ( 0 . 5 , double0 , 0 . 01D )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( " [ XPath : bTQBDP * Tk5ZGcZ ] " , defaultXPath0 . toString ( ) )
assertEquals ( " [ XPath : bTQBDP * Tk5ZGcZ ] " , defaultXPath0 . toString ( ) )
assertEquals ( " [ XPath : VH_bIc_\" / S . 5ym ] " , defaultXPath0 . toString ( ) )
assertNotNull ( list0 )
assertEquals ( "VH_bIc_\" / S . 5ym" , defaultXPath0 . getText ( ) )
assertEquals ( " [ XPath : processing - instruction ( ) ] " , defaultXPath0 . toString ( ) )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( simpleVariableContext0 )
assertEquals ( " [ XPath : processing - instruction ( ) ] " , defaultXPath0 . toString ( ) )
assertNotNull ( object0 )
assertEquals ( " [ XPath : VH_bIc_\" / S . 5ym ] " , defaultXPath0 . toString ( ) )
assertEquals ( " / . \"Z' . na9 = e'" , baseElement1 . getUniquePath ( ) )
assertEquals ( " [ XPath : . \"Z' . na9 = e' ] " , defaultXPath0 . toString ( ) )
assertEquals ( true , list0 . isEmpty ( ) )
assertEquals ( 1 , list0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( " [ XPath : bTQBDP * Tk5ZGcZ ] " , defaultXPath0 . toString ( ) )
assertEquals ( " [ XPath : processing - instruction ( ) ] " , defaultXPath0 . toString ( ) )
assertEquals ( " * " , string0 )
assertEquals ( ( - 0 . 5 ) , double0 , 0 . 01D )
assertNull ( xPathPattern0 . getMatchesNodeName ( ) )
assertEquals ( NodeType . ELEMENT_NODE , nodeType0 )
assertNotNull ( string0 )
assertNull ( string0 )
assertNull ( patternArray0 )
assertEquals ( " / " , dOMDocument1 . getUniquePath ( ) )
assertEquals ( " . " , dOMElement0 . getStringValue ( ) )
assertEquals ( "" , dOMAttribute0 . getNamespaceURI ( ) )
assertEquals ( true , dOMElement0 . hasChildNodes ( ) )
assertEquals ( true , dOMDocument0 . hasChildNodes ( ) )
assertEquals ( " / " , dOMDocument0 . getPath ( ) )
assertEquals ( false , dOMNamespace0 . hasContent ( ) )
assertEquals ( true , userDataElement0 . hasContent ( ) )
assertEquals ( true , dOMDocument0 . hasChildNodes ( ) )
assertEquals ( false , sAXModifier0 . isPruneElements ( ) )
assertEquals ( true , sAXModifier0 . isPruneElements ( ) )
assertNotNull ( defaultDocumentFactory0 )
assertEquals ( - 1 , xMLWriter0 . getMaximumAllowedCharacter ( ) )
assertNull ( object0 )
assertEquals ( 0 , attributes2Impl0 . getLength ( ) )
assertEquals ( 150 , byteArrayOutputStream0 . size ( ) )
assertNotNull ( sTAXEventWriter0 )
assertNotNull ( xMLEventFactoryImpl0 )
assertNull ( xMLEventConsumer0 )
assertNull ( element0 )
assertNotNull ( pruningElementStack0 )
assertNotNull ( pruningElementStack0 )
assertFalse ( sAXValidator1 . equals ( sAXValidator0 ) )
assertNull ( errorHandler0 )
assertNotNull ( sAXParserImpl_JAXPSAXParser0 )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( "" , nonLazyElement0 . getNamespaceURI ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( true , hTMLWriter0 . resolveEntityRefs ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( " / SpaceRequiredInPI" , userDataElement0 . getUniquePath ( ) )
assertEquals ( true , hTMLWriter0 . isEscapeText ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( - 1 , hTMLWriter0 . getMaximumAllowedCharacter ( ) )
assertEquals ( false , userDataElement0 . isRootElement ( ) )
assertEquals ( false , sAXReader0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXReader0 . isMergeAdjacentText ( ) )
assertNotNull ( sAXReader0 )
assertEquals ( false , sAXReader0 . isIgnoreComments ( ) )
assertEquals ( true , sAXReader0 . isStringInternEnabled ( ) )
assertEquals ( false , sAXReader0 . isIgnoreComments ( ) )
assertEquals ( false , sAXReader0 . isIncludeExternalDTDDeclarations ( ) )
assertNotNull ( defaultDocumentFactory0 )
assertEquals ( false , sAXReader0 . isStripWhitespaceText ( ) )
assertEquals ( true , sAXReader0 . isValidating ( ) )
assertEquals ( false , sAXReader0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXReader0 . isIgnoreComments ( ) )
assertEquals ( false , sAXReader0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXReader0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXReader0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXReader0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXReader0 . isValidating ( ) )
assertNotNull ( sAXParserImpl_JAXPSAXParser0 )
assertEquals ( true , sAXReader0 . isStringInternEnabled ( ) )
assertEquals ( false , sAXReader0 . isIncludeExternalDTDDeclarations ( ) )
assertNull ( inputSource0 . getPublicId ( ) )
assertNull ( inputSource0 . getEncoding ( ) )
assertEquals ( "set ( int , Object ) unsuppGrted" , inputSource0 . getSystemId ( ) )
assertEquals ( "http : / / xml . org / sax / features / string - interning" , inputSource0 . getSystemId ( ) )
assertNotNull ( inputSource0 )
assertNotNull ( stringReader0 )
assertNull ( documentInputSource0 . getSystemId ( ) )
assertEquals ( "" , defaultDocument1 . getTextTrim ( ) )
assertEquals ( "Document" , defaultDocument0 . getNodeTypeName ( ) )
assertNotNull ( qName1 )
assertEquals ( " / " , dispatchHandler0 . getPath ( ) )
assertEquals ( " / " , dispatchHandler0 . getPath ( ) )
assertEquals ( " / " , dispatchHandler0 . getPath ( ) )
assertEquals ( " / " , dispatchHandler0 . getPath ( ) )
assertEquals ( " / " , dispatchHandler0 . getPath ( ) )
assertNotNull ( string0 )
assertEquals ( true , xMLWriter0 . resolveEntityRefs ( ) )
assertEquals ( true , xMLWriter0 . resolveEntityRefs ( ) )
assertNull ( xMLResult0 . getSystemId ( ) )
assertNull ( xMLResult0 . getSystemId ( ) )
assertSame ( xMLWriter1 , xMLWriter0 )
assertNull ( xMLResult0 . getSystemId ( ) )
assertEquals ( NodeType . DOCUMENT_NODE , dOMDocument0 . getNodeTypeEnum ( ) )
assertNull ( dOMDocumentResult0 . getSystemId ( ) )
assertNull ( dOMDocumentResult0 . getSystemId ( ) )
assertNull ( dOMDocumentResult0 . getSystemId ( ) )
assertNull ( dOMDocumentResult0 . getSystemId ( ) )
assertEquals ( false , sAXModifyReader0 . isIgnoreComments ( ) )
assertEquals ( false , sAXModifyReader0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXModifyReader0 . isPruneElements ( ) )
assertEquals ( false , sAXModifyReader0 . isPruneElements ( ) )
assertEquals ( false , sAXModifyReader0 . isStripWhitespaceText ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , sAXModifyReader0 . isIgnoreComments ( ) )
assertNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > \n < ? M # ; $9GwpV / wDb M # ; $9GwpV / wDb ? > " , charArrayWriter0 . toString ( ) )
assertNotNull ( xMLWriter0 )
assertEquals ( true , xMLWriter0 . resolveEntityRefs ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( true , xMLWriter0 . isEscapeText ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( " < | xmlns = \" | \" / > " , charArrayWriter0 . toString ( ) )
assertEquals ( 13 , charArrayWriter0 . size ( ) )
assertEquals ( " < ! - - | - - > " , charArrayWriter0 . toString ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( 1 , charArrayWriter0 . size ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( 5 , charArrayWriter0 . size ( ) )
assertEquals ( " | " , charArrayWriter0 . toString ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( " < ! [ CDATA [ Index value : ] ] > " , charArrayWriter0 . toString ( ) )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertNotNull ( xMLWriter0 )
assertEquals ( false , outputFormat0 . isOmitEncoding ( ) )
assertEquals ( "UTF - 8" , outputFormat0 . getEncoding ( ) )
assertEquals ( 0 , outputFormat0 . getNewLineAfterNTags ( ) )
assertEquals ( false , outputFormat0 . isXHTML ( ) )
assertEquals ( false , outputFormat0 . isOmitEncoding ( ) )
assertEquals ( 0 , outputFormat0 . getNewLineAfterNTags ( ) )
assertEquals ( false , outputFormat0 . isSuppressDeclaration ( ) )
assertEquals ( false , outputFormat0 . isExpandEmptyElements ( ) )
assertEquals ( false , outputFormat0 . isXHTML ( ) )
assertEquals ( false , outputFormat0 . isSuppressDeclaration ( ) )
assertEquals ( false , outputFormat0 . isOmitEncoding ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , outputFormat0 . isExpandEmptyElements ( ) )
assertEquals ( false , outputFormat0 . isTrimText ( ) )
assertEquals ( 0 , outputFormat0 . getNewLineAfterNTags ( ) )
assertEquals ( true , outputFormat0 . isNewLineAfterDeclaration ( ) )
assertEquals ( false , outputFormat0 . isXHTML ( ) )
assertEquals ( 0 , outputFormat0 . getNewLineAfterNTags ( ) )
assertNotNull ( string0 )
assertEquals ( " - omitEncoding" , outputFormat0 . getEncoding ( ) )
assertEquals ( "UTF - 8" , outputFormat0 . getEncoding ( ) )
assertEquals ( false , outputFormat0 . isXHTML ( ) )
assertEquals ( false , outputFormat0 . isExpandEmptyElements ( ) )
assertEquals ( '\'' , outputFormat0 . getAttributeQuoteCharacter ( ) )
assertEquals ( true , outputFormat0 . isTrimText ( ) )
assertEquals ( false , outputFormat0 . isTrimText ( ) )
assertEquals ( false , outputFormat0 . isXHTML ( ) )
assertEquals ( false , outputFormat0 . isNewlines ( ) )
assertNotNull ( pruningDispatchHandler0 )
assertEquals ( false , xmlPullParserFactory0 . isValidating ( ) )
assertEquals ( false , sAXWriter0 . isDeclareNamespaceAttributes ( ) )
assertEquals ( false , sAXWriter0 . isDeclareNamespaceAttributes ( ) )
assertEquals ( "Document" , dOMDocument1 . getNodeTypeName ( ) )
assertNull ( inputSource0 . getPublicId ( ) )
assertNotSame ( xMLFilterImpl0 , xMLFilterImpl1 )
assertNotNull ( sAXParserImpl_JAXPSAXParser0 )
assertNotNull ( jAXPHelper0 )
assertEquals ( false , documentImpl0 . getReadOnly ( ) )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( elementStack0 )
assertNotNull ( sAXParserImpl_JAXPSAXParser0 )
assertNotNull ( sAXParserImpl_JAXPSAXParser0 )
assertEquals ( true , sAXHelper0 . isVerboseErrorReporting ( ) )
assertEquals ( true , boolean0 )
assertNull ( xMLWriter0 )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isStripWhitespaceText ( ) )
assertNull ( locator2Impl0 . getEncoding ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXModifyContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , baseElement0 . isTextOnly ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeExternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , sAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , sAXContentHandler0 . isIncludeInternalDTDDeclarations ( ) )
assertEquals ( false , sAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isMergeAdjacentText ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isIgnoreComments ( ) )
assertEquals ( false , dOMSAXContentHandler0 . isStripWhitespaceText ( ) )
assertNull ( element0 )
assertEquals ( true , jAXBModifier0 . isPruneElements ( ) )
assertEquals ( false , jAXBModifier0 . isPruneElements ( ) )
assertEquals ( 0 , charArrayWriter0 . size ( ) )
assertEquals ( false , jAXBModifier0 . isPruneElements ( ) )
assertEquals ( false , jAXBReader0 . isPruneElements ( ) )
assertEquals ( false , jAXBReader0 . isPruneElements ( ) )
assertEquals ( false , jAXBReader0 . isPruneElements ( ) )
assertEquals ( false , jAXBReader0 . isPruneElements ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , jAXBReader0 . isPruneElements ( ) )
assertEquals ( false , jAXBReader0 . isPruneElements ( ) )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( ( - 1 ) , int0 )
assertSame ( nodeArray0 , nodeArray1 )
assertEquals ( true , arrayList0 . isEmpty ( ) )
assertEquals ( true , boolean0 )
assertEquals ( " [ ] " , contentListFacade0 . toString ( ) )
assertEquals ( " [ ] " , arrayList0 . toString ( ) )
assertEquals ( true , backedList0 . isEmpty ( ) )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertEquals ( " { } = null" , concurrentReaderHashMap_Entry0 . toString ( ) )
assertEquals ( " { } = null" , concurrentReaderHashMap_Entry0 . toString ( ) )
assertNotNull ( concurrentReaderHashMap0 )
assertNotNull ( concurrentReaderHashMap0 )
assertEquals ( " aJO + K$e ? t@l" , namespace0 . getURI ( ) )
assertEquals ( NodeType . NAMESPACE_NODE , namespace0 . getNodeTypeEnum ( ) )
assertEquals ( "namespace : : * [ name ( ) = '' ] " , namespace0 . getXPathNameStep ( ) )
assertEquals ( true , singleIterator0 . hasNext ( ) )
assertEquals ( true , boolean0 )
assertEquals ( 0 , namespaceStack0 . size ( ) )
assertEquals ( 0 , namespaceStack0 . size ( ) )
assertNotNull ( string0 )
assertEquals ( 0 , int0 )
assertNull ( namespace0 )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertNull ( string0 )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( false , boolean0 )
assertEquals ( 2 , namespaceStack0 . size ( ) )
assertEquals ( "" , qName0 . getNamespaceURI ( ) )
assertEquals ( "" , qName0 . getQualifiedName ( ) )
assertEquals ( "" , qName0 . getNamespaceURI ( ) )
assertEquals ( "" , qName0 . getNamespaceURI ( ) )
assertEquals ( "" , qName0 . getNamespaceURI ( ) )
assertNotNull ( qName0 )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertNotNull ( qName0 )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertEquals ( 1 , namespaceStack0 . size ( ) )
assertNotNull ( cloneHelper0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertEquals ( 2 , lazyList0 . size ( ) )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertNotNull ( lazyList0 )
assertEquals ( false , lazyList0 . isEmpty ( ) )
assertNotNull ( lazyList0 )
assertNull ( string0 )
assertEquals ( "YsQ5nzH2" , string0 )
assertNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertNotNull ( string0 )
assertEquals ( "U ] M45B\"'F > A1 : - " , string0 )
assertEquals ( " < ! ENTITY U ] M45B\"'F > A1 : - \" & #38 ; #60 ; ! ENTITY U ] M45B & #34 ;  & #39 ; F & #62 ; A1 : - & #34 ; U ] M45B & #38 ; #38 ; #34 ;  & #38 ; #38 ; #39 ; F & #38 ; #38 ; #62 ; A1 : - & #34 ; & #62 ; \" > " , internalEntityDecl0 . toString ( ) )
assertNull ( string0 )
assertEquals ( " < ! ENTITY U ] M45B\"'F > A1 : - \"U ] M45B & #34 ;  & #39 ; F & #62 ; A1 : - \" > " , string0 )
assertEquals ( " < ! ATTLIST 1R < Ot > `t #FIXED > #FIXED \"#FIXED\" > " , attributeDecl0 . toString ( ) )
assertNull ( string0 )
assertEquals ( " < ! ATTLIST < ! ATTLIST > ko ; lJpr + MN0 > " , attributeDecl0 . toString ( ) )
assertEquals ( " < ! ATTLIST #FIXED #FIXED > #FIXED \"#FIXED\" > " , attributeDecl0 . toString ( ) )
assertEquals ( " < ! ATTLIST #FIXED #FIXED > #FIXED \"#FIXED\" > " , attributeDecl0 . toString ( ) )
assertEquals ( " } K# / S" , attributeDecl0 . getElementName ( ) )
assertEquals ( "ko ; lJpr + MN0" , attributeDecl0 . getValue ( ) )
assertNotNull ( string0 )
assertEquals ( " < ! ATTLIST ko ; lJpr + MN0 ko ; lJpr + MN0 > " , attributeDecl0 . toString ( ) )
assertEquals ( " < ! ATTLIST #FIXED #FIXED > < ! ATTLIST null 1R < Ot > `t 1R < Ot > `t 1R < Ot > `t > > " , attributeDecl0 . toString ( ) )
assertEquals ( " < ! ATTLIST null null null \"null\" > " , string0 )
assertNotNull ( string0 )
assertEquals ( " < ! ATTLIST #FIXED #FIXED #FIXED #FIXED \"#FIXED\" > " , string0 )
assertEquals ( " < ! ELEMENT & rj5o > J t + ; cs ( ZN9V + N7Dt > " , elementDecl0 . toString ( ) )
assertEquals ( " < ! ELEMENT '3 ) A ! [ ) w9# | ] '3 ) A ! [ ) w9# | ] > " , string0 )
assertEquals ( "'3 ) A ! [ ) w9# | ] " , string0 )
assertEquals ( "" , elementDecl0 . getName ( ) )
assertNull ( elementDecl0 . getModel ( ) )
assertEquals ( "'3 ) A ! [ ) w9# | ] " , string0 )
assertNull ( object0 )
assertEquals ( "" , indexedElement0 . getText ( ) )
assertNotNull ( indexedDocumentFactory0 )
assertEquals ( "" , indexedElement0 . getTextTrim ( ) )
assertEquals ( "" , nonLazyElement0 . getQualifiedName ( ) )
assertNotNull ( nonLazyDocumentFactory0 )
assertNotNull ( userDataDocumentFactory0 )
assertEquals ( " > Z = qc5 ) & ZO ! " , userDataAttribute0 . getQualifiedName ( ) )
assertEquals ( false , userDataElement0 . hasMixedContent ( ) )
assertNull ( object0 )
assertNull ( object0 )
assertNull ( object0 )
assertEquals ( "$sGo { lQR2y ] #hA9\"Yp" , qName0 . getQualifiedName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 6 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 14 , int0 )
assertEquals ( ( - 36 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( ( - 1 ) , int0 )
assertNotNull ( enumeration0 )
assertEquals ( "" , string0 )
assertEquals ( ( - 1 ) , int0 )
assertEquals ( true , boolean0 )
assertEquals ( 1 , int0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , list0 . size ( ) )
assertNull ( node0 )
assertEquals ( false , boolean0 )
assertEquals ( false , enumeration0 . hasMoreElements ( ) )
assertEquals ( ( - 1 ) , int0 )
assertNull ( treeNode0 )
assertEquals ( 0 , int0 )
assertNull ( treeNode0 )
assertEquals ( false , leafTreeNode0 . getAllowsChildren ( ) )
assertEquals ( true , boolean0 )
assertEquals ( "" , string0 )
assertEquals ( "" , string0 )
assertNull ( object0 )
assertNull ( xMLTableDefinition0 )
assertEquals ( false , jRadioButtonMenuItem0 . isCursorSet ( ) )
assertEquals ( 1 , jTable0 . getColumnCount ( ) )
assertNull ( xMLTableColumnDefinition0 . getName ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , xMLTableColumnDefinition0 . getType ( ) )
assertNull ( xPath0 )
assertEquals ( 1025 , class0 . getModifiers ( ) )
assertNull ( xPath0 )
assertEquals ( 0 , xMLTableColumnDefinition0 . getType ( ) )
assertNull ( string0 )
assertEquals ( 0 , xMLTableColumnDefinition0 . getType ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 2 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 1 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( 3 , int0 )
assertEquals ( "string" , xMLTableColumnDefinition0 . getName ( ) )
assertEquals ( 0 , xMLTableColumnDefinition0 . getType ( ) )
assertEquals ( true , class0 . isInterface ( ) )
assertEquals ( 0 , xMLTableColumnDefinition0 . getType ( ) )
assertNull ( string0 )
assertEquals ( " < xml : osX | T / > " , beanElement0 . asXML ( ) )
assertNotNull ( beanDocumentFactory0 )
assertEquals ( "osX | T" , defaultAttribute0 . getText ( ) )
assertNull ( node0 )
assertEquals ( 0 , int0 )
assertNull ( node0 )
assertNull ( node0 )
assertEquals ( 1 , dOMAttributeNodeMap0 . getLength ( ) )
assertNotNull ( dOMAttribute1 )
assertNull ( node0 )
assertEquals ( " < ? xml version = \"1 . 0\" encoding = \"UTF - 8\" ? > \n < ! DOCTYPE 0 PUBLIC \"0\" \"0\" > < 0 xmlns = \"0\" / > " , dOMDocument0 . asXML ( ) )
assertEquals ( NodeType . ATTRIBUTE_NODE , dOMAttribute0 . getNodeTypeEnum ( ) )
assertNull ( dOMComment0 . getPrefix ( ) )
assertNull ( dOMElement0 . getNodeValue ( ) )
assertEquals ( false , dOMElement0 . hasContent ( ) )
assertEquals ( "#text" , dOMText0 . getNodeName ( ) )
assertEquals ( " < ! [ CDATA [ wO_JFBFg ] ] > " , dOMCDATA0 . asXML ( ) )
assertNotNull ( dOMDocumentFactory0 )
assertEquals ( 9 , dOMDocument0 . getNodeType ( ) )
assertEquals ( "namespace : : ( i , , %C / _H [ " , dOMNamespace0 . getXPathNameStep ( ) )
assertEquals ( " & n . ; " , dOMEntityReference0 . getStringValue ( ) )
assertEquals ( NodeType . PROCESSING_INSTRUCTION_NODE , dOMProcessingInstruction0 . getNodeTypeEnum ( ) )
assertEquals ( "xml" , dOMDocumentType0 . getSystemID ( ) )
assertEquals ( " & core ; " , dOMEntityReference0 . getStringValue ( ) )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertNotNull ( dOMDocument0 )
assertEquals ( false , boolean0 )
assertNull ( node0 )
assertNull ( node0 )
assertEquals ( "" , string0 )
assertEquals ( false , boolean0 )
assertEquals ( true , beanElement0 . hasContent ( ) )
assertEquals ( true , boolean0 )
assertNotNull ( nodeList0 )
assertEquals ( "" , string0 )
assertEquals ( "" , dOMCDATA0 . getData ( ) )
assertEquals ( false , boolean0 )
assertNull ( namedNodeMap0 )
assertNotNull ( dOMNodeHelper0 )
assertEquals ( 0 , dOMNodeHelper_EmptyNodeList0 . getLength ( ) )
assertEquals ( 0 , int0 )
assertNull ( node0 )
assertNull ( node0 )
assertNull ( node0 )
assertNull ( node0 )
assertNull ( node0 )
assertNull ( node0 )
assertEquals ( true , dOMElement0 . hasContent ( ) )
assertEquals ( "found system property , value = " , dOMElement1 . getLocalName ( ) )
assertEquals ( NodeType . COMMENT_NODE , dOMComment1 . getNodeTypeEnum ( ) )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , dOMElement0 . hasAttributes ( ) )
assertEquals ( 0 , int0 )
assertEquals ( 0 , int0 )
assertEquals ( " > z > z" , defaultCDATA0 . getText ( ) )
assertNotNull ( string0 )
assertEquals ( "text ( ) " , defaultText0 . getPath ( ) )
assertEquals ( "ReseFrvedPITargetReseFrvedPITarget" , dOMText0 . getData ( ) )
assertEquals ( "Text" , dOMText0 . getNodeTypeName ( ) )
assertEquals ( "comment ( ) " , defaultComment0 . getUniquePath ( ) )
assertEquals ( " < ! [ CDATA [ ] ] > " , defaultCDATA0 . asXML ( ) )
assertEquals ( true , defaultText0 . supportsParent ( ) )
assertEquals ( "00" , defaultText0 . asXML ( ) )
assertEquals ( " / J ] aWHR - ( Q / J ] aWHR - ( Q" , dOMElement0 . getPath ( ) )
assertEquals ( true , userDataElement1 . hasContent ( ) )
assertEquals ( "" , indexedElement0 . getStringValue ( ) )
assertEquals ( "" , indexedElement0 . getStringValue ( ) )
assertEquals ( "" , dOMDocument1 . getTextTrim ( ) )
assertSame ( dOMDocument1 , dOMDocument0 )
assertSame ( dOMDocument0 , dOMDocument1 )
assertNull ( document0 )
assertEquals ( false , dOMDocumentType1 . hasContent ( ) )
assertNull ( documentType0 )
assertSame ( dOMCDATA0 , dOMCDATA1 )
assertNull ( text0 )
assertEquals ( "unparsed - entity - uri" , dOMElement1 . getTagName ( ) )
assertNull ( element0 )
assertNull ( attr0 )
assertEquals ( "Unable to resolve prefix with null prefix resolver . " , dOMAttribute1 . getText ( ) )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( false , boolean0 )
assertEquals ( true , boolean0 )
